{"version":3,"sources":["../../../../node_modules/.pnpm/clipboard-copy@4.0.1/node_modules/clipboard-copy/index.js","../../../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js","../../src/third-party/code.tsx","../../src/components/text.tsx","../../src/context.tsx","../../src/components/asset-wrapper.tsx","../../src/components/header.tsx","../../src/icons/search-icon.tsx","../../src/utils.ts","../../src/components/page-icon.tsx","../../src/icons/default-page-icon.tsx","../../src/components/lazy-image.tsx","../../src/components/search-dialog.tsx","../../src/icons/clear-icon.tsx","../../src/icons/loading-icon.tsx","../../src/components/page-title.tsx","../../src/components/eoi.tsx","../../src/icons/type-github.tsx","../../src/components/mention-preview-card.tsx","../../src/components/graceful-image.tsx","../../src/components/asset.tsx","../../src/components/lite-youtube-embed.tsx","../../src/icons/check.tsx","../../src/components/checkbox.tsx","../../src/next.tsx","../../src/components/link-mention.tsx","../../src/icons/copy.tsx"],"sourcesContent":["/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction makeError () {\n  return new DOMException('The request is not allowed', 'NotAllowedError')\n}\n\nasync function copyClipboardApi (text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError()\n  }\n  return navigator.clipboard.writeText(text)\n}\n\nasync function copyExecCommand (text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n  span.style.webkitUserSelect = 'auto'\n  span.style.userSelect = 'all'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  const selection = window.getSelection()\n  const range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  let success = false\n  try {\n    success = window.document.execCommand('copy')\n  } finally {\n    // Cleanup\n    selection.removeAllRanges()\n    window.document.body.removeChild(span)\n  }\n\n  if (!success) throw makeError()\n}\n\nasync function clipboardCopy (text) {\n  try {\n    await copyClipboardApi(text)\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text)\n    } catch (err2) {\n      throw (err2 || err || makeError())\n    }\n  }\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","// eslint-disable-next-line import/no-duplicates\nimport 'prismjs'\nimport 'prismjs/components/prism-clike.min.js'\nimport 'prismjs/components/prism-css-extras.min.js'\nimport 'prismjs/components/prism-css.min.js'\nimport 'prismjs/components/prism-javascript.min.js'\nimport 'prismjs/components/prism-js-extras.min.js'\nimport 'prismjs/components/prism-json.min.js'\nimport 'prismjs/components/prism-jsx.min.js'\nimport 'prismjs/components/prism-tsx.min.js'\nimport 'prismjs/components/prism-typescript.min.js'\n\nimport copyToClipboard from 'clipboard-copy'\nimport { type CodeBlock } from 'notion-types'\nimport { getBlockTitle } from 'notion-utils'\n// eslint-disable-next-line import/no-duplicates, no-duplicate-imports\nimport prism from 'prismjs'\nimport * as React from 'react'\n\nimport { Text } from '../components/text'\nimport { useNotionContext } from '../context'\nimport CopyIcon from '../icons/copy'\nimport { cs } from '../utils'\n\nexport function Code({\n  block,\n  defaultLanguage = 'typescript',\n  className\n}: {\n  block: CodeBlock\n  defaultLanguage?: string\n  className?: string\n}) {\n  const [isCopied, setIsCopied] = React.useState(false)\n  const copyTimeout = React.useRef<number | undefined>(undefined)\n  const { recordMap } = useNotionContext()\n  const content = getBlockTitle(block, recordMap)\n  const language = (() => {\n    const languageNotion = (\n      block.properties?.language?.[0]?.[0] || defaultLanguage\n    ).toLowerCase()\n\n    switch (languageNotion) {\n      case 'c++':\n        return 'cpp'\n      case 'f#':\n        return 'fsharp'\n      default:\n        return languageNotion\n    }\n  })()\n  const caption = block.properties.caption\n\n  const codeRef = React.useRef<HTMLElement | null>(null)\n  React.useEffect(() => {\n    if (codeRef.current) {\n      try {\n        prism.highlightElement(codeRef.current)\n      } catch (err) {\n        console.warn('prismjs highlight error', err)\n      }\n    }\n  }, [codeRef])\n\n  const onClickCopyToClipboard = React.useCallback(() => {\n    copyToClipboard(content)\n    setIsCopied(true)\n\n    if (copyTimeout.current) {\n      clearTimeout(copyTimeout.current)\n      copyTimeout.current = undefined\n    }\n\n    copyTimeout.current = setTimeout(() => {\n      setIsCopied(false)\n    }, 1200) as unknown as number\n  }, [content, copyTimeout])\n\n  const copyButton = (\n    <div className='notion-code-copy-button' onClick={onClickCopyToClipboard}>\n      <CopyIcon />\n    </div>\n  )\n\n  return (\n    <>\n      <pre\n        className={cs('notion-code', `language-${language}`, className)}\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n      >\n        <div className='notion-code-copy'>\n          {copyButton}\n\n          {isCopied && (\n            <div className='notion-code-copy-tooltip'>\n              <div>{isCopied ? 'Copied' : 'Copy'}</div>\n            </div>\n          )}\n        </div>\n\n        <code className={`language-${language}`} ref={codeRef as any}>\n          {content}\n        </code>\n      </pre>\n\n      {caption && (\n        <figcaption className='notion-asset-caption'>\n          <Text value={caption} block={block} />\n        </figcaption>\n      )}\n    </>\n  )\n}\n","import {\n  type Block,\n  type Decoration,\n  type ExternalObjectInstance\n} from 'notion-types'\nimport { parsePageId } from 'notion-utils'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { formatDate, getHashFragmentValue } from '../utils'\nimport { EOI } from './eoi'\nimport { GracefulImage } from './graceful-image'\nimport { LinkMention, type LinkMentionData } from './link-mention'\nimport { PageTitle } from './page-title'\n\n/**\n * Renders a single piece of Notion text, including basic rich text formatting.\n *\n * These represent the innermost leaf nodes of a Notion subtree.\n *\n * TODO: I think this implementation would be more correct if the reduce just added\n * attributes to the final element's style.\n */\n\nexport function Text({\n  value,\n  block,\n  linkProps,\n  linkProtocol\n}: {\n  value?: Decoration[]\n  block: Block\n  linkProps?: any\n  linkProtocol?: string\n  inline?: boolean // TODO: currently unused\n}) {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =\n    useNotionContext()\n\n  return (\n    <React.Fragment>\n      {value?.map(([text, decorations], index) => {\n        // TODO: sometimes notion shows a max of N items to prevent overflow\n        // if (trim && index > 18) {\n        //   return null\n        // }\n\n        if (!decorations) {\n          if (text === ',') {\n            return <span key={index} style={{ padding: '0.5em' }} />\n          } else {\n            return <React.Fragment key={index}>{text}</React.Fragment>\n          }\n        }\n\n        const formatted = decorations.reduce(\n          (element: React.ReactNode, decorator) => {\n            switch (decorator[0]) {\n              case 'p': {\n                // link to an internal block (within the current workspace)\n                const blockId = decorator[1]\n                const linkedBlock = recordMap.block[blockId]?.value\n                if (!linkedBlock) {\n                  console.log('\"p\" missing block', blockId)\n                  return null\n                }\n\n                // console.log('p', blockId)\n\n                return (\n                  <components.PageLink\n                    className='notion-link'\n                    href={mapPageUrl(blockId)}\n                  >\n                    <PageTitle block={linkedBlock} />\n                  </components.PageLink>\n                )\n              }\n\n              case '‣': {\n                // link to an external block (outside of the current workspace)\n                const linkType = decorator[1][0]\n                const id = decorator[1][1]\n\n                switch (linkType) {\n                  case 'u': {\n                    const user = recordMap.notion_user[id]?.value\n\n                    if (!user) {\n                      console.log('\"‣\" missing user', id)\n                      return null\n                    }\n\n                    const src = mapImageUrl(user.profile_photo, block)\n                    if (!src) return null\n\n                    const name = [user.given_name, user.family_name]\n                      .filter(Boolean)\n                      .join(' ')\n\n                    return (\n                      <GracefulImage\n                        className='notion-user'\n                        src={src}\n                        alt={name}\n                      />\n                    )\n                  }\n\n                  default: {\n                    const linkedBlock = recordMap.block[id]?.value\n\n                    if (!linkedBlock) {\n                      console.log('\"‣\" missing block', linkType, id)\n                      return null\n                    }\n\n                    return (\n                      <components.PageLink\n                        className='notion-link'\n                        href={mapPageUrl(id)}\n                        {...linkProps}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                      >\n                        <PageTitle block={linkedBlock} />\n                      </components.PageLink>\n                    )\n                  }\n                }\n              }\n\n              case 'h':\n                return (\n                  <span className={`notion-${decorator[1]}`}>{element}</span>\n                )\n\n              case 'c':\n                return <code className='notion-inline-code'>{element}</code>\n\n              case 'b':\n                return <b>{element}</b>\n\n              case 'i':\n                return <em>{element}</em>\n\n              case 's':\n                return <s>{element}</s>\n\n              case '_':\n                return (\n                  <span className='notion-inline-underscore'>{element}</span>\n                )\n\n              case 'e':\n                return <components.Equation math={decorator[1]} inline />\n\n              case 'm':\n                // comment / discussion\n                return element //still need to return the base element\n\n              case 'a': {\n                const v = decorator[1]\n                const pathname = v.slice(1)\n                const id = parsePageId(pathname, { uuid: true })\n\n                if (\n                  (rootDomain && v.includes(rootDomain)) ||\n                  (id && v[0] === '/')\n                ) {\n                  const href =\n                    rootDomain && v.includes(rootDomain)\n                      ? v\n                      : `${mapPageUrl(id!)}${getHashFragmentValue(v)}`\n\n                  return (\n                    <components.PageLink\n                      className='notion-link'\n                      href={href}\n                      {...linkProps}\n                    >\n                      {element}\n                    </components.PageLink>\n                  )\n                } else {\n                  return (\n                    <components.Link\n                      className='notion-link'\n                      href={\n                        linkProtocol\n                          ? `${linkProtocol}:${decorator[1]}`\n                          : decorator[1]\n                      }\n                      {...linkProps}\n                    >\n                      {element}\n                    </components.Link>\n                  )\n                }\n              }\n\n              case 'd': {\n                const v = decorator[1]\n                const type = v?.type\n\n                if (type === 'date') {\n                  // Example: Jul 31, 2010\n                  const startDate = v.start_date\n\n                  return formatDate(startDate)\n                } else if (type === 'datetime') {\n                  // Example: Jul 31, 2010 20:00\n                  const startDate = v.start_date\n                  const startTime = v.start_time\n\n                  return `${formatDate(startDate)} ${startTime}`\n                } else if (type === 'daterange') {\n                  // Example: Jul 31, 2010 → Jul 31, 2020\n                  const startDate = v.start_date\n                  const endDate = v.end_date!\n\n                  return `${formatDate(startDate)} → ${formatDate(endDate)}`\n                } else {\n                  return element\n                }\n              }\n\n              case 'u': {\n                const userId = decorator[1]\n                const user = recordMap.notion_user[userId]?.value\n\n                if (!user) {\n                  console.log('missing user', userId)\n                  return null\n                }\n\n                const src = mapImageUrl(user.profile_photo, block)\n                if (!src) return null\n\n                const name = [user.given_name, user.family_name]\n                  .filter(Boolean)\n                  .join(' ')\n\n                return (\n                  <GracefulImage className='notion-user' src={src} alt={name} />\n                )\n              }\n\n              case 'lm': {\n                const metadata = decorator[1] as unknown as LinkMentionData\n                return <LinkMention metadata={metadata} />\n              }\n\n              case 'eoi': {\n                const blockId = decorator[1]\n                const externalObjectInstance = recordMap.block[blockId]\n                  ?.value as ExternalObjectInstance\n\n                return <EOI block={externalObjectInstance} inline={true} />\n              }\n\n              default:\n                if (process.env.NODE_ENV !== 'production') {\n                  console.log('unsupported text format', decorator)\n                }\n\n                return element\n            }\n          },\n          <>{text}</>\n        )\n\n        return <React.Fragment key={index}>{formatted}</React.Fragment>\n      })}\n    </React.Fragment>\n  )\n}\n","import { type ExtendedRecordMap } from 'notion-types'\nimport { defaultMapImageUrl, defaultMapPageUrl } from 'notion-utils'\nimport * as React from 'react'\n\nimport { AssetWrapper } from './components/asset-wrapper'\nimport { Checkbox as DefaultCheckbox } from './components/checkbox'\nimport { Header } from './components/header'\nimport { wrapNextImage, wrapNextLegacyImage, wrapNextLink } from './next'\nimport {\n  type MapImageUrlFn,\n  type MapPageUrlFn,\n  type NotionComponents,\n  type SearchNotionFn\n} from './types'\n\nexport interface NotionContext {\n  recordMap: ExtendedRecordMap\n  components: NotionComponents\n\n  mapPageUrl: MapPageUrlFn\n  mapImageUrl: MapImageUrlFn\n  searchNotion?: SearchNotionFn\n  isShowingSearch?: boolean\n  onHideSearch?: () => void\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage: boolean\n  darkMode: boolean\n  previewImages: boolean\n  forceCustomImages: boolean\n  showCollectionViewDropdown: boolean\n  showTableOfContents: boolean\n  minTableOfContentsItems: number\n  linkTableTitleProperties: boolean\n  isLinkCollectionToUrlProperty: boolean\n\n  defaultPageIcon?: string | null\n  defaultPageCover?: string | null\n  defaultPageCoverPosition?: number\n\n  zoom: any\n}\n\nexport interface PartialNotionContext {\n  recordMap?: ExtendedRecordMap\n  components?: Partial<NotionComponents>\n\n  mapPageUrl?: MapPageUrlFn\n  mapImageUrl?: MapImageUrlFn\n  searchNotion?: SearchNotionFn\n  isShowingSearch?: boolean\n  onHideSearch?: () => void\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage?: boolean\n  darkMode?: boolean\n  previewImages?: boolean\n  forceCustomImages?: boolean\n  showCollectionViewDropdown?: boolean\n  linkTableTitleProperties?: boolean\n  isLinkCollectionToUrlProperty?: boolean\n\n  showTableOfContents?: boolean\n  minTableOfContentsItems?: number\n\n  defaultPageIcon?: string | null\n  defaultPageCover?: string | null\n  defaultPageCoverPosition?: number\n\n  zoom?: any\n}\n\nfunction DefaultLink(props: any) {\n  return <a target='_blank' rel='noopener noreferrer' {...props} />\n}\nconst DefaultLinkMemo = React.memo(DefaultLink)\nfunction DefaultPageLink(props: any) {\n  return <a {...props} />\n}\nconst DefaultPageLinkMemo = React.memo(DefaultPageLink)\n\nfunction DefaultEmbed(props: any) {\n  return <AssetWrapper {...props} />\n}\nconst DefaultHeader = Header\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function dummyLink({ href, rel, target, title, ...rest }: any) {\n  return <span {...rest} />\n}\n\nconst dummyComponent = (name: string) => () => {\n  console.warn(\n    `Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`\n  )\n\n  return null\n}\n\n// TODO: should we use React.memo here?\n// https://reactjs.org/docs/react-api.html#reactmemo\nconst dummyOverrideFn = (_: any, defaultValueFn: () => React.ReactNode) =>\n  defaultValueFn()\n\nconst defaultComponents: NotionComponents = {\n  Image: null, // disable custom images by default\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox: DefaultCheckbox,\n  Callout: undefined, // use the built-in callout rendering by default\n\n  Code: dummyComponent('Code'),\n  Equation: dummyComponent('Equation'),\n\n  Collection: dummyComponent('Collection'),\n  Property: undefined, // use the built-in property rendering by default\n\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  propertyAutoIncrementIdValue: dummyOverrideFn,\n\n  Pdf: dummyComponent('Pdf'),\n  Tweet: dummyComponent('Tweet'),\n  Modal: dummyComponent('Modal'),\n\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n}\n\nconst defaultNotionContext: NotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n\n  components: defaultComponents,\n\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: undefined,\n  isShowingSearch: false,\n  onHideSearch: undefined,\n\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  isLinkCollectionToUrlProperty: false,\n\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n\n  zoom: null\n}\n\nconst ctx = React.createContext<NotionContext>(defaultNotionContext)\n\nexport function NotionContextProvider({\n  components: themeComponents = {},\n  children,\n  mapPageUrl,\n  mapImageUrl,\n  rootPageId,\n  ...rest\n}: PartialNotionContext & {\n  children?: React.ReactNode\n}) {\n  for (const key of Object.keys(rest)) {\n    if ((rest as any)[key] === undefined) {\n      delete (rest as any)[key]\n    }\n  }\n\n  const wrappedThemeComponents = React.useMemo(\n    () => ({\n      ...themeComponents\n    }),\n    [themeComponents]\n  )\n\n  if (\n    wrappedThemeComponents.nextImage &&\n    wrappedThemeComponents.nextLegacyImage\n  ) {\n    console.warn(\n      'You should not pass both nextImage and nextLegacyImage. Only nextImage component will be used.'\n    )\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage)\n  } else if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage)\n  } else if (wrappedThemeComponents.nextLegacyImage) {\n    wrappedThemeComponents.Image = wrapNextLegacyImage(\n      themeComponents.nextLegacyImage\n    )\n  }\n\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink)\n  }\n\n  // ensure the user can't override default components with falsy values\n  // since it would result in very difficult-to-debug react errors\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!(wrappedThemeComponents as any)[key]) {\n      delete (wrappedThemeComponents as any)[key]\n    }\n  }\n\n  const value = React.useMemo(\n    () => ({\n      ...defaultNotionContext,\n      ...rest,\n      rootPageId,\n      mapPageUrl: mapPageUrl ?? defaultMapPageUrl(rootPageId),\n      mapImageUrl: mapImageUrl ?? defaultMapImageUrl,\n      components: { ...defaultComponents, ...wrappedThemeComponents }\n    }),\n    [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]\n  )\n\n  return <ctx.Provider value={value}>{children}</ctx.Provider>\n}\n\nexport const NotionContextConsumer = ctx.Consumer\n\nexport const useNotionContext = (): NotionContext => {\n  return React.useContext(ctx)\n}\n","import type * as React from 'react'\nimport { type BaseContentBlock, type Block } from 'notion-types'\nimport { parsePageId } from 'notion-utils'\n\nimport { useNotionContext } from '..'\nimport { cs } from '../utils'\nimport { Asset } from './asset'\nimport { Text } from './text'\n\nconst urlStyle = { width: '100%' }\n\nexport function AssetWrapper({\n  blockId,\n  block\n}: {\n  blockId: string\n  block: Block\n}) {\n  const value = block as BaseContentBlock\n  const { components, mapPageUrl, rootDomain, zoom } = useNotionContext()\n\n  let isURL = false\n  if (block.type === 'image') {\n    const caption: string | undefined = value?.properties?.caption?.[0]?.[0]\n    if (caption) {\n      const id = parsePageId(caption, { uuid: true })\n\n      const isPage = caption.charAt(0) === '/' && id\n      if (isPage || isValidURL(caption)) {\n        isURL = true\n      }\n    }\n  }\n\n  const figure = (\n    <figure\n      className={cs(\n        'notion-asset-wrapper',\n        `notion-asset-wrapper-${block.type}`,\n        value.format?.block_full_width && 'notion-asset-wrapper-full',\n        blockId\n      )}\n    >\n      <Asset block={value} zoomable={zoom && !isURL}>\n        {value?.properties?.caption && !isURL && (\n          <figcaption className='notion-asset-caption'>\n            <Text value={value.properties.caption} block={block} />\n          </figcaption>\n        )}\n      </Asset>\n    </figure>\n  )\n\n  // allows for an image to be a link\n  if (isURL) {\n    const caption: string | undefined = value?.properties?.caption?.[0]?.[0]\n    const id = parsePageId(caption, { uuid: true })\n    const isPage = caption?.charAt(0) === '/' && id\n    const captionHostname = extractHostname(caption)\n\n    return (\n      <components.PageLink\n        style={urlStyle}\n        href={isPage ? mapPageUrl(id) : caption}\n        target={\n          captionHostname &&\n          captionHostname !== rootDomain &&\n          !caption?.startsWith('/')\n            ? 'blank_'\n            : null\n        }\n      >\n        {figure}\n      </components.PageLink>\n    )\n  }\n\n  return figure\n}\n\nfunction isValidURL(str: string) {\n  // TODO: replace this with a more well-tested package\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n  return !!pattern.test(str)\n}\n\nfunction extractHostname(url?: string) {\n  try {\n    const hostname = new URL(url!).hostname\n    return hostname\n  } catch {\n    return ''\n  }\n}\n","import type * as types from 'notion-types'\nimport { getPageBreadcrumbs } from 'notion-utils'\nimport * as React from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook'\n\nimport { useNotionContext } from '../context'\nimport { SearchIcon } from '../icons/search-icon'\nimport { type SearchNotionFn } from '../types'\nimport { cs } from '../utils'\nimport { PageIcon } from './page-icon'\nimport { SearchDialog } from './search-dialog'\n\nexport function Header({\n  block\n}: {\n  block: types.CollectionViewPageBlock | types.PageBlock\n}) {\n  return (\n    <header className='notion-header'>\n      <div className='notion-nav-header'>\n        <Breadcrumbs block={block} />\n        <Search block={block} />\n      </div>\n    </header>\n  )\n}\n\nexport function Breadcrumbs({\n  block,\n  rootOnly = false\n}: {\n  block: types.Block\n  rootOnly?: boolean\n}) {\n  const { recordMap, mapPageUrl, components } = useNotionContext()\n\n  const breadcrumbs = React.useMemo(() => {\n    const tempBreadcrumbs = getPageBreadcrumbs(recordMap, block.id)\n    if (rootOnly) {\n      return [tempBreadcrumbs?.[0]].filter(Boolean)\n    }\n\n    return tempBreadcrumbs\n  }, [recordMap, block.id, rootOnly])\n\n  return (\n    <div className='breadcrumbs' key='breadcrumbs'>\n      {breadcrumbs?.map((breadcrumb, index: number) => {\n        if (!breadcrumb) {\n          return null\n        }\n\n        const pageLinkProps: any = {}\n        const componentMap = {\n          pageLink: components.PageLink\n        }\n\n        if (breadcrumb.active) {\n          componentMap.pageLink = (props: any) => <div {...props} />\n        } else {\n          pageLinkProps.href = mapPageUrl(breadcrumb.pageId)\n        }\n\n        return (\n          <React.Fragment key={breadcrumb.pageId}>\n            <componentMap.pageLink\n              className={cs('breadcrumb', breadcrumb.active && 'active')}\n              {...pageLinkProps}\n            >\n              {breadcrumb.icon && (\n                <PageIcon className='icon' block={breadcrumb.block} />\n              )}\n\n              {breadcrumb.title && (\n                <span className='title'>{breadcrumb.title}</span>\n              )}\n            </componentMap.pageLink>\n\n            {index < breadcrumbs.length - 1 && (\n              <span className='spacer'>/</span>\n            )}\n          </React.Fragment>\n        )\n      })}\n    </div>\n  )\n}\n\nexport function Search({\n  block,\n  search,\n  title = 'Search'\n}: {\n  block: types.Block\n  search?: SearchNotionFn\n  title?: React.ReactNode\n}) {\n  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =\n    useNotionContext()\n  const onSearchNotion = search || searchNotion\n\n  const [isSearchOpen, setIsSearchOpen] = React.useState(isShowingSearch)\n  React.useEffect(() => {\n    setIsSearchOpen(isShowingSearch)\n  }, [isShowingSearch])\n\n  const onOpenSearch = React.useCallback(() => {\n    setIsSearchOpen(true)\n  }, [])\n\n  const onCloseSearch = React.useCallback(() => {\n    setIsSearchOpen(false)\n    if (onHideSearch) {\n      onHideSearch()\n    }\n  }, [onHideSearch])\n\n  useHotkeys('cmd+p', (event) => {\n    onOpenSearch()\n    event.preventDefault()\n    event.stopPropagation()\n  })\n\n  useHotkeys('cmd+k', (event) => {\n    onOpenSearch()\n    event.preventDefault()\n    event.stopPropagation()\n  })\n\n  const hasSearch = !!onSearchNotion\n\n  return (\n    <>\n      {hasSearch && (\n        <div\n          role='button'\n          className={cs('breadcrumb', 'button', 'notion-search-button')}\n          onClick={onOpenSearch}\n        >\n          <SearchIcon className='searchIcon' />\n\n          {title && <span className='title'>{title}</span>}\n        </div>\n      )}\n\n      {isSearchOpen && hasSearch && (\n        <SearchDialog\n          isOpen={isSearchOpen}\n          rootBlockId={rootPageId || block?.id}\n          onClose={onCloseSearch}\n          searchNotion={onSearchNotion}\n        />\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nexport function SearchIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={cs('notion-icon', className)} viewBox='0 0 17 17' {...rest}>\n      <path d='M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z'></path>\n    </svg>\n  )\n}\n","import { type BlockMap } from 'notion-types'\n\nexport { formatDate, formatNotionDateTime, isUrl } from 'notion-utils'\n\nexport const cs = (...classes: Array<string | undefined | false>) =>\n  classes.filter((a) => !!a).join(' ')\n\nconst groupBlockContent = (blockMap: BlockMap): string[][] => {\n  const output: string[][] = []\n\n  let lastType: string | undefined\n  let index = -1\n\n  for (const id of Object.keys(blockMap)) {\n    const blockValue = blockMap[id]?.value\n\n    if (blockValue) {\n      if (blockValue.content)\n        for (const blockId of blockValue.content) {\n          const blockType = blockMap[blockId]?.value?.type\n\n          if (blockType && blockType !== lastType) {\n            index++\n            lastType = blockType\n            output[index] = []\n          }\n\n          if (index > -1) {\n            output[index]?.push(blockId)\n          }\n        }\n    }\n\n    lastType = undefined\n  }\n\n  return output\n}\n\nexport const getListNumber = (blockId: string, blockMap: BlockMap) => {\n  const groups = groupBlockContent(blockMap)\n  const group = groups.find((g) => g.includes(blockId))\n\n  if (!group) {\n    return\n  }\n\n  return group.indexOf(blockId) + 1\n}\n\nexport const getHashFragmentValue = (url: string) => {\n  return url.includes('#') ? url.replace(/^.+(#.+)$/, '$1') : ''\n}\n\nexport const isBrowser = typeof window !== 'undefined'\n\nconst youtubeDomains = new Set([\n  'youtu.be',\n  'youtube.com',\n  'www.youtube.com',\n  'youtube-nocookie.com',\n  'www.youtube-nocookie.com'\n])\n\nexport const getYoutubeId = (url: string): string | null => {\n  try {\n    const { hostname } = new URL(url)\n    if (!youtubeDomains.has(hostname)) {\n      return null\n    }\n    const regExp =\n      /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i\n\n    const match = url.match(regExp)\n    if (match && match[2]?.length === 11) {\n      return match[2]\n    }\n  } catch {\n    // ignore invalid urls\n  }\n\n  return null\n}\n\nexport const getUrlParams = (\n  url: string\n): Record<string, string> | undefined => {\n  try {\n    const { searchParams } = new URL(url)\n    const result: Record<string, string> = {}\n    for (const [key, value] of searchParams.entries()) {\n      result[key] = value\n    }\n\n    return result\n  } catch {\n    // ignore invalid urls\n  }\n\n  return\n}\n","import { type Block, type CalloutBlock, type PageBlock } from 'notion-types'\nimport { getBlockIcon, getBlockTitle } from 'notion-utils'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { DefaultPageIcon } from '../icons/default-page-icon'\nimport { cs, isUrl } from '../utils'\nimport { LazyImage } from './lazy-image'\n\nconst isIconBlock = (value: Block): value is PageBlock | CalloutBlock => {\n  return (\n    value.type === 'page' ||\n    value.type === 'callout' ||\n    value.type === 'collection_view' ||\n    value.type === 'collection_view_page'\n  )\n}\n\nexport function PageIconImpl({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}: {\n  block: Block\n  className?: string\n  inline?: boolean\n  hideDefaultIcon?: boolean\n  defaultIcon?: string | null\n}) {\n  const { mapImageUrl, recordMap, darkMode } = useNotionContext()\n  let isImage = false\n  let content: any = null\n\n  if (isIconBlock(block)) {\n    const icon = getBlockIcon(block, recordMap)?.trim() || defaultIcon\n    const title = getBlockTitle(block, recordMap)\n\n    if (icon && isUrl(icon)) {\n      const url = mapImageUrl(icon, block)\n      isImage = true\n\n      content = (\n        <LazyImage\n          src={url}\n          alt={title || 'page icon'}\n          className={cs(className, 'notion-page-icon')}\n        />\n      )\n    } else if (icon && icon.startsWith('/icons/')) {\n      const url =\n        'https://www.notion.so' +\n        icon +\n        '?mode=' +\n        (darkMode ? 'dark' : 'light')\n\n      content = (\n        <LazyImage\n          src={url}\n          alt={title || 'page icon'}\n          className={cs(className, 'notion-page-icon')}\n        />\n      )\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true\n        content = (\n          <DefaultPageIcon\n            className={cs(className, 'notion-page-icon')}\n            alt={title || 'page icon'}\n          />\n        )\n      }\n    } else {\n      isImage = false\n      content = (\n        <span\n          className={cs(className, 'notion-page-icon')}\n          role='img'\n          aria-label={icon}\n        >\n          {icon}\n        </span>\n      )\n    }\n  }\n\n  if (!content) {\n    return null\n  }\n\n  return (\n    <div\n      className={cs(\n        inline ? 'notion-page-icon-inline' : 'notion-page-icon-hero',\n        isImage ? 'notion-page-icon-image' : 'notion-page-icon-span'\n      )}\n    >\n      {content}\n    </div>\n  )\n}\n\nexport const PageIcon = React.memo(PageIconImpl)\n","import * as React from 'react'\n\nexport function DefaultPageIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 30 30' width='16'>\n      <path d='M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z'></path>\n    </svg>\n  )\n}\n","import { normalizeUrl } from 'notion-utils'\nimport * as React from 'react'\nimport { ImageState, LazyImageFull } from 'react-lazy-images'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\n\n/**\n * Progressive, lazy images modeled after Medium's LQIP technique.\n */\nexport function LazyImage({\n  src,\n  alt,\n  className,\n  style,\n  zoomable = false,\n  priority = false,\n  height,\n  ...rest\n}: {\n  src?: string\n  alt?: string\n  className?: string\n  style?: React.CSSProperties\n  height?: number\n  zoomable?: boolean\n  priority?: boolean\n}) {\n  const { recordMap, zoom, previewImages, forceCustomImages, components } =\n    useNotionContext()\n  const zoomRef = React.useRef(zoom ? zoom.clone() : null)\n  const previewImage = previewImages\n    ? (recordMap?.preview_images?.[src!] ??\n      recordMap?.preview_images?.[normalizeUrl(src)])\n    : null\n\n  const onLoad = React.useCallback(\n    (e: any) => {\n      if (zoomable && (e.target.src || e.target.srcset)) {\n        if (zoomRef.current) {\n          ;(zoomRef.current as any).attach(e.target)\n        }\n      }\n    },\n    [zoomRef, zoomable]\n  )\n\n  const attachZoom = React.useCallback(\n    (image: any) => {\n      if (zoomRef.current && image) {\n        ;(zoomRef.current as any).attach(image)\n      }\n    },\n    [zoomRef]\n  )\n\n  const attachZoomRef = React.useMemo(\n    () => (zoomable ? attachZoom : undefined),\n    [zoomable, attachZoom]\n  )\n\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth\n\n    if (components.Image) {\n      // TODO: could try using next/image onLoadComplete to replace LazyImageFull\n      // while retaining our blur implementation\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          style={style}\n          className={className}\n          width={previewImage.originalWidth}\n          height={previewImage.originalHeight}\n          blurDataURL={previewImage.dataURIBase64}\n          placeholder='blur'\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    return (\n      // @ts-expect-error LazyImage types are out-of-date.\n      <LazyImageFull src={src!} {...rest} experimentalDecode={true}>\n        {({ imageState, ref }) => {\n          const isLoaded = imageState === ImageState.LoadSuccess\n          const wrapperStyle: React.CSSProperties = {\n            width: '100%'\n          }\n          const imgStyle: React.CSSProperties = {}\n\n          if (height) {\n            wrapperStyle.height = height\n          } else {\n            imgStyle.position = 'absolute'\n            wrapperStyle.paddingBottom = `${aspectRatio * 100}%`\n          }\n\n          return (\n            <div\n              className={cs(\n                'lazy-image-wrapper',\n                isLoaded && 'lazy-image-loaded',\n                className\n              )}\n              style={wrapperStyle}\n            >\n              <img\n                className='lazy-image-preview'\n                src={previewImage.dataURIBase64}\n                alt={alt}\n                ref={ref}\n                style={style}\n                decoding='async'\n              />\n\n              <img\n                className='lazy-image-real'\n                src={src}\n                alt={alt}\n                ref={attachZoomRef}\n                style={{\n                  ...style,\n                  ...imgStyle\n                }}\n                width={previewImage.originalWidth}\n                height={previewImage.originalHeight}\n                decoding='async'\n                loading='lazy'\n              />\n            </div>\n          )\n        }}\n      </LazyImageFull>\n    )\n  } else {\n    // TODO: GracefulImage doesn't seem to support refs, but we'd like to prevent\n    // invalid images from loading as error states\n\n    /*\n      NOTE: Using next/image without a pre-defined width/height is a huge pain in\n      the ass. If we have a preview image, then this works fine since we know the\n      dimensions ahead of time, but if we don't, then next/image won't display\n      anything.\n\n      Since next/image is the most common use case for using custom images, and this\n      is likely to trip people up, we're disabling non-preview custom images for now.\n\n      If you have a use case that is affected by this, please open an issue on github.\n    */\n    if (components.Image && forceCustomImages) {\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          className={className}\n          style={style}\n          width={null}\n          height={height || null}\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    // Default image element\n    return (\n      <img\n        className={className}\n        style={style}\n        src={src}\n        alt={alt}\n        ref={attachZoomRef}\n        loading='lazy'\n        decoding='async'\n        {...rest}\n      />\n    )\n  }\n}\n","import type * as types from 'notion-types'\nimport throttle from 'lodash.throttle'\nimport { getBlockParentPage, getBlockTitle } from 'notion-utils'\nimport * as React from 'react'\n\nimport { NotionContextConsumer, NotionContextProvider } from '../context'\nimport { ClearIcon } from '../icons/clear-icon'\nimport { LoadingIcon } from '../icons/loading-icon'\nimport { SearchIcon } from '../icons/search-icon'\nimport { cs } from '../utils'\nimport { PageTitle } from './page-title'\n\nexport class SearchDialog extends React.Component<{\n  isOpen: boolean\n  rootBlockId: string\n  onClose: () => void\n  searchNotion: (params: types.SearchParams) => Promise<types.SearchResults>\n}> {\n  constructor(props: {\n    isOpen: boolean\n    rootBlockId: string\n    onClose: () => void\n    searchNotion: (params: types.SearchParams) => Promise<types.SearchResults>\n  }) {\n    super(props)\n    this._inputRef = React.createRef()\n  }\n\n  state: {\n    isLoading: boolean\n    query: string\n    searchResult: any | null\n    searchError: types.APIError | null\n  } = {\n    isLoading: false,\n    query: '',\n    searchResult: null,\n    searchError: null\n  }\n\n  _inputRef: any\n  _search: any\n\n  componentDidMount() {\n    this._search = throttle(this._searchImpl.bind(this), 1000)\n    this._warmupSearch()\n  }\n\n  render() {\n    const { isOpen, onClose } = this.props\n    const { isLoading, query, searchResult, searchError } = this.state\n\n    const hasQuery = !!query.trim()\n\n    return (\n      <NotionContextConsumer>\n        {(ctx) => {\n          const { components, defaultPageIcon, mapPageUrl } = ctx\n\n          return (\n            <components.Modal\n              isOpen={isOpen}\n              contentLabel='Search'\n              className='notion-search'\n              overlayClassName='notion-search-overlay'\n              onRequestClose={onClose}\n              onAfterOpen={this._onAfterOpen}\n            >\n              <div className='quickFindMenu'>\n                <div className='searchBar'>\n                  <div className='inlineIcon'>\n                    {isLoading ? (\n                      <LoadingIcon className='loadingIcon' />\n                    ) : (\n                      <SearchIcon />\n                    )}\n                  </div>\n\n                  <input\n                    className='searchInput'\n                    placeholder='Search'\n                    value={query}\n                    ref={this._inputRef}\n                    onChange={this._onChangeQuery}\n                  />\n\n                  {query && (\n                    <div\n                      role='button'\n                      className='clearButton'\n                      onClick={this._onClearQuery}\n                    >\n                      <ClearIcon className='clearIcon' />\n                    </div>\n                  )}\n                </div>\n\n                {hasQuery && searchResult && (\n                  <>\n                    {searchResult.results.length ? (\n                      <NotionContextProvider\n                        {...ctx}\n                        // TODO\n                        recordMap={searchResult.recordMap}\n                      >\n                        <div className='resultsPane'>\n                          {searchResult.results.map((result: any) => (\n                            <components.PageLink\n                              key={result.id}\n                              className={cs('result', 'notion-page-link')}\n                              href={mapPageUrl(\n                                result.page.id,\n                                // TODO\n                                searchResult.recordMap\n                              )}\n                            >\n                              <PageTitle\n                                block={result.page}\n                                defaultIcon={defaultPageIcon}\n                              />\n\n                              {result.highlight?.html && (\n                                <div\n                                  className='notion-search-result-highlight'\n                                  dangerouslySetInnerHTML={{\n                                    __html: result.highlight.html\n                                  }}\n                                />\n                              )}\n                            </components.PageLink>\n                          ))}\n                        </div>\n\n                        <footer className='resultsFooter'>\n                          <div>\n                            <span className='resultsCount'>\n                              {searchResult.total}\n                            </span>\n\n                            {searchResult.total === 1 ? ' result' : ' results'}\n                          </div>\n                        </footer>\n                      </NotionContextProvider>\n                    ) : (\n                      <div className='noResultsPane'>\n                        <div className='noResults'>No results</div>\n                        <div className='noResultsDetail'>\n                          Try different search terms\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n\n                {hasQuery && !searchResult && searchError && (\n                  <div className='noResultsPane'>\n                    <div className='noResults'>Search error</div>\n                  </div>\n                )}\n              </div>\n            </components.Modal>\n          )\n        }}\n      </NotionContextConsumer>\n    )\n  }\n\n  _onAfterOpen = () => {\n    if (this._inputRef.current) {\n      this._inputRef.current.focus()\n    }\n  }\n\n  _onChangeQuery = (e: any) => {\n    const query = e.target.value\n    this.setState({ query })\n\n    if (!query.trim()) {\n      this.setState({ isLoading: false, searchResult: null, searchError: null })\n      return\n    } else {\n      this._search()\n    }\n  }\n\n  _onClearQuery = () => {\n    this._onChangeQuery({ target: { value: '' } })\n  }\n\n  _warmupSearch = async () => {\n    const { searchNotion, rootBlockId } = this.props\n\n    // search is generally implemented as a serverless function wrapping the notion\n    // private API, upon opening the search dialog, so we eagerly invoke an empty\n    // search in order to warm up the serverless lambda\n    await searchNotion({\n      query: '',\n      ancestorId: rootBlockId\n    })\n  }\n\n  _searchImpl = async () => {\n    const { searchNotion, rootBlockId } = this.props\n    const { query } = this.state\n\n    if (!query.trim()) {\n      this.setState({ isLoading: false, searchResult: null, searchError: null })\n      return\n    }\n\n    this.setState({ isLoading: true })\n    const result: any = await searchNotion({\n      query,\n      ancestorId: rootBlockId\n    })\n\n    console.log('search', query, result)\n\n    let searchResult: any = null // TODO\n    let searchError: types.APIError | null = null\n\n    if (result.error || result.errorId) {\n      searchError = result\n    } else {\n      searchResult = { ...result }\n\n      const results = searchResult.results\n        .map((result: any) => {\n          const block = searchResult.recordMap.block[result.id]?.value\n          if (!block) return\n\n          const title = getBlockTitle(block, searchResult.recordMap)\n          if (!title) {\n            return\n          }\n\n          result.title = title\n          result.block = block\n          result.recordMap = searchResult.recordMap\n          result.page =\n            getBlockParentPage(block, searchResult.recordMap, {\n              inclusive: true\n            }) || block\n\n          if (!result.page.id) {\n            return\n          }\n\n          if (result.highlight?.text) {\n            result.highlight.html = result.highlight.text\n              .replaceAll(/<gzknfouu>/gi, '<b>')\n              .replaceAll(/<\\/gzknfouu>/gi, '</b>')\n          }\n\n          return result\n        })\n        .filter(Boolean)\n\n      // dedupe results by page id\n      const searchResultsMap = Object.fromEntries(\n        results.map((result: any) => [result.page.id, result])\n      )\n      searchResult.results = Object.values(searchResultsMap)\n    }\n\n    if (this.state.query === query) {\n      this.setState({ isLoading: false, searchResult, searchError })\n    }\n  }\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nexport function ClearIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={cs('notion-icon', className)} {...rest} viewBox='0 0 30 30'>\n      <path d='M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z'></path>\n    </svg>\n  )\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nexport function LoadingIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={cs('notion-icon', className)} {...rest} viewBox='0 0 24 24'>\n      <defs>\n        <linearGradient\n          x1='28.1542969%'\n          y1='63.7402344%'\n          x2='74.6289062%'\n          y2='17.7832031%'\n          id='linearGradient-1'\n        >\n          <stop stopColor='rgba(164, 164, 164, 1)' offset='0%' />\n          <stop\n            stopColor='rgba(164, 164, 164, 0)'\n            stopOpacity='0'\n            offset='100%'\n          />\n        </linearGradient>\n      </defs>\n\n      <g id='Page-1' stroke='none' strokeWidth='1' fill='none'>\n        <g transform='translate(-236.000000, -286.000000)'>\n          <g transform='translate(238.000000, 286.000000)'>\n            <circle\n              id='Oval-2'\n              stroke='url(#linearGradient-1)'\n              strokeWidth='4'\n              cx='10'\n              cy='12'\n              r='10'\n            />\n            <path\n              d='M10,2 C4.4771525,2 0,6.4771525 0,12'\n              id='Oval-2'\n              stroke='rgba(164, 164, 164, 1)'\n              strokeWidth='4'\n            />\n            <rect\n              id='Rectangle-1'\n              fill='rgba(164, 164, 164, 1)'\n              x='8'\n              y='0'\n              width='4'\n              height='4'\n              rx='8'\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import { type Block, type Decoration } from 'notion-types'\nimport { getBlockTitle } from 'notion-utils'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\nimport { PageIcon } from './page-icon'\nimport { Text } from './text'\n\nexport function PageTitleImpl({\n  block,\n  className,\n  defaultIcon,\n  ...rest\n}: {\n  block: Block\n  className?: string\n  defaultIcon?: string | null\n}) {\n  const { recordMap } = useNotionContext()\n\n  if (!block) return null\n\n  if (\n    block.type === 'collection_view_page' ||\n    block.type === 'collection_view'\n  ) {\n    const title = getBlockTitle(block, recordMap)\n    if (!title) {\n      return null\n    }\n\n    const titleDecoration: Decoration[] = [[title]]\n\n    return (\n      <span className={cs('notion-page-title', className)} {...rest}>\n        <PageIcon\n          block={block}\n          defaultIcon={defaultIcon}\n          className='notion-page-title-icon'\n        />\n\n        <span className='notion-page-title-text'>\n          <Text value={titleDecoration} block={block} />\n        </span>\n      </span>\n    )\n  }\n\n  if (!block.properties?.title) {\n    return null\n  }\n\n  return (\n    <span className={cs('notion-page-title', className)} {...rest}>\n      <PageIcon\n        block={block}\n        defaultIcon={defaultIcon}\n        className='notion-page-title-icon'\n      />\n\n      <span className='notion-page-title-text'>\n        <Text value={block.properties?.title} block={block} />\n      </span>\n    </span>\n  )\n}\n\nexport const PageTitle = React.memo(PageTitleImpl)\n","import type * as React from 'react'\nimport { type Block } from 'notion-types'\n\nimport { useNotionContext } from '../context'\nimport SvgTypeGitHub from '../icons/type-github'\nimport { cs, formatNotionDateTime } from '../utils'\nimport { MentionPreviewCard } from './mention-preview-card'\n\n// External Object Instance\nexport function EOI({\n  block,\n  inline,\n  className\n}: {\n  block: Block\n  inline?: boolean\n  className?: string\n}) {\n  const { components } = useNotionContext()\n  const { original_url, attributes, domain } = block?.format || {}\n  if (!original_url || !attributes) {\n    return null\n  }\n\n  const title = attributes.find((attr: any) => attr.id === 'title')?.values[0]\n  let owner = attributes.find((attr: any) => attr.id === 'owner')?.values[0]\n  const lastUpdatedAt = attributes.find((attr: any) => attr.id === 'updated_at')\n    ?.values[0]\n  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null\n  let externalImage: React.ReactNode\n\n  switch (domain) {\n    case 'github.com':\n      externalImage = <SvgTypeGitHub />\n      if (owner) {\n        const parts = owner.split('/')\n        owner = parts.at(-1)\n      }\n      break\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\n          `Unsupported external_object_instance domain \"${domain}\"`,\n          JSON.stringify(block, null, 2)\n        )\n      }\n\n      return null\n  }\n\n  return (\n    <components.Link\n      target='_blank'\n      rel='noopener noreferrer'\n      href={original_url}\n      className={cs(\n        'notion-external',\n        inline ? 'notion-external-mention' : 'notion-external-block notion-row',\n        className\n      )}\n    >\n      {externalImage && (\n        <div className='notion-external-image'>{externalImage}</div>\n      )}\n\n      <div className='notion-external-description'>\n        <div className='notion-external-title'>{title}</div>\n        {!inline && owner ? (\n          <div className='notion-external-block-desc'>\n            {owner}\n            {lastUpdated && <span> • </span>}\n            {lastUpdated && `Updated ${lastUpdated}`}\n          </div>\n        ) : null}\n        {inline && (owner || lastUpdated) && (\n          <MentionPreviewCard\n            title={title}\n            owner={owner}\n            lastUpdated={lastUpdated}\n            domain={domain}\n            externalImage={externalImage}\n          />\n        )}\n      </div>\n    </components.Link>\n  )\n}\n","import type * as React from 'react'\n\nfunction SvgTypeGitHub(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 260 260' {...props}>\n      <g>\n        <path\n          d='M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z'\n          fill='#161614'\n        ></path>\n      </g>\n    </svg>\n  )\n}\n\nexport default SvgTypeGitHub\n","import type React from 'react'\n\nfunction capitalizeFirstLetter(str?: string) {\n  if (!str) return ''\n\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function MentionPreviewCard({\n  owner,\n  lastUpdated,\n  externalImage,\n  title,\n  domain\n}: {\n  owner?: string\n  lastUpdated?: string | null\n  title: string\n  domain: string\n  externalImage?: React.ReactNode\n}) {\n  return (\n    <div className='notion-external-subtitle'>\n      {externalImage && (\n        <div className='notion-preview-card-domain-warp'>\n          <div className='notion-preview-card-logo'>{externalImage}</div>\n          <div className='notion-preview-card-domain'>\n            {capitalizeFirstLetter(domain.split('.')[0])}\n          </div>\n        </div>\n      )}\n      <div className='notion-preview-card-title'>{title}</div>\n      {owner && (\n        <div className='notion-external-subtitle-item'>\n          <div className='notion-external-subtitle-item-name'>Owner</div>\n          <span className='notion-external-subtitle-item-desc'>{owner}</span>\n        </div>\n      )}\n      {lastUpdated && (\n        <div className='notion-external-subtitle-item'>\n          <div className='notion-external-subtitle-item-name'>Updated</div>\n          <span className='notion-external-subtitle-item-desc'>\n            {lastUpdated}\n          </span>\n        </div>\n      )}\n      {domain === 'github.com' && (\n        <div className='notion-preview-card-github-shields'>\n          <img\n            src={`https://img.shields.io/github/stars/${owner}/${title}?logo=github`}\n            alt=''\n          />\n          <img\n            src={`https://img.shields.io/github/last-commit/${owner}/${title}`}\n            alt=''\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Img, type ImgProps } from 'react-image'\n\nimport { isBrowser } from '../utils'\n\nexport function GracefulImage(props: ImgProps) {\n  if (isBrowser) {\n    return <Img {...props} />\n  } else {\n    // @ts-expect-error (must use the appropriate subset of props for <img> if using SSR)\n    return <img {...props} />\n  }\n}\n","import type * as React from 'react'\nimport { type BaseContentBlock, type Block } from 'notion-types'\nimport { getTextContent } from 'notion-utils'\n\nimport { useNotionContext } from '../context'\nimport { getUrlParams, getYoutubeId } from '../utils'\nimport { LazyImage } from './lazy-image'\nimport { LiteYouTubeEmbed } from './lite-youtube-embed'\n\nconst isServer = typeof window === 'undefined'\n\nconst supportedAssetTypes = new Set([\n  'replit',\n  'video',\n  'image',\n  'embed',\n  'figma',\n  'typeform',\n  'excalidraw',\n  'maps',\n  'tweet',\n  'pdf',\n  'gist',\n  'codepen',\n  'drive'\n])\n\nexport function Asset({\n  block,\n  zoomable = true,\n  children\n}: {\n  block: BaseContentBlock\n  children: any\n  zoomable?: boolean\n}) {\n  const { recordMap, mapImageUrl, components } = useNotionContext()\n\n  if (!block || !supportedAssetTypes.has(block.type)) {\n    return null\n  }\n\n  const style: React.CSSProperties = {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: 'column'\n  }\n\n  const assetStyle: React.CSSProperties = {}\n  // console.log('asset', block)\n\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format\n\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = '100vw'\n      } else {\n        style.width = '100%'\n      }\n\n      if (block.type === 'video') {\n        if (block_height) {\n          style.height = block_height\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`\n        } else if (block_preserve_scale) {\n          style.objectFit = 'contain'\n        }\n      } else if (block_aspect_ratio && block.type !== 'image') {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`\n      } else if (block_height) {\n        style.height = block_height\n      } else if (block_preserve_scale) {\n        if (block.type === 'image') {\n          style.height = '100%'\n        } else {\n          // TODO: this is just a guess\n          style.paddingBottom = '75%'\n          style.minHeight = 100\n        }\n      }\n    } else {\n      switch (block.format?.block_alignment) {\n        case 'center':\n          style.alignSelf = 'center'\n          break\n\n        case 'left':\n          style.alignSelf = 'start'\n          break\n\n        case 'right':\n          style.alignSelf = 'end'\n          break\n      }\n\n      if (block_width) {\n        style.width = block_width\n      }\n\n      if (block_preserve_scale && block.type !== 'image') {\n        style.paddingBottom = '50%'\n        style.minHeight = 100\n      } else {\n        if (block_height && block.type !== 'image') {\n          style.height = block_height\n        }\n      }\n    }\n\n    if (block.type === 'image') {\n      assetStyle.objectFit = 'cover'\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = 'contain'\n    }\n  }\n\n  let source =\n    recordMap.signed_urls?.[block.id] || block.properties?.source?.[0]?.[0]\n\n  if (!source) {\n    return null\n  }\n\n  if (block.space_id) {\n    const url = new URL(source)\n    url.searchParams.set('spaceId', block.space_id)\n    source = url.toString()\n  }\n\n  let content = null\n\n  if (block.type === 'tweet') {\n    const src = source\n    if (!src) return null\n\n    const id = src.split('?')?.[0]?.split('/').pop()\n    if (!id) return null\n\n    content = (\n      <div\n        style={{\n          ...assetStyle,\n          maxWidth: 420,\n          width: '100%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }}\n      >\n        <components.Tweet id={id} />\n      </div>\n    )\n  } else if (block.type === 'pdf') {\n    style.overflow = 'auto'\n    style.background = 'rgb(226, 226, 226)'\n    style.display = 'block'\n\n    if (!style.padding) {\n      style.padding = '8px 16px'\n    }\n\n    if (!isServer) {\n      // console.log('pdf', block, signedUrl)\n      content = <components.Pdf file={source} />\n    }\n  } else if (\n    block.type === 'embed' ||\n    block.type === 'video' ||\n    block.type === 'figma' ||\n    block.type === 'typeform' ||\n    block.type === 'gist' ||\n    block.type === 'maps' ||\n    block.type === 'excalidraw' ||\n    block.type === 'codepen' ||\n    block.type === 'drive' ||\n    block.type === 'replit'\n  ) {\n    if (\n      block.type === 'video' &&\n      source &&\n      !source.includes('youtube') &&\n      !source.includes('youtu.be') &&\n      !source.includes('vimeo') &&\n      !source.includes('wistia') &&\n      !source.includes('loom') &&\n      !source.includes('videoask') &&\n      !source.includes('getcloudapp') &&\n      !source.includes('tella')\n    ) {\n      style.paddingBottom = undefined\n\n      content = (\n        <video\n          playsInline\n          controls\n          preload='metadata'\n          style={assetStyle}\n          src={source}\n          title={block.type}\n        />\n      )\n    } else {\n      let src = block.format?.display_source || source\n\n      if (src) {\n        const youtubeVideoId: string | null =\n          block.type === 'video' ? getYoutubeId(src) : null\n        // console.log({ youtubeVideoId, src, format: block.format, style })\n\n        if (youtubeVideoId) {\n          const params = getUrlParams(src)\n          content = (\n            <LiteYouTubeEmbed\n              id={youtubeVideoId}\n              style={assetStyle}\n              className='notion-asset-object-fit'\n              params={params}\n            />\n          )\n        } else if (block.type === 'gist') {\n          if (!src.endsWith('.pibb')) {\n            src = `${src}.pibb`\n          }\n\n          assetStyle.width = '100%'\n          style.paddingBottom = '50%'\n\n          // TODO: GitHub gists do not resize their height properly\n          content = (\n            <iframe\n              style={assetStyle}\n              className='notion-asset-object-fit'\n              src={src}\n              title='GitHub Gist'\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n              scrolling='auto'\n            />\n          )\n        } else {\n          src += block.type === 'typeform' ? '&disable-auto-focus=true' : ''\n\n          content = (\n            <iframe\n              className='notion-asset-object-fit'\n              style={assetStyle}\n              src={src}\n              title={`iframe ${block.type}`}\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              allowFullScreen\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n              scrolling='auto'\n            />\n          )\n        }\n      }\n    }\n  } else if (block.type === 'image') {\n    // console.log('image', block)\n    //kind of a hack for now. New file.notion.so images aren't signed correctly\n    if (source.includes('file.notion.so')) {\n      source = block.properties?.source?.[0]?.[0]\n    }\n    const src = mapImageUrl(source, block as Block)\n    const caption = getTextContent(block.properties?.caption)\n    const alt = caption || 'notion image'\n\n    content = (\n      <LazyImage\n        src={src}\n        alt={alt}\n        zoomable={zoomable}\n        height={style.height as number}\n        style={assetStyle}\n      />\n    )\n  }\n\n  return (\n    <>\n      <div style={style}>\n        {content}\n        {block.type === 'image' && children}\n      </div>\n\n      {block.type !== 'image' && children}\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nconst qs = (params: Record<string, string>) => {\n  return Object.keys(params)\n    .map(\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key]!)}`\n    )\n    .join('&')\n}\n\ntype ImageType = 'jpg' | 'webp'\n\nconst resolutions = [120, 320, 480, 640, 1280] as const\ntype VideoResolution = (typeof resolutions)[number]\n\nconst resolutionMap: Record<VideoResolution, string> = {\n  120: 'default',\n  320: 'mqdefault',\n  480: 'hqdefault',\n  640: 'sddefault',\n  1280: 'maxresdefault'\n  // 2k, 4k, 8k images don't seem to be available\n  // Source: https://longzero.com/articles/youtube-thumbnail-sizes-url/\n}\n\nconst resolutionSizes = resolutions\n  .map((resolution) => `(max-width: ${resolution}px) ${resolution}px`)\n  .join(', ')\n\nfunction getPosterUrl(\n  id: string,\n  resolution: VideoResolution = 480,\n  type: ImageType = 'jpg'\n): string {\n  if (type === 'webp') {\n    return `https://i.ytimg.com/vi_webp/${id}/${resolutionMap[resolution]}.webp`\n  }\n\n  // Default to jpg\n  return `https://i.ytimg.com/vi/${id}/${resolutionMap[resolution]}.jpg`\n}\n\nfunction generateSrcSet(id: string, type: ImageType = 'jpg'): string {\n  return resolutions\n    .map((resolution) => `${getPosterUrl(id, resolution, type)} ${resolution}w`)\n    .join(', ')\n}\n\nexport function LiteYouTubeEmbed({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = 'YouTube video',\n  alt = 'Video preview',\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}: {\n  id: string\n  defaultPlay?: boolean\n  mute?: boolean\n  lazyImage?: boolean\n  iframeTitle?: string\n  alt?: string\n  params?: Record<string, string>\n  adLinksPreconnect?: boolean\n  style?: React.CSSProperties\n  className?: string\n}) {\n  const muteParam = mute || defaultPlay ? '1' : '0' // Default play must be muted\n  const queryString = React.useMemo(\n    () => qs({ autoplay: '1', mute: muteParam, ...params }),\n    [muteParam, params]\n  )\n\n  const ytUrl = 'https://www.youtube-nocookie.com'\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`\n\n  const [isPreconnected, setIsPreconnected] = React.useState(false)\n  const [iframeInitialized, setIframeInitialized] = React.useState(defaultPlay)\n  const [isIframeLoaded, setIsIframeLoaded] = React.useState(false)\n\n  const warmConnections = React.useCallback(() => {\n    if (isPreconnected) return\n    setIsPreconnected(true)\n  }, [isPreconnected])\n\n  const onLoadIframe = React.useCallback(() => {\n    if (iframeInitialized) return\n    setIframeInitialized(true)\n  }, [iframeInitialized])\n\n  const onIframeLoaded = React.useCallback(() => {\n    setIsIframeLoaded(true)\n  }, [])\n\n  return (\n    <>\n      {/*\n        'it seems pretty unlikely for a browser to support preloading but not WebP images'\n        Source: https://blog.laurenashpole.com/post/658079409151016960\n       */}\n      <link\n        rel='preload'\n        as='image'\n        href={getPosterUrl(id)}\n        imageSrcSet={generateSrcSet(id, 'webp')}\n        imageSizes={resolutionSizes}\n      />\n\n      {isPreconnected && (\n        <>\n          {/* The iframe document and most of its subresources come from youtube.com */}\n          <link rel='preconnect' href={ytUrl} />\n\n          {/* The botguard script is fetched off from google.com */}\n          <link rel='preconnect' href='https://www.google.com' />\n        </>\n      )}\n\n      {isPreconnected && adLinksPreconnect && (\n        <>\n          {/* Not certain if these ad related domains are in the critical path.\n              Could verify with domain-specific throttling.\n            */}\n          <link rel='preconnect' href='https://static.doubleclick.net' />\n          <link rel='preconnect' href='https://googleads.g.doubleclick.net' />\n        </>\n      )}\n\n      <div\n        onClick={onLoadIframe}\n        onPointerOver={warmConnections}\n        className={cs(\n          'notion-yt-lite',\n          isIframeLoaded && 'notion-yt-loaded',\n          iframeInitialized && 'notion-yt-initialized',\n          className\n        )}\n        style={style}\n      >\n        <picture>\n          {/*\n            Browsers which don't support srcSet will most likely not support webp too\n            These browsers will then just get the default 480 size jpg\n           */}\n          {resolutions.map((resolution) => (\n            <source\n              key={resolution}\n              srcSet={`${getPosterUrl(id, resolution, 'webp')} ${resolution}w`}\n              media={`(max-width: ${resolution}px)`}\n              type='image/webp'\n            />\n          ))}\n\n          <img\n            src={getPosterUrl(id)}\n            className='notion-yt-thumbnail'\n            loading={lazyImage ? 'lazy' : undefined}\n            alt={alt}\n          />\n        </picture>\n\n        <div className='notion-yt-playbtn' />\n\n        {iframeInitialized && (\n          <iframe\n            width='560'\n            height='315'\n            frameBorder='0'\n            allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            title={iframeTitle}\n            src={iframeSrc}\n            onLoad={onIframeLoaded}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n","import type * as React from 'react'\n\nfunction SvgCheck(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z' />\n    </svg>\n  )\n}\n\nexport default SvgCheck\n","import type * as React from 'react'\n\nimport CheckIcon from '../icons/check'\n\nexport function Checkbox({\n  isChecked\n}: {\n  isChecked: boolean\n  blockId?: string\n}) {\n  let content = null\n\n  if (isChecked) {\n    content = (\n      <div className='notion-property-checkbox-checked'>\n        <CheckIcon />\n      </div>\n    )\n  } else {\n    content = <div className='notion-property-checkbox-unchecked' />\n  }\n\n  return (\n    <span className='notion-property notion-property-checkbox'>{content}</span>\n  )\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport * as React from 'react'\nimport isEqual from 'react-fast-compare'\n\nexport const wrapNextImage = (NextImage: any): React.FC<any> => {\n  return React.memo(function ReactNotionXNextImage({\n    src,\n    alt,\n\n    width,\n    height,\n\n    className,\n\n    fill,\n\n    ...rest\n  }) {\n    if (fill === 'undefined') {\n      fill = !(width && height)\n    }\n\n    return (\n      <NextImage\n        className={className}\n        src={src}\n        alt={alt}\n        width={!fill && width && height ? width : undefined}\n        height={!fill && width && height ? height : undefined}\n        fill={fill}\n        {...rest}\n      />\n    )\n  }, isEqual)\n}\n\nexport const wrapNextLegacyImage = (NextLegacyImage: any): React.FC<any> => {\n  return React.memo(function ReactNotionXNextLegacyImage({\n    src,\n    alt,\n\n    width,\n    height,\n\n    className,\n    style,\n\n    layout,\n\n    ...rest\n  }) {\n    if (!layout) {\n      layout = width && height ? 'intrinsic' : 'fill'\n    }\n\n    return (\n      <NextLegacyImage\n        className={className}\n        src={src}\n        alt={alt}\n        width={layout === 'intrinsic' && width}\n        height={layout === 'intrinsic' && height}\n        objectFit={style?.objectFit}\n        objectPosition={style?.objectPosition}\n        layout={layout}\n        {...rest}\n      />\n    )\n  }, isEqual)\n}\n\nexport function wrapNextLink(NextLink: any) {\n  return ({\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale,\n    ...linkProps\n  }: any) => {\n    return (\n      <NextLink\n        href={href}\n        as={as}\n        passHref={passHref}\n        prefetch={prefetch}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        locale={locale}\n      >\n        <a {...linkProps} />\n      </NextLink>\n    )\n  }\n}\n","import * as React from 'react'\n\nexport type LinkMentionData = {\n  href: string\n  title: string\n  icon_url: string\n  description: string\n  link_provider: string\n  thumbnail_url: string\n}\n\nexport function LinkMention({ metadata }: { metadata: LinkMentionData }) {\n  return (\n    <span className='notion-link-mention'>\n      <LinkMentionInline metadata={metadata} />\n      <LinkMentionPreview metadata={metadata} />\n    </span>\n  )\n}\n\nfunction LinkMentionInline({ metadata }: { metadata: LinkMentionData }) {\n  return (\n    <a\n      href={metadata.href}\n      target='_blank'\n      rel='noopener noreferrer'\n      className='notion-link-mention-link'\n    >\n      <img\n        className='notion-link-mention-icon'\n        src={metadata.icon_url}\n        alt={metadata.link_provider}\n      />\n      {metadata.link_provider && (\n        <span className='notion-link-mention-provider'>\n          {metadata.link_provider}\n        </span>\n      )}\n      <span className='notion-link-mention-title'>{metadata.title}</span>\n    </a>\n  )\n}\n\nfunction LinkMentionPreview({ metadata }: { metadata: LinkMentionData }) {\n  return (\n    <div className='notion-link-mention-preview'>\n      <article className='notion-link-mention-card'>\n        <img\n          className='notion-link-mention-preview-thumbnail'\n          src={metadata.thumbnail_url}\n          alt={metadata.title}\n        />\n        <div className='notion-link-mention-preview-content'>\n          <p className='notion-link-mention-preview-title'>{metadata.title}</p>\n          <p className='notion-link-mention-preview-description'>\n            {metadata.description}\n          </p>\n          <div className='notion-link-mention-preview-footer'>\n            <img\n              className='notion-link-mention-preview-icon'\n              src={metadata.icon_url}\n              alt={metadata.link_provider}\n            />\n            <span className='notion-link-mention-preview-provider'>\n              {metadata.link_provider}\n            </span>\n          </div>\n        </div>\n      </article>\n    </div>\n  )\n}\n","import type * as React from 'react'\n\nfunction SvgCopy(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill='currentColor'\n      viewBox='0 0 16 16'\n      width='1em'\n      version='1.1'\n      {...props}\n    >\n      <path\n        fillRule='evenodd'\n        d='M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\n      />\n      <path\n        fillRule='evenodd'\n        d='M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\n      />\n    </svg>\n  )\n}\n\nexport default SvgCopy\n"],"mappings":"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","names":["result","throttle","getBlockTitle","React","parsePageId","React","React","React","React","jsx","React","jsx","jsx","getBlockTitle","React","jsx","jsx","jsxs","getBlockTitle","React","jsx","jsxs","getBlockTitle","jsx","jsxs","result","getBlockTitle","throttle","ctx","Fragment","jsx","jsxs","jsx","jsx","jsxs","jsx","jsxs","jsx","React","Fragment","jsx","jsxs","Fragment","jsx","jsxs","jsx","jsx","jsx","React","jsx","jsx","jsx","jsx","jsxs","Fragment","jsx","parsePageId","jsx","jsxs","Fragment","jsx","jsxs","getBlockTitle","copyToClipboard"]}