{"version":3,"sources":["../../../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js","../../../../node_modules/.pnpm/format-number@3.0.0/node_modules/format-number/index.js","../../src/third-party/collection.tsx","../../src/components/page-icon.tsx","../../src/context.tsx","../../src/components/asset-wrapper.tsx","../../src/components/header.tsx","../../src/icons/search-icon.tsx","../../src/utils.ts","../../src/components/search-dialog.tsx","../../src/icons/clear-icon.tsx","../../src/icons/loading-icon.tsx","../../src/components/page-title.tsx","../../src/components/text.tsx","../../src/components/eoi.tsx","../../src/icons/type-github.tsx","../../src/components/mention-preview-card.tsx","../../src/components/graceful-image.tsx","../../src/components/link-mention.tsx","../../src/components/lazy-image.tsx","../../src/components/asset.tsx","../../src/components/lite-youtube-embed.tsx","../../src/icons/check.tsx","../../src/components/checkbox.tsx","../../src/next.tsx","../../src/icons/default-page-icon.tsx","../../src/icons/collection-view-icon.tsx","../../src/icons/collection-view-board.tsx","../../src/icons/collection-view-calendar.tsx","../../src/icons/collection-view-gallery.tsx","../../src/icons/collection-view-list.tsx","../../src/icons/collection-view-table.tsx","../../src/third-party/collection-row.tsx","../../src/third-party/collection-column-title.tsx","../../src/icons/property-icon.tsx","../../src/icons/type-auto-increment-id.tsx","../../src/icons/type-checkbox.tsx","../../src/icons/type-date.tsx","../../src/icons/type-email.tsx","../../src/icons/type-file.tsx","../../src/icons/type-formula.tsx","../../src/icons/type-multi-select.tsx","../../src/icons/type-number.tsx","../../src/icons/type-person.tsx","../../src/icons/type-person-2.tsx","../../src/icons/type-phone-number.tsx","../../src/icons/type-relation.tsx","../../src/icons/type-select.tsx","../../src/icons/type-status.tsx","../../src/icons/type-text.tsx","../../src/icons/type-timestamp.tsx","../../src/icons/type-title.tsx","../../src/icons/type-url.tsx","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/defaultOptions.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constants.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructFrom.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/toDate.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeDates.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfDay.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarDays.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDayOfYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeek.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeek.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeekYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeekYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeek.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeekYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeekYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeek.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/addLeadingZeros.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/lightFormatters.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/formatters.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/longFormatters.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/protectedTokens.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isDate.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isValid.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/format.js","../../src/third-party/property.tsx","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/addDays.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/addMonths.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/add.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDate.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDay.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getHours.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getMinutes.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getMonth.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getYear.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeInterval.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInDays.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getRoundingMethod.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInHours.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMilliseconds.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMinutes.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/compareAsc.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarMonths.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfDay.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfMonth.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isLastDayOfMonth.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMonths.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInSeconds.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarYears.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInYears.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/intervalToDuration.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/subDays.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/subMonths.js","../../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/sub.js","../../src/third-party/eval-formula.ts","../../src/third-party/collection-view.tsx","../../src/third-party/collection-view-board.tsx","../../src/icons/empty-icon.tsx","../../src/third-party/collection-card.tsx","../../src/third-party/collection-group.tsx","../../src/third-party/collection-utils.ts","../../src/third-party/collection-view-gallery.tsx","../../src/third-party/collection-view-list.tsx","../../src/third-party/react-use.ts","../../src/third-party/collection-view-table.tsx"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","\nmodule.exports = formatter;\nmodule.exports.default = formatter;\n\nfunction formatter(options) {\n  options = options || {};\n\n\n  // *********************************************************************************************\n  // Set defaults for negatives\n  // options.negative, options.negativeOut, options.separator retained for backward compatibility\n  // *********************************************************************************************\n\n  // type of negative; default left\n  options.negativeType = options.negativeType || (options.negative === 'R' ? 'right' : 'left')\n\n  // negative symbols '-' or '()'\n  if (typeof options.negativeLeftSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'left':\n        options.negativeLeftSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeLeftSymbol = '(';\n        break;\n      default:\n        options.negativeLeftSymbol = '';\n    }\n  }\n  if (typeof options.negativeRightSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'right':\n        options.negativeRightSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeRightSymbol = ')';\n        break;\n      default:\n        options.negativeRightSymbol = '';\n    }\n  }\n\n  // whether negative symbol should be inside/outside prefix and suffix\n\n  if (typeof options.negativeLeftOut !== \"boolean\") {\n    options.negativeLeftOut = (options.negativeOut === false ? false : true);\n  }\n  if (typeof options.negativeRightOut !== \"boolean\") {\n    options.negativeRightOut = (options.negativeOut === false ? false : true);\n  }\n\n  //prefix and suffix\n  options.prefix = options.prefix || '';\n  options.suffix = options.suffix || '';\n\n  //separators\n  if (typeof options.integerSeparator !== 'string') {\n    options.integerSeparator = (typeof options.separator === 'string' ? options.separator : ',');\n  }\n  options.decimalsSeparator = typeof options.decimalsSeparator === 'string' ? options.decimalsSeparator : '';\n  options.decimal = options.decimal || '.';\n\n  //padders\n  options.padLeft = options.padLeft || -1 //default no padding\n  options.padRight = options.padRight || -1 //default no padding\n\n  function format(number, overrideOptions) {\n    overrideOptions = overrideOptions || {};\n\n    if (number || number === 0) {\n      number = '' + number;//convert number to string if it isn't already\n    } else {\n      return '';\n    }\n\n    //identify a negative number and make it absolute\n    var output = [];\n    var negative = number.charAt(0) === '-';\n    number = number.replace(/^\\-/g, '');\n\n    //Prepare output with left hand negative and/or prefix\n    if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n    if (negative) {\n      output.push(options.negativeLeftSymbol);\n    }\n    if (options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n\n    //Format core number\n    number = number.split('.');\n    if (options.round != null) round(number, options.round);\n    if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n    if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n    if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n    if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n    if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n    output.push(number[0]);\n    if (number[1]) {\n      output.push(options.decimal);\n      output.push(number[1]);\n    }\n\n    //Prepare output with right hand negative and/or prefix\n    if (options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n    if (negative) {\n      output.push(options.negativeRightSymbol);\n    }\n    if (!options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n\n    //join output and return\n    return output.join('');\n  }\n\n  format.negative = options.negative;\n  format.negativeOut = options.negativeOut;\n  format.negativeType = options.negativeType;\n  format.negativeLeftOut = options.negativeLeftOut;\n  format.negativeLeftSymbol = options.negativeLeftSymbol;\n  format.negativeRightOut = options.negativeRightOut;\n  format.negativeRightSymbol = options.negativeRightSymbol;\n  format.prefix = options.prefix;\n  format.suffix = options.suffix;\n  format.separate = options.separate;\n  format.integerSeparator = options.integerSeparator;\n  format.decimalsSeparator = options.decimalsSeparator;\n  format.decimal = options.decimal;\n  format.padLeft = options.padLeft;\n  format.padRight = options.padRight;\n  format.truncate = options.truncate;\n  format.round = options.round;\n\n  function unformat(number, allowedSeparators) {\n    allowedSeparators = allowedSeparators || [];\n    if (options.allowedSeparators) {\n      options.allowedSeparators.forEach(function (s) { allowedSeparators.push (s); });\n    }\n    allowedSeparators.push(options.integerSeparator);\n    allowedSeparators.push(options.decimalsSeparator);\n    number = number.replace(options.prefix, '');\n    number = number.replace(options.suffix, '');\n    var newNumber = number;\n    do {\n      number = newNumber;\n      for (var i = 0; i < allowedSeparators.length; i++) {\n        newNumber = newNumber.replace(allowedSeparators[i], '');\n      }\n    } while (newNumber != number);\n    return number;\n  }\n  format.unformat = unformat;\n\n  function validate(number, allowedSeparators) {\n    number = unformat(number, allowedSeparators);\n    number = number.split(options.decimal);\n    if (number.length > 2) {\n      return false;\n    } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n      return false;\n    }  else if (options.round != null && number[1] && number[1].length > options.round) {\n      return false;\n    } else {\n      return /^-?\\d+\\.?\\d*$/.test(number);\n    }\n  }\n  return format;\n}\n\n//where x is already the integer part of the number\nfunction addIntegerSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is already the decimal part of the number\nfunction addDecimalSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d{3})(\\d+)/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is the integer part of the number\nfunction padLeft(x, padding) {\n  x = x + '';\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return buf.join('') + x;\n}\n\n//where x is the decimals part of the number\nfunction padRight(x, padding) {\n  if (x) {\n    x += '';\n  } else {\n    x = '';\n  }\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return x + buf.join('');\n}\nfunction truncate(x, length) {\n  if (x) {\n    x += '';\n  }\n  if (x && x.length > length) {\n    return x.substr(0, length);\n  } else {\n    return x;\n  }\n}\n\n//where number is an array with 0th item as integer string and 1st item as decimal string (no negatives)\nfunction round(number, places) {\n  if (number[1] && places >= 0 && number[1].length > places) {\n    //truncate to correct number of decimal places\n    var decim = number[1].slice(0, places);\n    //if next digit was >= 5 we need to round up\n    if (+(number[1].substr(places, 1)) >= 5) {\n      //But first count leading zeros as converting to a number will loose them\n      var leadingzeros = \"\";\n      while (decim.charAt(0)===\"0\") {\n        leadingzeros = leadingzeros + \"0\";\n        decim = decim.substr(1);\n      }\n      //Then we can change decim to a number and add 1 before replacing leading zeros\n      decim = (+decim + 1) + '';\n      decim = leadingzeros + decim;\n      if (decim.length > places) {\n        //adding one has made it longer\n        number[0] = (+number[0]+ +decim.charAt(0)) + ''; //add value of firstchar to the integer part\n        decim = decim.substring(1);   //ignore the 1st char at the beginning which is the carry to the integer part\n      }\n    }\n    number[1] = decim;\n  }\n  return number;\n}\n","import type * as types from 'notion-types'\nimport {\n  getBlockCollectionId,\n  getBlockParentPage,\n  getTextContent\n} from 'notion-utils'\nimport * as React from 'react'\n\nimport { PageIcon } from '../components/page-icon'\nimport {\n  type NotionContext,\n  NotionContextProvider,\n  useNotionContext\n} from '../context'\nimport { CollectionViewIcon } from '../icons/collection-view-icon'\nimport { cs } from '../utils'\nimport { CollectionRow } from './collection-row'\nimport { CollectionView } from './collection-view'\nimport { useLocalStorage, useWindowSize } from './react-use'\n\nconst isServer = typeof window === 'undefined'\n\nexport function Collection({\n  block,\n  className,\n  ctx\n}: {\n  block:\n    | types.CollectionViewBlock\n    | types.CollectionViewPageBlock\n    | types.PageBlock\n  className?: string\n  ctx: NotionContext\n}) {\n  /**\n   * NOTE: there is a weird side effect of us using multiple bundles for\n   * collections, where `useNotionContext` returns a *different* context than for\n   * the main bundle.\n   *\n   * This is due to `React.createContext` being called in each bundle which includes\n   * `../context.ts`.\n   *\n   * To circumvent this issue, we're passing the context value directly to\n   * `Collection` so all children have the correct context values.\n   */\n  // console.log('Collection', Object.keys(recordMap.block).length)\n\n  const context: NotionContext = React.useMemo(\n    () => ({\n      ...ctx\n    }),\n    [ctx]\n  )\n\n  if (block.type === 'page') {\n    if (block.parent_table !== 'collection') {\n      return null\n    }\n\n    return (\n      <NotionContextProvider {...context}>\n        <div className='notion-collection-page-properties'>\n          <CollectionRow\n            block={block as types.PageBlock}\n            pageHeader={true}\n            className={className}\n          />\n        </div>\n      </NotionContextProvider>\n    )\n  } else {\n    return (\n      <NotionContextProvider {...context}>\n        <CollectionViewBlock block={block} className={className} />\n      </NotionContextProvider>\n    )\n  }\n}\n\nfunction CollectionViewBlock({\n  block,\n  className\n}: {\n  block: types.CollectionViewBlock | types.CollectionViewPageBlock\n  className?: string\n}) {\n  const { recordMap, showCollectionViewDropdown } = useNotionContext()\n  const { view_ids: viewIds } = block\n  const collectionId = getBlockCollectionId(block, recordMap)!\n\n  const [isMounted, setIsMounted] = React.useState(false)\n  React.useEffect(() => {\n    setIsMounted(true)\n  }, [])\n\n  const defaultCollectionViewId = viewIds[0]!\n  const [collectionState, setCollectionState] = useLocalStorage(block.id, {\n    collectionViewId: defaultCollectionViewId\n  })\n\n  const collectionViewId =\n    (isMounted &&\n      viewIds.find((id) => id && id === collectionState?.collectionViewId)) ||\n    defaultCollectionViewId\n\n  const onChangeView = React.useCallback(\n    (collectionViewId: string) => {\n      console.log('change collection view', collectionViewId)\n\n      setCollectionState({\n        ...collectionState,\n        collectionViewId\n      })\n    },\n    [collectionState, setCollectionState]\n  )\n\n  let { width: windowWidth } = useWindowSize()\n  if (isServer) {\n    windowWidth = 1024\n  }\n\n  const collection = recordMap.collection[collectionId]?.value\n  const collectionView = recordMap.collection_view[collectionViewId]?.value\n  const collectionData =\n    recordMap.collection_query[collectionId]?.[collectionViewId]\n  const parentPage = getBlockParentPage(block, recordMap)\n\n  const { width, padding } = React.useMemo(() => {\n    const style: React.CSSProperties = {}\n\n    if (collectionView?.type !== 'table' && collectionView?.type !== 'board') {\n      return {\n        style,\n        width: 0,\n        padding: 0\n      }\n    }\n\n    const width = windowWidth\n    // TODO: customize for mobile?\n    const maxNotionBodyWidth = 708\n    let notionBodyWidth = maxNotionBodyWidth\n\n    if (parentPage?.format?.page_full_width) {\n      notionBodyWidth = Math.trunc(width - 2 * Math.min(96, width * 0.08))\n    } else {\n      notionBodyWidth =\n        width < maxNotionBodyWidth\n          ? Math.trunc(width - width * 0.02) // 2vw\n          : maxNotionBodyWidth\n    }\n\n    const padding =\n      isServer && !isMounted ? 96 : Math.trunc((width - notionBodyWidth) / 2)\n    style.paddingLeft = padding\n    style.paddingRight = padding\n\n    return {\n      style,\n      width,\n      padding\n    }\n  }, [windowWidth, parentPage, collectionView?.type, isMounted])\n\n  // console.log({\n  //   width,\n  //   padding\n  // })\n\n  if (!(collection && collectionView && collectionData)) {\n    console.warn('skipping missing collection view for block', block.id, {\n      collectionId,\n      collectionViewId,\n      collectionView,\n      collectionData,\n      recordMap\n    })\n    return null\n  }\n\n  const title = getTextContent(collection.name).trim()\n  const showTitle =\n    collectionView.format?.hide_linked_collection_name !== true && title\n  if (collection.icon) {\n    block.format = {\n      ...block.format,\n      page_icon: collection.icon\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <div>\n          {viewIds.length > 1 && showCollectionViewDropdown && (\n            <CollectionViewTabs\n              collectionViewId={collectionViewId}\n              viewIds={viewIds}\n              onChangeView={onChangeView}\n            />\n          )}\n        </div>\n        {showTitle && (\n          <div className='notion-collection-header'>\n            <div className='notion-collection-header-title'>\n              <PageIcon\n                block={block}\n                className='notion-page-title-icon'\n                hideDefaultIcon\n              />\n              {title}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={cs('notion-collection', className)}>\n        <CollectionView\n          collection={collection}\n          collectionView={collectionView}\n          collectionData={collectionData}\n          padding={padding}\n          width={width}\n        />\n      </div>\n    </>\n  )\n}\n\nfunction CollectionViewTabs({\n  collectionViewId,\n  viewIds,\n  onChangeView\n}: {\n  collectionViewId: string\n  viewIds: string[]\n  onChangeView: (viewId: string) => unknown\n}) {\n  const { recordMap } = useNotionContext()\n\n  return (\n    <div className='notion-collection-view-tabs-row'>\n      {viewIds.map((viewId) => (\n        <button\n          onClick={() => onChangeView(viewId)}\n          key={viewId}\n          className={cs(\n            'notion-collection-view-tabs-content-item',\n            collectionViewId === viewId &&\n              'notion-collection-view-tabs-content-item-active'\n          )}\n        >\n          <CollectionViewColumnDesc\n            collectionView={recordMap.collection_view[viewId]?.value}\n          />\n        </button>\n      ))}\n    </div>\n  )\n}\n\nfunction CollectionViewColumnDesc({\n  collectionView,\n  className,\n  children,\n  ...rest\n}: {\n  collectionView?: types.CollectionView\n  className?: string\n  children?: React.ReactNode\n}) {\n  if (!collectionView) return null\n\n  const { type } = collectionView\n  const name =\n    collectionView.name || `${type[0]!.toUpperCase()}${type.slice(1)} view`\n\n  return (\n    <div className={cs('notion-collection-view-type', className)} {...rest}>\n      <CollectionViewIcon\n        className='notion-collection-view-type-icon'\n        type={type}\n      />\n\n      <span className='notion-collection-view-type-title'>{name}</span>\n\n      {children}\n    </div>\n  )\n}\n\nexport { PropertyImplMemo as Property } from './property'\n","import { type Block, type CalloutBlock, type PageBlock } from 'notion-types'\nimport { getBlockIcon, getBlockTitle } from 'notion-utils'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { DefaultPageIcon } from '../icons/default-page-icon'\nimport { cs, isUrl } from '../utils'\nimport { LazyImage } from './lazy-image'\n\nconst isIconBlock = (value: Block): value is PageBlock | CalloutBlock => {\n  return (\n    value.type === 'page' ||\n    value.type === 'callout' ||\n    value.type === 'collection_view' ||\n    value.type === 'collection_view_page'\n  )\n}\n\nexport function PageIconImpl({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}: {\n  block: Block\n  className?: string\n  inline?: boolean\n  hideDefaultIcon?: boolean\n  defaultIcon?: string | null\n}) {\n  const { mapImageUrl, recordMap, darkMode } = useNotionContext()\n  let isImage = false\n  let content: any = null\n\n  if (isIconBlock(block)) {\n    const icon = getBlockIcon(block, recordMap)?.trim() || defaultIcon\n    const title = getBlockTitle(block, recordMap)\n\n    if (icon && isUrl(icon)) {\n      const url = mapImageUrl(icon, block)\n      isImage = true\n\n      content = (\n        <LazyImage\n          src={url}\n          alt={title || 'page icon'}\n          className={cs(className, 'notion-page-icon')}\n        />\n      )\n    } else if (icon && icon.startsWith('/icons/')) {\n      const url =\n        'https://www.notion.so' +\n        icon +\n        '?mode=' +\n        (darkMode ? 'dark' : 'light')\n\n      content = (\n        <LazyImage\n          src={url}\n          alt={title || 'page icon'}\n          className={cs(className, 'notion-page-icon')}\n        />\n      )\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true\n        content = (\n          <DefaultPageIcon\n            className={cs(className, 'notion-page-icon')}\n            alt={title || 'page icon'}\n          />\n        )\n      }\n    } else {\n      isImage = false\n      content = (\n        <span\n          className={cs(className, 'notion-page-icon')}\n          role='img'\n          aria-label={icon}\n        >\n          {icon}\n        </span>\n      )\n    }\n  }\n\n  if (!content) {\n    return null\n  }\n\n  return (\n    <div\n      className={cs(\n        inline ? 'notion-page-icon-inline' : 'notion-page-icon-hero',\n        isImage ? 'notion-page-icon-image' : 'notion-page-icon-span'\n      )}\n    >\n      {content}\n    </div>\n  )\n}\n\nexport const PageIcon = React.memo(PageIconImpl)\n","import { type ExtendedRecordMap } from 'notion-types'\nimport { defaultMapImageUrl, defaultMapPageUrl } from 'notion-utils'\nimport * as React from 'react'\n\nimport { AssetWrapper } from './components/asset-wrapper'\nimport { Checkbox as DefaultCheckbox } from './components/checkbox'\nimport { Header } from './components/header'\nimport { wrapNextImage, wrapNextLegacyImage, wrapNextLink } from './next'\nimport {\n  type MapImageUrlFn,\n  type MapPageUrlFn,\n  type NotionComponents,\n  type SearchNotionFn\n} from './types'\n\nexport interface NotionContext {\n  recordMap: ExtendedRecordMap\n  components: NotionComponents\n\n  mapPageUrl: MapPageUrlFn\n  mapImageUrl: MapImageUrlFn\n  searchNotion?: SearchNotionFn\n  isShowingSearch?: boolean\n  onHideSearch?: () => void\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage: boolean\n  darkMode: boolean\n  previewImages: boolean\n  forceCustomImages: boolean\n  showCollectionViewDropdown: boolean\n  showTableOfContents: boolean\n  minTableOfContentsItems: number\n  linkTableTitleProperties: boolean\n  isLinkCollectionToUrlProperty: boolean\n\n  defaultPageIcon?: string | null\n  defaultPageCover?: string | null\n  defaultPageCoverPosition?: number\n\n  zoom: any\n}\n\nexport interface PartialNotionContext {\n  recordMap?: ExtendedRecordMap\n  components?: Partial<NotionComponents>\n\n  mapPageUrl?: MapPageUrlFn\n  mapImageUrl?: MapImageUrlFn\n  searchNotion?: SearchNotionFn\n  isShowingSearch?: boolean\n  onHideSearch?: () => void\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage?: boolean\n  darkMode?: boolean\n  previewImages?: boolean\n  forceCustomImages?: boolean\n  showCollectionViewDropdown?: boolean\n  linkTableTitleProperties?: boolean\n  isLinkCollectionToUrlProperty?: boolean\n\n  showTableOfContents?: boolean\n  minTableOfContentsItems?: number\n\n  defaultPageIcon?: string | null\n  defaultPageCover?: string | null\n  defaultPageCoverPosition?: number\n\n  zoom?: any\n}\n\nfunction DefaultLink(props: any) {\n  return <a target='_blank' rel='noopener noreferrer' {...props} />\n}\nconst DefaultLinkMemo = React.memo(DefaultLink)\nfunction DefaultPageLink(props: any) {\n  return <a {...props} />\n}\nconst DefaultPageLinkMemo = React.memo(DefaultPageLink)\n\nfunction DefaultEmbed(props: any) {\n  return <AssetWrapper {...props} />\n}\nconst DefaultHeader = Header\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function dummyLink({ href, rel, target, title, ...rest }: any) {\n  return <span {...rest} />\n}\n\nconst dummyComponent = (name: string) => () => {\n  console.warn(\n    `Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`\n  )\n\n  return null\n}\n\n// TODO: should we use React.memo here?\n// https://reactjs.org/docs/react-api.html#reactmemo\nconst dummyOverrideFn = (_: any, defaultValueFn: () => React.ReactNode) =>\n  defaultValueFn()\n\nconst defaultComponents: NotionComponents = {\n  Image: null, // disable custom images by default\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox: DefaultCheckbox,\n  Callout: undefined, // use the built-in callout rendering by default\n\n  Code: dummyComponent('Code'),\n  Equation: dummyComponent('Equation'),\n\n  Collection: dummyComponent('Collection'),\n  Property: undefined, // use the built-in property rendering by default\n\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  propertyAutoIncrementIdValue: dummyOverrideFn,\n\n  Pdf: dummyComponent('Pdf'),\n  Tweet: dummyComponent('Tweet'),\n  Modal: dummyComponent('Modal'),\n\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n}\n\nconst defaultNotionContext: NotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n\n  components: defaultComponents,\n\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: undefined,\n  isShowingSearch: false,\n  onHideSearch: undefined,\n\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  isLinkCollectionToUrlProperty: false,\n\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n\n  zoom: null\n}\n\nconst ctx = React.createContext<NotionContext>(defaultNotionContext)\n\nexport function NotionContextProvider({\n  components: themeComponents = {},\n  children,\n  mapPageUrl,\n  mapImageUrl,\n  rootPageId,\n  ...rest\n}: PartialNotionContext & {\n  children?: React.ReactNode\n}) {\n  for (const key of Object.keys(rest)) {\n    if ((rest as any)[key] === undefined) {\n      delete (rest as any)[key]\n    }\n  }\n\n  const wrappedThemeComponents = React.useMemo(\n    () => ({\n      ...themeComponents\n    }),\n    [themeComponents]\n  )\n\n  if (\n    wrappedThemeComponents.nextImage &&\n    wrappedThemeComponents.nextLegacyImage\n  ) {\n    console.warn(\n      'You should not pass both nextImage and nextLegacyImage. Only nextImage component will be used.'\n    )\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage)\n  } else if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage)\n  } else if (wrappedThemeComponents.nextLegacyImage) {\n    wrappedThemeComponents.Image = wrapNextLegacyImage(\n      themeComponents.nextLegacyImage\n    )\n  }\n\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink)\n  }\n\n  // ensure the user can't override default components with falsy values\n  // since it would result in very difficult-to-debug react errors\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!(wrappedThemeComponents as any)[key]) {\n      delete (wrappedThemeComponents as any)[key]\n    }\n  }\n\n  const value = React.useMemo(\n    () => ({\n      ...defaultNotionContext,\n      ...rest,\n      rootPageId,\n      mapPageUrl: mapPageUrl ?? defaultMapPageUrl(rootPageId),\n      mapImageUrl: mapImageUrl ?? defaultMapImageUrl,\n      components: { ...defaultComponents, ...wrappedThemeComponents }\n    }),\n    [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]\n  )\n\n  return <ctx.Provider value={value}>{children}</ctx.Provider>\n}\n\nexport const NotionContextConsumer = ctx.Consumer\n\nexport const useNotionContext = (): NotionContext => {\n  return React.useContext(ctx)\n}\n","import type * as React from 'react'\nimport { type BaseContentBlock, type Block } from 'notion-types'\nimport { parsePageId } from 'notion-utils'\n\nimport { useNotionContext } from '..'\nimport { cs } from '../utils'\nimport { Asset } from './asset'\nimport { Text } from './text'\n\nconst urlStyle = { width: '100%' }\n\nexport function AssetWrapper({\n  blockId,\n  block\n}: {\n  blockId: string\n  block: Block\n}) {\n  const value = block as BaseContentBlock\n  const { components, mapPageUrl, rootDomain, zoom } = useNotionContext()\n\n  let isURL = false\n  if (block.type === 'image') {\n    const caption: string | undefined = value?.properties?.caption?.[0]?.[0]\n    if (caption) {\n      const id = parsePageId(caption, { uuid: true })\n\n      const isPage = caption.charAt(0) === '/' && id\n      if (isPage || isValidURL(caption)) {\n        isURL = true\n      }\n    }\n  }\n\n  const figure = (\n    <figure\n      className={cs(\n        'notion-asset-wrapper',\n        `notion-asset-wrapper-${block.type}`,\n        value.format?.block_full_width && 'notion-asset-wrapper-full',\n        blockId\n      )}\n    >\n      <Asset block={value} zoomable={zoom && !isURL}>\n        {value?.properties?.caption && !isURL && (\n          <figcaption className='notion-asset-caption'>\n            <Text value={value.properties.caption} block={block} />\n          </figcaption>\n        )}\n      </Asset>\n    </figure>\n  )\n\n  // allows for an image to be a link\n  if (isURL) {\n    const caption: string | undefined = value?.properties?.caption?.[0]?.[0]\n    const id = parsePageId(caption, { uuid: true })\n    const isPage = caption?.charAt(0) === '/' && id\n    const captionHostname = extractHostname(caption)\n\n    return (\n      <components.PageLink\n        style={urlStyle}\n        href={isPage ? mapPageUrl(id) : caption}\n        target={\n          captionHostname &&\n          captionHostname !== rootDomain &&\n          !caption?.startsWith('/')\n            ? 'blank_'\n            : null\n        }\n      >\n        {figure}\n      </components.PageLink>\n    )\n  }\n\n  return figure\n}\n\nfunction isValidURL(str: string) {\n  // TODO: replace this with a more well-tested package\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n  return !!pattern.test(str)\n}\n\nfunction extractHostname(url?: string) {\n  try {\n    const hostname = new URL(url!).hostname\n    return hostname\n  } catch {\n    return ''\n  }\n}\n","import type * as types from 'notion-types'\nimport { getPageBreadcrumbs } from 'notion-utils'\nimport * as React from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook'\n\nimport { useNotionContext } from '../context'\nimport { SearchIcon } from '../icons/search-icon'\nimport { type SearchNotionFn } from '../types'\nimport { cs } from '../utils'\nimport { PageIcon } from './page-icon'\nimport { SearchDialog } from './search-dialog'\n\nexport function Header({\n  block\n}: {\n  block: types.CollectionViewPageBlock | types.PageBlock\n}) {\n  return (\n    <header className='notion-header'>\n      <div className='notion-nav-header'>\n        <Breadcrumbs block={block} />\n        <Search block={block} />\n      </div>\n    </header>\n  )\n}\n\nexport function Breadcrumbs({\n  block,\n  rootOnly = false\n}: {\n  block: types.Block\n  rootOnly?: boolean\n}) {\n  const { recordMap, mapPageUrl, components } = useNotionContext()\n\n  const breadcrumbs = React.useMemo(() => {\n    const tempBreadcrumbs = getPageBreadcrumbs(recordMap, block.id)\n    if (rootOnly) {\n      return [tempBreadcrumbs?.[0]].filter(Boolean)\n    }\n\n    return tempBreadcrumbs\n  }, [recordMap, block.id, rootOnly])\n\n  return (\n    <div className='breadcrumbs' key='breadcrumbs'>\n      {breadcrumbs?.map((breadcrumb, index: number) => {\n        if (!breadcrumb) {\n          return null\n        }\n\n        const pageLinkProps: any = {}\n        const componentMap = {\n          pageLink: components.PageLink\n        }\n\n        if (breadcrumb.active) {\n          componentMap.pageLink = (props: any) => <div {...props} />\n        } else {\n          pageLinkProps.href = mapPageUrl(breadcrumb.pageId)\n        }\n\n        return (\n          <React.Fragment key={breadcrumb.pageId}>\n            <componentMap.pageLink\n              className={cs('breadcrumb', breadcrumb.active && 'active')}\n              {...pageLinkProps}\n            >\n              {breadcrumb.icon && (\n                <PageIcon className='icon' block={breadcrumb.block} />\n              )}\n\n              {breadcrumb.title && (\n                <span className='title'>{breadcrumb.title}</span>\n              )}\n            </componentMap.pageLink>\n\n            {index < breadcrumbs.length - 1 && (\n              <span className='spacer'>/</span>\n            )}\n          </React.Fragment>\n        )\n      })}\n    </div>\n  )\n}\n\nexport function Search({\n  block,\n  search,\n  title = 'Search'\n}: {\n  block: types.Block\n  search?: SearchNotionFn\n  title?: React.ReactNode\n}) {\n  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =\n    useNotionContext()\n  const onSearchNotion = search || searchNotion\n\n  const [isSearchOpen, setIsSearchOpen] = React.useState(isShowingSearch)\n  React.useEffect(() => {\n    setIsSearchOpen(isShowingSearch)\n  }, [isShowingSearch])\n\n  const onOpenSearch = React.useCallback(() => {\n    setIsSearchOpen(true)\n  }, [])\n\n  const onCloseSearch = React.useCallback(() => {\n    setIsSearchOpen(false)\n    if (onHideSearch) {\n      onHideSearch()\n    }\n  }, [onHideSearch])\n\n  useHotkeys('cmd+p', (event) => {\n    onOpenSearch()\n    event.preventDefault()\n    event.stopPropagation()\n  })\n\n  useHotkeys('cmd+k', (event) => {\n    onOpenSearch()\n    event.preventDefault()\n    event.stopPropagation()\n  })\n\n  const hasSearch = !!onSearchNotion\n\n  return (\n    <>\n      {hasSearch && (\n        <div\n          role='button'\n          className={cs('breadcrumb', 'button', 'notion-search-button')}\n          onClick={onOpenSearch}\n        >\n          <SearchIcon className='searchIcon' />\n\n          {title && <span className='title'>{title}</span>}\n        </div>\n      )}\n\n      {isSearchOpen && hasSearch && (\n        <SearchDialog\n          isOpen={isSearchOpen}\n          rootBlockId={rootPageId || block?.id}\n          onClose={onCloseSearch}\n          searchNotion={onSearchNotion}\n        />\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nexport function SearchIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={cs('notion-icon', className)} viewBox='0 0 17 17' {...rest}>\n      <path d='M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z'></path>\n    </svg>\n  )\n}\n","import { type BlockMap } from 'notion-types'\n\nexport { formatDate, formatNotionDateTime, isUrl } from 'notion-utils'\n\nexport const cs = (...classes: Array<string | undefined | false>) =>\n  classes.filter((a) => !!a).join(' ')\n\nconst groupBlockContent = (blockMap: BlockMap): string[][] => {\n  const output: string[][] = []\n\n  let lastType: string | undefined\n  let index = -1\n\n  for (const id of Object.keys(blockMap)) {\n    const blockValue = blockMap[id]?.value\n\n    if (blockValue) {\n      if (blockValue.content)\n        for (const blockId of blockValue.content) {\n          const blockType = blockMap[blockId]?.value?.type\n\n          if (blockType && blockType !== lastType) {\n            index++\n            lastType = blockType\n            output[index] = []\n          }\n\n          if (index > -1) {\n            output[index]?.push(blockId)\n          }\n        }\n    }\n\n    lastType = undefined\n  }\n\n  return output\n}\n\nexport const getListNumber = (blockId: string, blockMap: BlockMap) => {\n  const groups = groupBlockContent(blockMap)\n  const group = groups.find((g) => g.includes(blockId))\n\n  if (!group) {\n    return\n  }\n\n  return group.indexOf(blockId) + 1\n}\n\nexport const getHashFragmentValue = (url: string) => {\n  return url.includes('#') ? url.replace(/^.+(#.+)$/, '$1') : ''\n}\n\nexport const isBrowser = typeof window !== 'undefined'\n\nconst youtubeDomains = new Set([\n  'youtu.be',\n  'youtube.com',\n  'www.youtube.com',\n  'youtube-nocookie.com',\n  'www.youtube-nocookie.com'\n])\n\nexport const getYoutubeId = (url: string): string | null => {\n  try {\n    const { hostname } = new URL(url)\n    if (!youtubeDomains.has(hostname)) {\n      return null\n    }\n    const regExp =\n      /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i\n\n    const match = url.match(regExp)\n    if (match && match[2]?.length === 11) {\n      return match[2]\n    }\n  } catch {\n    // ignore invalid urls\n  }\n\n  return null\n}\n\nexport const getUrlParams = (\n  url: string\n): Record<string, string> | undefined => {\n  try {\n    const { searchParams } = new URL(url)\n    const result: Record<string, string> = {}\n    for (const [key, value] of searchParams.entries()) {\n      result[key] = value\n    }\n\n    return result\n  } catch {\n    // ignore invalid urls\n  }\n\n  return\n}\n","import type * as types from 'notion-types'\nimport throttle from 'lodash.throttle'\nimport { getBlockParentPage, getBlockTitle } from 'notion-utils'\nimport * as React from 'react'\n\nimport { NotionContextConsumer, NotionContextProvider } from '../context'\nimport { ClearIcon } from '../icons/clear-icon'\nimport { LoadingIcon } from '../icons/loading-icon'\nimport { SearchIcon } from '../icons/search-icon'\nimport { cs } from '../utils'\nimport { PageTitle } from './page-title'\n\nexport class SearchDialog extends React.Component<{\n  isOpen: boolean\n  rootBlockId: string\n  onClose: () => void\n  searchNotion: (params: types.SearchParams) => Promise<types.SearchResults>\n}> {\n  constructor(props: {\n    isOpen: boolean\n    rootBlockId: string\n    onClose: () => void\n    searchNotion: (params: types.SearchParams) => Promise<types.SearchResults>\n  }) {\n    super(props)\n    this._inputRef = React.createRef()\n  }\n\n  state: {\n    isLoading: boolean\n    query: string\n    searchResult: any | null\n    searchError: types.APIError | null\n  } = {\n    isLoading: false,\n    query: '',\n    searchResult: null,\n    searchError: null\n  }\n\n  _inputRef: any\n  _search: any\n\n  componentDidMount() {\n    this._search = throttle(this._searchImpl.bind(this), 1000)\n    this._warmupSearch()\n  }\n\n  render() {\n    const { isOpen, onClose } = this.props\n    const { isLoading, query, searchResult, searchError } = this.state\n\n    const hasQuery = !!query.trim()\n\n    return (\n      <NotionContextConsumer>\n        {(ctx) => {\n          const { components, defaultPageIcon, mapPageUrl } = ctx\n\n          return (\n            <components.Modal\n              isOpen={isOpen}\n              contentLabel='Search'\n              className='notion-search'\n              overlayClassName='notion-search-overlay'\n              onRequestClose={onClose}\n              onAfterOpen={this._onAfterOpen}\n            >\n              <div className='quickFindMenu'>\n                <div className='searchBar'>\n                  <div className='inlineIcon'>\n                    {isLoading ? (\n                      <LoadingIcon className='loadingIcon' />\n                    ) : (\n                      <SearchIcon />\n                    )}\n                  </div>\n\n                  <input\n                    className='searchInput'\n                    placeholder='Search'\n                    value={query}\n                    ref={this._inputRef}\n                    onChange={this._onChangeQuery}\n                  />\n\n                  {query && (\n                    <div\n                      role='button'\n                      className='clearButton'\n                      onClick={this._onClearQuery}\n                    >\n                      <ClearIcon className='clearIcon' />\n                    </div>\n                  )}\n                </div>\n\n                {hasQuery && searchResult && (\n                  <>\n                    {searchResult.results.length ? (\n                      <NotionContextProvider\n                        {...ctx}\n                        // TODO\n                        recordMap={searchResult.recordMap}\n                      >\n                        <div className='resultsPane'>\n                          {searchResult.results.map((result: any) => (\n                            <components.PageLink\n                              key={result.id}\n                              className={cs('result', 'notion-page-link')}\n                              href={mapPageUrl(\n                                result.page.id,\n                                // TODO\n                                searchResult.recordMap\n                              )}\n                            >\n                              <PageTitle\n                                block={result.page}\n                                defaultIcon={defaultPageIcon}\n                              />\n\n                              {result.highlight?.html && (\n                                <div\n                                  className='notion-search-result-highlight'\n                                  dangerouslySetInnerHTML={{\n                                    __html: result.highlight.html\n                                  }}\n                                />\n                              )}\n                            </components.PageLink>\n                          ))}\n                        </div>\n\n                        <footer className='resultsFooter'>\n                          <div>\n                            <span className='resultsCount'>\n                              {searchResult.total}\n                            </span>\n\n                            {searchResult.total === 1 ? ' result' : ' results'}\n                          </div>\n                        </footer>\n                      </NotionContextProvider>\n                    ) : (\n                      <div className='noResultsPane'>\n                        <div className='noResults'>No results</div>\n                        <div className='noResultsDetail'>\n                          Try different search terms\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n\n                {hasQuery && !searchResult && searchError && (\n                  <div className='noResultsPane'>\n                    <div className='noResults'>Search error</div>\n                  </div>\n                )}\n              </div>\n            </components.Modal>\n          )\n        }}\n      </NotionContextConsumer>\n    )\n  }\n\n  _onAfterOpen = () => {\n    if (this._inputRef.current) {\n      this._inputRef.current.focus()\n    }\n  }\n\n  _onChangeQuery = (e: any) => {\n    const query = e.target.value\n    this.setState({ query })\n\n    if (!query.trim()) {\n      this.setState({ isLoading: false, searchResult: null, searchError: null })\n      return\n    } else {\n      this._search()\n    }\n  }\n\n  _onClearQuery = () => {\n    this._onChangeQuery({ target: { value: '' } })\n  }\n\n  _warmupSearch = async () => {\n    const { searchNotion, rootBlockId } = this.props\n\n    // search is generally implemented as a serverless function wrapping the notion\n    // private API, upon opening the search dialog, so we eagerly invoke an empty\n    // search in order to warm up the serverless lambda\n    await searchNotion({\n      query: '',\n      ancestorId: rootBlockId\n    })\n  }\n\n  _searchImpl = async () => {\n    const { searchNotion, rootBlockId } = this.props\n    const { query } = this.state\n\n    if (!query.trim()) {\n      this.setState({ isLoading: false, searchResult: null, searchError: null })\n      return\n    }\n\n    this.setState({ isLoading: true })\n    const result: any = await searchNotion({\n      query,\n      ancestorId: rootBlockId\n    })\n\n    console.log('search', query, result)\n\n    let searchResult: any = null // TODO\n    let searchError: types.APIError | null = null\n\n    if (result.error || result.errorId) {\n      searchError = result\n    } else {\n      searchResult = { ...result }\n\n      const results = searchResult.results\n        .map((result: any) => {\n          const block = searchResult.recordMap.block[result.id]?.value\n          if (!block) return\n\n          const title = getBlockTitle(block, searchResult.recordMap)\n          if (!title) {\n            return\n          }\n\n          result.title = title\n          result.block = block\n          result.recordMap = searchResult.recordMap\n          result.page =\n            getBlockParentPage(block, searchResult.recordMap, {\n              inclusive: true\n            }) || block\n\n          if (!result.page.id) {\n            return\n          }\n\n          if (result.highlight?.text) {\n            result.highlight.html = result.highlight.text\n              .replaceAll(/<gzknfouu>/gi, '<b>')\n              .replaceAll(/<\\/gzknfouu>/gi, '</b>')\n          }\n\n          return result\n        })\n        .filter(Boolean)\n\n      // dedupe results by page id\n      const searchResultsMap = Object.fromEntries(\n        results.map((result: any) => [result.page.id, result])\n      )\n      searchResult.results = Object.values(searchResultsMap)\n    }\n\n    if (this.state.query === query) {\n      this.setState({ isLoading: false, searchResult, searchError })\n    }\n  }\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nexport function ClearIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={cs('notion-icon', className)} {...rest} viewBox='0 0 30 30'>\n      <path d='M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z'></path>\n    </svg>\n  )\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nexport function LoadingIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={cs('notion-icon', className)} {...rest} viewBox='0 0 24 24'>\n      <defs>\n        <linearGradient\n          x1='28.1542969%'\n          y1='63.7402344%'\n          x2='74.6289062%'\n          y2='17.7832031%'\n          id='linearGradient-1'\n        >\n          <stop stopColor='rgba(164, 164, 164, 1)' offset='0%' />\n          <stop\n            stopColor='rgba(164, 164, 164, 0)'\n            stopOpacity='0'\n            offset='100%'\n          />\n        </linearGradient>\n      </defs>\n\n      <g id='Page-1' stroke='none' strokeWidth='1' fill='none'>\n        <g transform='translate(-236.000000, -286.000000)'>\n          <g transform='translate(238.000000, 286.000000)'>\n            <circle\n              id='Oval-2'\n              stroke='url(#linearGradient-1)'\n              strokeWidth='4'\n              cx='10'\n              cy='12'\n              r='10'\n            />\n            <path\n              d='M10,2 C4.4771525,2 0,6.4771525 0,12'\n              id='Oval-2'\n              stroke='rgba(164, 164, 164, 1)'\n              strokeWidth='4'\n            />\n            <rect\n              id='Rectangle-1'\n              fill='rgba(164, 164, 164, 1)'\n              x='8'\n              y='0'\n              width='4'\n              height='4'\n              rx='8'\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import { type Block, type Decoration } from 'notion-types'\nimport { getBlockTitle } from 'notion-utils'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\nimport { PageIcon } from './page-icon'\nimport { Text } from './text'\n\nexport function PageTitleImpl({\n  block,\n  className,\n  defaultIcon,\n  ...rest\n}: {\n  block: Block\n  className?: string\n  defaultIcon?: string | null\n}) {\n  const { recordMap } = useNotionContext()\n\n  if (!block) return null\n\n  if (\n    block.type === 'collection_view_page' ||\n    block.type === 'collection_view'\n  ) {\n    const title = getBlockTitle(block, recordMap)\n    if (!title) {\n      return null\n    }\n\n    const titleDecoration: Decoration[] = [[title]]\n\n    return (\n      <span className={cs('notion-page-title', className)} {...rest}>\n        <PageIcon\n          block={block}\n          defaultIcon={defaultIcon}\n          className='notion-page-title-icon'\n        />\n\n        <span className='notion-page-title-text'>\n          <Text value={titleDecoration} block={block} />\n        </span>\n      </span>\n    )\n  }\n\n  if (!block.properties?.title) {\n    return null\n  }\n\n  return (\n    <span className={cs('notion-page-title', className)} {...rest}>\n      <PageIcon\n        block={block}\n        defaultIcon={defaultIcon}\n        className='notion-page-title-icon'\n      />\n\n      <span className='notion-page-title-text'>\n        <Text value={block.properties?.title} block={block} />\n      </span>\n    </span>\n  )\n}\n\nexport const PageTitle = React.memo(PageTitleImpl)\n","import {\n  type Block,\n  type Decoration,\n  type ExternalObjectInstance\n} from 'notion-types'\nimport { parsePageId } from 'notion-utils'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { formatDate, getHashFragmentValue } from '../utils'\nimport { EOI } from './eoi'\nimport { GracefulImage } from './graceful-image'\nimport { LinkMention, type LinkMentionData } from './link-mention'\nimport { PageTitle } from './page-title'\n\n/**\n * Renders a single piece of Notion text, including basic rich text formatting.\n *\n * These represent the innermost leaf nodes of a Notion subtree.\n *\n * TODO: I think this implementation would be more correct if the reduce just added\n * attributes to the final element's style.\n */\n\nexport function Text({\n  value,\n  block,\n  linkProps,\n  linkProtocol\n}: {\n  value?: Decoration[]\n  block: Block\n  linkProps?: any\n  linkProtocol?: string\n  inline?: boolean // TODO: currently unused\n}) {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =\n    useNotionContext()\n\n  return (\n    <React.Fragment>\n      {value?.map(([text, decorations], index) => {\n        // TODO: sometimes notion shows a max of N items to prevent overflow\n        // if (trim && index > 18) {\n        //   return null\n        // }\n\n        if (!decorations) {\n          if (text === ',') {\n            return <span key={index} style={{ padding: '0.5em' }} />\n          } else {\n            return <React.Fragment key={index}>{text}</React.Fragment>\n          }\n        }\n\n        const formatted = decorations.reduce(\n          (element: React.ReactNode, decorator) => {\n            switch (decorator[0]) {\n              case 'p': {\n                // link to an internal block (within the current workspace)\n                const blockId = decorator[1]\n                const linkedBlock = recordMap.block[blockId]?.value\n                if (!linkedBlock) {\n                  console.log('\"p\" missing block', blockId)\n                  return null\n                }\n\n                // console.log('p', blockId)\n\n                return (\n                  <components.PageLink\n                    className='notion-link'\n                    href={mapPageUrl(blockId)}\n                  >\n                    <PageTitle block={linkedBlock} />\n                  </components.PageLink>\n                )\n              }\n\n              case '‣': {\n                // link to an external block (outside of the current workspace)\n                const linkType = decorator[1][0]\n                const id = decorator[1][1]\n\n                switch (linkType) {\n                  case 'u': {\n                    const user = recordMap.notion_user[id]?.value\n\n                    if (!user) {\n                      console.log('\"‣\" missing user', id)\n                      return null\n                    }\n\n                    const src = mapImageUrl(user.profile_photo, block)\n                    if (!src) return null\n\n                    const name = [user.given_name, user.family_name]\n                      .filter(Boolean)\n                      .join(' ')\n\n                    return (\n                      <GracefulImage\n                        className='notion-user'\n                        src={src}\n                        alt={name}\n                      />\n                    )\n                  }\n\n                  default: {\n                    const linkedBlock = recordMap.block[id]?.value\n\n                    if (!linkedBlock) {\n                      console.log('\"‣\" missing block', linkType, id)\n                      return null\n                    }\n\n                    return (\n                      <components.PageLink\n                        className='notion-link'\n                        href={mapPageUrl(id)}\n                        {...linkProps}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                      >\n                        <PageTitle block={linkedBlock} />\n                      </components.PageLink>\n                    )\n                  }\n                }\n              }\n\n              case 'h':\n                return (\n                  <span className={`notion-${decorator[1]}`}>{element}</span>\n                )\n\n              case 'c':\n                return <code className='notion-inline-code'>{element}</code>\n\n              case 'b':\n                return <b>{element}</b>\n\n              case 'i':\n                return <em>{element}</em>\n\n              case 's':\n                return <s>{element}</s>\n\n              case '_':\n                return (\n                  <span className='notion-inline-underscore'>{element}</span>\n                )\n\n              case 'e':\n                return <components.Equation math={decorator[1]} inline />\n\n              case 'm':\n                // comment / discussion\n                return element //still need to return the base element\n\n              case 'a': {\n                const v = decorator[1]\n                const pathname = v.slice(1)\n                const id = parsePageId(pathname, { uuid: true })\n\n                if (\n                  (rootDomain && v.includes(rootDomain)) ||\n                  (id && v[0] === '/')\n                ) {\n                  const href =\n                    rootDomain && v.includes(rootDomain)\n                      ? v\n                      : `${mapPageUrl(id!)}${getHashFragmentValue(v)}`\n\n                  return (\n                    <components.PageLink\n                      className='notion-link'\n                      href={href}\n                      {...linkProps}\n                    >\n                      {element}\n                    </components.PageLink>\n                  )\n                } else {\n                  return (\n                    <components.Link\n                      className='notion-link'\n                      href={\n                        linkProtocol\n                          ? `${linkProtocol}:${decorator[1]}`\n                          : decorator[1]\n                      }\n                      {...linkProps}\n                    >\n                      {element}\n                    </components.Link>\n                  )\n                }\n              }\n\n              case 'd': {\n                const v = decorator[1]\n                const type = v?.type\n\n                if (type === 'date') {\n                  // Example: Jul 31, 2010\n                  const startDate = v.start_date\n\n                  return formatDate(startDate)\n                } else if (type === 'datetime') {\n                  // Example: Jul 31, 2010 20:00\n                  const startDate = v.start_date\n                  const startTime = v.start_time\n\n                  return `${formatDate(startDate)} ${startTime}`\n                } else if (type === 'daterange') {\n                  // Example: Jul 31, 2010 → Jul 31, 2020\n                  const startDate = v.start_date\n                  const endDate = v.end_date!\n\n                  return `${formatDate(startDate)} → ${formatDate(endDate)}`\n                } else {\n                  return element\n                }\n              }\n\n              case 'u': {\n                const userId = decorator[1]\n                const user = recordMap.notion_user[userId]?.value\n\n                if (!user) {\n                  console.log('missing user', userId)\n                  return null\n                }\n\n                const src = mapImageUrl(user.profile_photo, block)\n                if (!src) return null\n\n                const name = [user.given_name, user.family_name]\n                  .filter(Boolean)\n                  .join(' ')\n\n                return (\n                  <GracefulImage className='notion-user' src={src} alt={name} />\n                )\n              }\n\n              case 'lm': {\n                const metadata = decorator[1] as unknown as LinkMentionData\n                return <LinkMention metadata={metadata} />\n              }\n\n              case 'eoi': {\n                const blockId = decorator[1]\n                const externalObjectInstance = recordMap.block[blockId]\n                  ?.value as ExternalObjectInstance\n\n                return <EOI block={externalObjectInstance} inline={true} />\n              }\n\n              default:\n                if (process.env.NODE_ENV !== 'production') {\n                  console.log('unsupported text format', decorator)\n                }\n\n                return element\n            }\n          },\n          <>{text}</>\n        )\n\n        return <React.Fragment key={index}>{formatted}</React.Fragment>\n      })}\n    </React.Fragment>\n  )\n}\n","import type * as React from 'react'\nimport { type Block } from 'notion-types'\n\nimport { useNotionContext } from '../context'\nimport SvgTypeGitHub from '../icons/type-github'\nimport { cs, formatNotionDateTime } from '../utils'\nimport { MentionPreviewCard } from './mention-preview-card'\n\n// External Object Instance\nexport function EOI({\n  block,\n  inline,\n  className\n}: {\n  block: Block\n  inline?: boolean\n  className?: string\n}) {\n  const { components } = useNotionContext()\n  const { original_url, attributes, domain } = block?.format || {}\n  if (!original_url || !attributes) {\n    return null\n  }\n\n  const title = attributes.find((attr: any) => attr.id === 'title')?.values[0]\n  let owner = attributes.find((attr: any) => attr.id === 'owner')?.values[0]\n  const lastUpdatedAt = attributes.find((attr: any) => attr.id === 'updated_at')\n    ?.values[0]\n  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null\n  let externalImage: React.ReactNode\n\n  switch (domain) {\n    case 'github.com':\n      externalImage = <SvgTypeGitHub />\n      if (owner) {\n        const parts = owner.split('/')\n        owner = parts.at(-1)\n      }\n      break\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\n          `Unsupported external_object_instance domain \"${domain}\"`,\n          JSON.stringify(block, null, 2)\n        )\n      }\n\n      return null\n  }\n\n  return (\n    <components.Link\n      target='_blank'\n      rel='noopener noreferrer'\n      href={original_url}\n      className={cs(\n        'notion-external',\n        inline ? 'notion-external-mention' : 'notion-external-block notion-row',\n        className\n      )}\n    >\n      {externalImage && (\n        <div className='notion-external-image'>{externalImage}</div>\n      )}\n\n      <div className='notion-external-description'>\n        <div className='notion-external-title'>{title}</div>\n        {!inline && owner ? (\n          <div className='notion-external-block-desc'>\n            {owner}\n            {lastUpdated && <span> • </span>}\n            {lastUpdated && `Updated ${lastUpdated}`}\n          </div>\n        ) : null}\n        {inline && (owner || lastUpdated) && (\n          <MentionPreviewCard\n            title={title}\n            owner={owner}\n            lastUpdated={lastUpdated}\n            domain={domain}\n            externalImage={externalImage}\n          />\n        )}\n      </div>\n    </components.Link>\n  )\n}\n","import type * as React from 'react'\n\nfunction SvgTypeGitHub(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 260 260' {...props}>\n      <g>\n        <path\n          d='M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z'\n          fill='#161614'\n        ></path>\n      </g>\n    </svg>\n  )\n}\n\nexport default SvgTypeGitHub\n","import type React from 'react'\n\nfunction capitalizeFirstLetter(str?: string) {\n  if (!str) return ''\n\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function MentionPreviewCard({\n  owner,\n  lastUpdated,\n  externalImage,\n  title,\n  domain\n}: {\n  owner?: string\n  lastUpdated?: string | null\n  title: string\n  domain: string\n  externalImage?: React.ReactNode\n}) {\n  return (\n    <div className='notion-external-subtitle'>\n      {externalImage && (\n        <div className='notion-preview-card-domain-warp'>\n          <div className='notion-preview-card-logo'>{externalImage}</div>\n          <div className='notion-preview-card-domain'>\n            {capitalizeFirstLetter(domain.split('.')[0])}\n          </div>\n        </div>\n      )}\n      <div className='notion-preview-card-title'>{title}</div>\n      {owner && (\n        <div className='notion-external-subtitle-item'>\n          <div className='notion-external-subtitle-item-name'>Owner</div>\n          <span className='notion-external-subtitle-item-desc'>{owner}</span>\n        </div>\n      )}\n      {lastUpdated && (\n        <div className='notion-external-subtitle-item'>\n          <div className='notion-external-subtitle-item-name'>Updated</div>\n          <span className='notion-external-subtitle-item-desc'>\n            {lastUpdated}\n          </span>\n        </div>\n      )}\n      {domain === 'github.com' && (\n        <div className='notion-preview-card-github-shields'>\n          <img\n            src={`https://img.shields.io/github/stars/${owner}/${title}?logo=github`}\n            alt=''\n          />\n          <img\n            src={`https://img.shields.io/github/last-commit/${owner}/${title}`}\n            alt=''\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Img, type ImgProps } from 'react-image'\n\nimport { isBrowser } from '../utils'\n\nexport function GracefulImage(props: ImgProps) {\n  if (isBrowser) {\n    return <Img {...props} />\n  } else {\n    // @ts-expect-error (must use the appropriate subset of props for <img> if using SSR)\n    return <img {...props} />\n  }\n}\n","import * as React from 'react'\n\nexport type LinkMentionData = {\n  href: string\n  title: string\n  icon_url: string\n  description: string\n  link_provider: string\n  thumbnail_url: string\n}\n\nexport function LinkMention({ metadata }: { metadata: LinkMentionData }) {\n  return (\n    <span className='notion-link-mention'>\n      <LinkMentionInline metadata={metadata} />\n      <LinkMentionPreview metadata={metadata} />\n    </span>\n  )\n}\n\nfunction LinkMentionInline({ metadata }: { metadata: LinkMentionData }) {\n  return (\n    <a\n      href={metadata.href}\n      target='_blank'\n      rel='noopener noreferrer'\n      className='notion-link-mention-link'\n    >\n      <img\n        className='notion-link-mention-icon'\n        src={metadata.icon_url}\n        alt={metadata.link_provider}\n      />\n      {metadata.link_provider && (\n        <span className='notion-link-mention-provider'>\n          {metadata.link_provider}\n        </span>\n      )}\n      <span className='notion-link-mention-title'>{metadata.title}</span>\n    </a>\n  )\n}\n\nfunction LinkMentionPreview({ metadata }: { metadata: LinkMentionData }) {\n  return (\n    <div className='notion-link-mention-preview'>\n      <article className='notion-link-mention-card'>\n        <img\n          className='notion-link-mention-preview-thumbnail'\n          src={metadata.thumbnail_url}\n          alt={metadata.title}\n        />\n        <div className='notion-link-mention-preview-content'>\n          <p className='notion-link-mention-preview-title'>{metadata.title}</p>\n          <p className='notion-link-mention-preview-description'>\n            {metadata.description}\n          </p>\n          <div className='notion-link-mention-preview-footer'>\n            <img\n              className='notion-link-mention-preview-icon'\n              src={metadata.icon_url}\n              alt={metadata.link_provider}\n            />\n            <span className='notion-link-mention-preview-provider'>\n              {metadata.link_provider}\n            </span>\n          </div>\n        </div>\n      </article>\n    </div>\n  )\n}\n","import { normalizeUrl } from 'notion-utils'\nimport * as React from 'react'\nimport { ImageState, LazyImageFull } from 'react-lazy-images'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\n\n/**\n * Progressive, lazy images modeled after Medium's LQIP technique.\n */\nexport function LazyImage({\n  src,\n  alt,\n  className,\n  style,\n  zoomable = false,\n  priority = false,\n  height,\n  ...rest\n}: {\n  src?: string\n  alt?: string\n  className?: string\n  style?: React.CSSProperties\n  height?: number\n  zoomable?: boolean\n  priority?: boolean\n}) {\n  const { recordMap, zoom, previewImages, forceCustomImages, components } =\n    useNotionContext()\n  const zoomRef = React.useRef(zoom ? zoom.clone() : null)\n  const previewImage = previewImages\n    ? (recordMap?.preview_images?.[src!] ??\n      recordMap?.preview_images?.[normalizeUrl(src)])\n    : null\n\n  const onLoad = React.useCallback(\n    (e: any) => {\n      if (zoomable && (e.target.src || e.target.srcset)) {\n        if (zoomRef.current) {\n          ;(zoomRef.current as any).attach(e.target)\n        }\n      }\n    },\n    [zoomRef, zoomable]\n  )\n\n  const attachZoom = React.useCallback(\n    (image: any) => {\n      if (zoomRef.current && image) {\n        ;(zoomRef.current as any).attach(image)\n      }\n    },\n    [zoomRef]\n  )\n\n  const attachZoomRef = React.useMemo(\n    () => (zoomable ? attachZoom : undefined),\n    [zoomable, attachZoom]\n  )\n\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth\n\n    if (components.Image) {\n      // TODO: could try using next/image onLoadComplete to replace LazyImageFull\n      // while retaining our blur implementation\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          style={style}\n          className={className}\n          width={previewImage.originalWidth}\n          height={previewImage.originalHeight}\n          blurDataURL={previewImage.dataURIBase64}\n          placeholder='blur'\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    return (\n      // @ts-expect-error LazyImage types are out-of-date.\n      <LazyImageFull src={src!} {...rest} experimentalDecode={true}>\n        {({ imageState, ref }) => {\n          const isLoaded = imageState === ImageState.LoadSuccess\n          const wrapperStyle: React.CSSProperties = {\n            width: '100%'\n          }\n          const imgStyle: React.CSSProperties = {}\n\n          if (height) {\n            wrapperStyle.height = height\n          } else {\n            imgStyle.position = 'absolute'\n            wrapperStyle.paddingBottom = `${aspectRatio * 100}%`\n          }\n\n          return (\n            <div\n              className={cs(\n                'lazy-image-wrapper',\n                isLoaded && 'lazy-image-loaded',\n                className\n              )}\n              style={wrapperStyle}\n            >\n              <img\n                className='lazy-image-preview'\n                src={previewImage.dataURIBase64}\n                alt={alt}\n                ref={ref}\n                style={style}\n                decoding='async'\n              />\n\n              <img\n                className='lazy-image-real'\n                src={src}\n                alt={alt}\n                ref={attachZoomRef}\n                style={{\n                  ...style,\n                  ...imgStyle\n                }}\n                width={previewImage.originalWidth}\n                height={previewImage.originalHeight}\n                decoding='async'\n                loading='lazy'\n              />\n            </div>\n          )\n        }}\n      </LazyImageFull>\n    )\n  } else {\n    // TODO: GracefulImage doesn't seem to support refs, but we'd like to prevent\n    // invalid images from loading as error states\n\n    /*\n      NOTE: Using next/image without a pre-defined width/height is a huge pain in\n      the ass. If we have a preview image, then this works fine since we know the\n      dimensions ahead of time, but if we don't, then next/image won't display\n      anything.\n\n      Since next/image is the most common use case for using custom images, and this\n      is likely to trip people up, we're disabling non-preview custom images for now.\n\n      If you have a use case that is affected by this, please open an issue on github.\n    */\n    if (components.Image && forceCustomImages) {\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          className={className}\n          style={style}\n          width={null}\n          height={height || null}\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    // Default image element\n    return (\n      <img\n        className={className}\n        style={style}\n        src={src}\n        alt={alt}\n        ref={attachZoomRef}\n        loading='lazy'\n        decoding='async'\n        {...rest}\n      />\n    )\n  }\n}\n","import type * as React from 'react'\nimport { type BaseContentBlock, type Block } from 'notion-types'\nimport { getTextContent } from 'notion-utils'\n\nimport { useNotionContext } from '../context'\nimport { getUrlParams, getYoutubeId } from '../utils'\nimport { LazyImage } from './lazy-image'\nimport { LiteYouTubeEmbed } from './lite-youtube-embed'\n\nconst isServer = typeof window === 'undefined'\n\nconst supportedAssetTypes = new Set([\n  'replit',\n  'video',\n  'image',\n  'embed',\n  'figma',\n  'typeform',\n  'excalidraw',\n  'maps',\n  'tweet',\n  'pdf',\n  'gist',\n  'codepen',\n  'drive'\n])\n\nexport function Asset({\n  block,\n  zoomable = true,\n  children\n}: {\n  block: BaseContentBlock\n  children: any\n  zoomable?: boolean\n}) {\n  const { recordMap, mapImageUrl, components } = useNotionContext()\n\n  if (!block || !supportedAssetTypes.has(block.type)) {\n    return null\n  }\n\n  const style: React.CSSProperties = {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: 'column'\n  }\n\n  const assetStyle: React.CSSProperties = {}\n  // console.log('asset', block)\n\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format\n\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = '100vw'\n      } else {\n        style.width = '100%'\n      }\n\n      if (block.type === 'video') {\n        if (block_height) {\n          style.height = block_height\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`\n        } else if (block_preserve_scale) {\n          style.objectFit = 'contain'\n        }\n      } else if (block_aspect_ratio && block.type !== 'image') {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`\n      } else if (block_height) {\n        style.height = block_height\n      } else if (block_preserve_scale) {\n        if (block.type === 'image') {\n          style.height = '100%'\n        } else {\n          // TODO: this is just a guess\n          style.paddingBottom = '75%'\n          style.minHeight = 100\n        }\n      }\n    } else {\n      switch (block.format?.block_alignment) {\n        case 'center':\n          style.alignSelf = 'center'\n          break\n\n        case 'left':\n          style.alignSelf = 'start'\n          break\n\n        case 'right':\n          style.alignSelf = 'end'\n          break\n      }\n\n      if (block_width) {\n        style.width = block_width\n      }\n\n      if (block_preserve_scale && block.type !== 'image') {\n        style.paddingBottom = '50%'\n        style.minHeight = 100\n      } else {\n        if (block_height && block.type !== 'image') {\n          style.height = block_height\n        }\n      }\n    }\n\n    if (block.type === 'image') {\n      assetStyle.objectFit = 'cover'\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = 'contain'\n    }\n  }\n\n  let source =\n    recordMap.signed_urls?.[block.id] || block.properties?.source?.[0]?.[0]\n\n  if (!source) {\n    return null\n  }\n\n  if (block.space_id) {\n    const url = new URL(source)\n    url.searchParams.set('spaceId', block.space_id)\n    source = url.toString()\n  }\n\n  let content = null\n\n  if (block.type === 'tweet') {\n    const src = source\n    if (!src) return null\n\n    const id = src.split('?')?.[0]?.split('/').pop()\n    if (!id) return null\n\n    content = (\n      <div\n        style={{\n          ...assetStyle,\n          maxWidth: 420,\n          width: '100%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }}\n      >\n        <components.Tweet id={id} />\n      </div>\n    )\n  } else if (block.type === 'pdf') {\n    style.overflow = 'auto'\n    style.background = 'rgb(226, 226, 226)'\n    style.display = 'block'\n\n    if (!style.padding) {\n      style.padding = '8px 16px'\n    }\n\n    if (!isServer) {\n      // console.log('pdf', block, signedUrl)\n      content = <components.Pdf file={source} />\n    }\n  } else if (\n    block.type === 'embed' ||\n    block.type === 'video' ||\n    block.type === 'figma' ||\n    block.type === 'typeform' ||\n    block.type === 'gist' ||\n    block.type === 'maps' ||\n    block.type === 'excalidraw' ||\n    block.type === 'codepen' ||\n    block.type === 'drive' ||\n    block.type === 'replit'\n  ) {\n    if (\n      block.type === 'video' &&\n      source &&\n      !source.includes('youtube') &&\n      !source.includes('youtu.be') &&\n      !source.includes('vimeo') &&\n      !source.includes('wistia') &&\n      !source.includes('loom') &&\n      !source.includes('videoask') &&\n      !source.includes('getcloudapp') &&\n      !source.includes('tella')\n    ) {\n      style.paddingBottom = undefined\n\n      content = (\n        <video\n          playsInline\n          controls\n          preload='metadata'\n          style={assetStyle}\n          src={source}\n          title={block.type}\n        />\n      )\n    } else {\n      let src = block.format?.display_source || source\n\n      if (src) {\n        const youtubeVideoId: string | null =\n          block.type === 'video' ? getYoutubeId(src) : null\n        // console.log({ youtubeVideoId, src, format: block.format, style })\n\n        if (youtubeVideoId) {\n          const params = getUrlParams(src)\n          content = (\n            <LiteYouTubeEmbed\n              id={youtubeVideoId}\n              style={assetStyle}\n              className='notion-asset-object-fit'\n              params={params}\n            />\n          )\n        } else if (block.type === 'gist') {\n          if (!src.endsWith('.pibb')) {\n            src = `${src}.pibb`\n          }\n\n          assetStyle.width = '100%'\n          style.paddingBottom = '50%'\n\n          // TODO: GitHub gists do not resize their height properly\n          content = (\n            <iframe\n              style={assetStyle}\n              className='notion-asset-object-fit'\n              src={src}\n              title='GitHub Gist'\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n              scrolling='auto'\n            />\n          )\n        } else {\n          src += block.type === 'typeform' ? '&disable-auto-focus=true' : ''\n\n          content = (\n            <iframe\n              className='notion-asset-object-fit'\n              style={assetStyle}\n              src={src}\n              title={`iframe ${block.type}`}\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              allowFullScreen\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n              scrolling='auto'\n            />\n          )\n        }\n      }\n    }\n  } else if (block.type === 'image') {\n    // console.log('image', block)\n    //kind of a hack for now. New file.notion.so images aren't signed correctly\n    if (source.includes('file.notion.so')) {\n      source = block.properties?.source?.[0]?.[0]\n    }\n    const src = mapImageUrl(source, block as Block)\n    const caption = getTextContent(block.properties?.caption)\n    const alt = caption || 'notion image'\n\n    content = (\n      <LazyImage\n        src={src}\n        alt={alt}\n        zoomable={zoomable}\n        height={style.height as number}\n        style={assetStyle}\n      />\n    )\n  }\n\n  return (\n    <>\n      <div style={style}>\n        {content}\n        {block.type === 'image' && children}\n      </div>\n\n      {block.type !== 'image' && children}\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport { cs } from '../utils'\n\nconst qs = (params: Record<string, string>) => {\n  return Object.keys(params)\n    .map(\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key]!)}`\n    )\n    .join('&')\n}\n\ntype ImageType = 'jpg' | 'webp'\n\nconst resolutions = [120, 320, 480, 640, 1280] as const\ntype VideoResolution = (typeof resolutions)[number]\n\nconst resolutionMap: Record<VideoResolution, string> = {\n  120: 'default',\n  320: 'mqdefault',\n  480: 'hqdefault',\n  640: 'sddefault',\n  1280: 'maxresdefault'\n  // 2k, 4k, 8k images don't seem to be available\n  // Source: https://longzero.com/articles/youtube-thumbnail-sizes-url/\n}\n\nconst resolutionSizes = resolutions\n  .map((resolution) => `(max-width: ${resolution}px) ${resolution}px`)\n  .join(', ')\n\nfunction getPosterUrl(\n  id: string,\n  resolution: VideoResolution = 480,\n  type: ImageType = 'jpg'\n): string {\n  if (type === 'webp') {\n    return `https://i.ytimg.com/vi_webp/${id}/${resolutionMap[resolution]}.webp`\n  }\n\n  // Default to jpg\n  return `https://i.ytimg.com/vi/${id}/${resolutionMap[resolution]}.jpg`\n}\n\nfunction generateSrcSet(id: string, type: ImageType = 'jpg'): string {\n  return resolutions\n    .map((resolution) => `${getPosterUrl(id, resolution, type)} ${resolution}w`)\n    .join(', ')\n}\n\nexport function LiteYouTubeEmbed({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = 'YouTube video',\n  alt = 'Video preview',\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}: {\n  id: string\n  defaultPlay?: boolean\n  mute?: boolean\n  lazyImage?: boolean\n  iframeTitle?: string\n  alt?: string\n  params?: Record<string, string>\n  adLinksPreconnect?: boolean\n  style?: React.CSSProperties\n  className?: string\n}) {\n  const muteParam = mute || defaultPlay ? '1' : '0' // Default play must be muted\n  const queryString = React.useMemo(\n    () => qs({ autoplay: '1', mute: muteParam, ...params }),\n    [muteParam, params]\n  )\n\n  const ytUrl = 'https://www.youtube-nocookie.com'\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`\n\n  const [isPreconnected, setIsPreconnected] = React.useState(false)\n  const [iframeInitialized, setIframeInitialized] = React.useState(defaultPlay)\n  const [isIframeLoaded, setIsIframeLoaded] = React.useState(false)\n\n  const warmConnections = React.useCallback(() => {\n    if (isPreconnected) return\n    setIsPreconnected(true)\n  }, [isPreconnected])\n\n  const onLoadIframe = React.useCallback(() => {\n    if (iframeInitialized) return\n    setIframeInitialized(true)\n  }, [iframeInitialized])\n\n  const onIframeLoaded = React.useCallback(() => {\n    setIsIframeLoaded(true)\n  }, [])\n\n  return (\n    <>\n      {/*\n        'it seems pretty unlikely for a browser to support preloading but not WebP images'\n        Source: https://blog.laurenashpole.com/post/658079409151016960\n       */}\n      <link\n        rel='preload'\n        as='image'\n        href={getPosterUrl(id)}\n        imageSrcSet={generateSrcSet(id, 'webp')}\n        imageSizes={resolutionSizes}\n      />\n\n      {isPreconnected && (\n        <>\n          {/* The iframe document and most of its subresources come from youtube.com */}\n          <link rel='preconnect' href={ytUrl} />\n\n          {/* The botguard script is fetched off from google.com */}\n          <link rel='preconnect' href='https://www.google.com' />\n        </>\n      )}\n\n      {isPreconnected && adLinksPreconnect && (\n        <>\n          {/* Not certain if these ad related domains are in the critical path.\n              Could verify with domain-specific throttling.\n            */}\n          <link rel='preconnect' href='https://static.doubleclick.net' />\n          <link rel='preconnect' href='https://googleads.g.doubleclick.net' />\n        </>\n      )}\n\n      <div\n        onClick={onLoadIframe}\n        onPointerOver={warmConnections}\n        className={cs(\n          'notion-yt-lite',\n          isIframeLoaded && 'notion-yt-loaded',\n          iframeInitialized && 'notion-yt-initialized',\n          className\n        )}\n        style={style}\n      >\n        <picture>\n          {/*\n            Browsers which don't support srcSet will most likely not support webp too\n            These browsers will then just get the default 480 size jpg\n           */}\n          {resolutions.map((resolution) => (\n            <source\n              key={resolution}\n              srcSet={`${getPosterUrl(id, resolution, 'webp')} ${resolution}w`}\n              media={`(max-width: ${resolution}px)`}\n              type='image/webp'\n            />\n          ))}\n\n          <img\n            src={getPosterUrl(id)}\n            className='notion-yt-thumbnail'\n            loading={lazyImage ? 'lazy' : undefined}\n            alt={alt}\n          />\n        </picture>\n\n        <div className='notion-yt-playbtn' />\n\n        {iframeInitialized && (\n          <iframe\n            width='560'\n            height='315'\n            frameBorder='0'\n            allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            title={iframeTitle}\n            src={iframeSrc}\n            onLoad={onIframeLoaded}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n","import type * as React from 'react'\n\nfunction SvgCheck(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z' />\n    </svg>\n  )\n}\n\nexport default SvgCheck\n","import type * as React from 'react'\n\nimport CheckIcon from '../icons/check'\n\nexport function Checkbox({\n  isChecked\n}: {\n  isChecked: boolean\n  blockId?: string\n}) {\n  let content = null\n\n  if (isChecked) {\n    content = (\n      <div className='notion-property-checkbox-checked'>\n        <CheckIcon />\n      </div>\n    )\n  } else {\n    content = <div className='notion-property-checkbox-unchecked' />\n  }\n\n  return (\n    <span className='notion-property notion-property-checkbox'>{content}</span>\n  )\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport * as React from 'react'\nimport isEqual from 'react-fast-compare'\n\nexport const wrapNextImage = (NextImage: any): React.FC<any> => {\n  return React.memo(function ReactNotionXNextImage({\n    src,\n    alt,\n\n    width,\n    height,\n\n    className,\n\n    fill,\n\n    ...rest\n  }) {\n    if (fill === 'undefined') {\n      fill = !(width && height)\n    }\n\n    return (\n      <NextImage\n        className={className}\n        src={src}\n        alt={alt}\n        width={!fill && width && height ? width : undefined}\n        height={!fill && width && height ? height : undefined}\n        fill={fill}\n        {...rest}\n      />\n    )\n  }, isEqual)\n}\n\nexport const wrapNextLegacyImage = (NextLegacyImage: any): React.FC<any> => {\n  return React.memo(function ReactNotionXNextLegacyImage({\n    src,\n    alt,\n\n    width,\n    height,\n\n    className,\n    style,\n\n    layout,\n\n    ...rest\n  }) {\n    if (!layout) {\n      layout = width && height ? 'intrinsic' : 'fill'\n    }\n\n    return (\n      <NextLegacyImage\n        className={className}\n        src={src}\n        alt={alt}\n        width={layout === 'intrinsic' && width}\n        height={layout === 'intrinsic' && height}\n        objectFit={style?.objectFit}\n        objectPosition={style?.objectPosition}\n        layout={layout}\n        {...rest}\n      />\n    )\n  }, isEqual)\n}\n\nexport function wrapNextLink(NextLink: any) {\n  return ({\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale,\n    ...linkProps\n  }: any) => {\n    return (\n      <NextLink\n        href={href}\n        as={as}\n        passHref={passHref}\n        prefetch={prefetch}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        locale={locale}\n      >\n        <a {...linkProps} />\n      </NextLink>\n    )\n  }\n}\n","import * as React from 'react'\n\nexport function DefaultPageIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 30 30' width='16'>\n      <path d='M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z'></path>\n    </svg>\n  )\n}\n","import { type CollectionViewType } from 'notion-types'\n\nimport CollectionViewBoardIcon from './collection-view-board'\nimport CollectionViewCalendarIcon from './collection-view-calendar'\nimport CollectionViewGalleryIcon from './collection-view-gallery'\nimport CollectionViewListIcon from './collection-view-list'\nimport CollectionViewTableIcon from './collection-view-table'\n\ninterface CollectionViewIconProps {\n  className?: string\n  type: CollectionViewType\n}\n\nconst iconMap = {\n  table: CollectionViewTableIcon,\n  board: CollectionViewBoardIcon,\n  gallery: CollectionViewGalleryIcon,\n  list: CollectionViewListIcon,\n  calendar: CollectionViewCalendarIcon\n}\n\nexport function CollectionViewIcon({ type, ...rest }: CollectionViewIconProps) {\n  const icon = iconMap[type as keyof typeof iconMap]\n  if (!icon) {\n    return null\n  }\n\n  return icon(rest)\n}\n","import type * as React from 'react'\n\nfunction SvgCollectionViewBoard(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewBoard\n","import type * as React from 'react'\n\nfunction SvgCollectionViewCalendar(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewCalendar\n","import type * as React from 'react'\n\nfunction SvgCollectionViewGallery(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewGallery\n","import type * as React from 'react'\n\nfunction SvgCollectionViewList(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewList\n","import type * as React from 'react'\n\nfunction SvgCollectionViewTable(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewTable\n","import type * as React from 'react'\nimport { type PageBlock } from 'notion-types'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\nimport { CollectionColumnTitle } from './collection-column-title'\nimport { Property } from './property'\n\nexport function CollectionRow({\n  block,\n  pageHeader = false,\n  className\n}: {\n  block: PageBlock\n  pageHeader?: boolean\n  className?: string\n}) {\n  const { recordMap } = useNotionContext()\n  const collectionId = block.parent_id\n  const collection = recordMap.collection[collectionId]?.value\n  const schemas = collection?.schema\n\n  if (!collection || !schemas) {\n    return null\n  }\n\n  let propertyIds = Object.keys(schemas).filter((id) => id !== 'title')\n\n  // filter properties based on visibility\n  if (collection.format?.property_visibility) {\n    propertyIds = propertyIds.filter(\n      (id) =>\n        collection.format?.property_visibility?.find(\n          ({ property }) => property === id\n        )?.visibility !== 'hide'\n    )\n  }\n\n  // sort properties\n  if (collection.format?.collection_page_properties) {\n    // sort properties based on collection page order\n    const idToIndex = Object.fromEntries(\n      collection.format?.collection_page_properties.map((p, i) => [\n        p.property,\n        i\n      ])\n    )\n\n    propertyIds.sort((a, b) => idToIndex[a]! - idToIndex[b]!)\n  } else {\n    // default to sorting properties alphabetically based on name\n    propertyIds.sort((a, b) => schemas[a]!.name.localeCompare(schemas[b]!.name))\n  }\n\n  return (\n    <div className={cs('notion-collection-row', className)}>\n      <div className='notion-collection-row-body'>\n        {propertyIds.map((propertyId) => {\n          const schema = schemas[propertyId]\n          if (!schema) return null\n\n          return (\n            <div className='notion-collection-row-property' key={propertyId}>\n              <CollectionColumnTitle schema={schema} />\n\n              <div className='notion-collection-row-value'>\n                <Property\n                  schema={schema}\n                  data={\n                    block.properties?.[\n                      propertyId as keyof typeof block.properties\n                    ]\n                  }\n                  propertyId={propertyId}\n                  block={block}\n                  collection={collection}\n                  pageHeader={pageHeader}\n                />\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import type * as React from 'react'\nimport { type CollectionPropertySchema } from 'notion-types'\n\nimport { PropertyIcon } from '../icons/property-icon'\n\nexport function CollectionColumnTitle({\n  schema\n}: {\n  schema: CollectionPropertySchema\n}) {\n  return (\n    <div className='notion-collection-column-title'>\n      <PropertyIcon\n        className='notion-collection-column-title-icon'\n        type={schema.type}\n      />\n\n      <div className='notion-collection-column-title-body'>{schema.name}</div>\n    </div>\n  )\n}\n","import { type PropertyType } from 'notion-types'\n\nimport AutoIncrementIdIcon from './type-auto-increment-id'\nimport CheckboxIcon from './type-checkbox'\nimport DateIcon from './type-date'\nimport EmailIcon from './type-email'\nimport FileIcon from './type-file'\nimport FormulaIcon from './type-formula'\nimport MultiSelectIcon from './type-multi-select'\nimport NumberIcon from './type-number'\nimport PersonIcon from './type-person'\nimport Person2Icon from './type-person-2'\nimport PhoneNumberIcon from './type-phone-number'\nimport RelationIcon from './type-relation'\nimport SelectIcon from './type-select'\nimport StatusIcon from './type-status'\nimport TextIcon from './type-text'\nimport TimestampIcon from './type-timestamp'\nimport TitleIcon from './type-title'\nimport UrlIcon from './type-url'\n\ninterface PropertyIconProps {\n  className?: string\n  type: PropertyType\n}\n\nconst iconMap = {\n  title: TitleIcon,\n  text: TextIcon,\n  number: NumberIcon,\n  select: SelectIcon,\n  status: StatusIcon,\n  multi_select: MultiSelectIcon,\n  date: DateIcon,\n  person: PersonIcon,\n  file: FileIcon,\n  checkbox: CheckboxIcon,\n  url: UrlIcon,\n  email: EmailIcon,\n  phone_number: PhoneNumberIcon,\n  formula: FormulaIcon,\n  relation: RelationIcon,\n  created_time: TimestampIcon,\n  last_edited_time: TimestampIcon,\n  created_by: Person2Icon,\n  last_edited_by: Person2Icon,\n  auto_increment_id: AutoIncrementIdIcon\n}\n\nexport function PropertyIcon({ type, ...rest }: PropertyIconProps) {\n  const icon = iconMap[type] as any\n  if (!icon) return null\n\n  return icon(rest)\n}\n","import type * as React from 'react'\n\nfunction SvgTypeAutoIncrementId(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 16 16' {...props}>\n      <path d='M12.252 7.9209C13.7217 7.9209 14.7266 6.93652 14.7266 5.50781C14.7266 4.0791 13.7217 3.10156 12.252 3.10156C10.8232 3.10156 9.8457 4.0791 9.8457 5.50781C9.8457 6.93652 10.8301 7.9209 12.252 7.9209ZM2.00488 13.1367C2.45605 13.1367 2.72949 12.8496 2.72949 12.3848V5.83594L7.35059 12.5967C7.6377 12.9932 7.86328 13.1367 8.20508 13.1367C8.69043 13.1367 8.96387 12.8359 8.96387 12.3232V3.8877C8.96387 3.42285 8.69043 3.12891 8.23242 3.12891C7.78809 3.12891 7.50781 3.41602 7.50781 3.8877V10.4229L2.89355 3.66895C2.60645 3.25879 2.40137 3.12891 2.03906 3.12891C1.56738 3.12891 1.27344 3.4502 1.27344 3.94238V12.3848C1.27344 12.8496 1.55371 13.1367 2.00488 13.1367ZM12.252 6.84766C11.5615 6.84766 11.0898 6.30762 11.0898 5.50781C11.0898 4.70801 11.5615 4.16797 12.252 4.16797C12.9902 4.16797 13.4756 4.70801 13.4756 5.50781C13.4756 6.30762 12.9834 6.84766 12.252 6.84766ZM10.625 9.77344H13.9541C14.3506 9.77344 14.624 9.54102 14.624 9.14453C14.624 8.74805 14.3506 8.50195 13.9541 8.50195H10.625C10.2285 8.50195 9.96191 8.74805 9.96191 9.14453C9.96191 9.54102 10.2285 9.77344 10.625 9.77344Z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeAutoIncrementId\n","import type * as React from 'react'\n\nfunction SvgTypeCheckbox(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeCheckbox\n","import type * as React from 'react'\n\nfunction SvgTypeDate(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeDate\n","import type * as React from 'react'\n\nfunction SvgTypeEmail(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeEmail\n","import type * as React from 'react'\n\nfunction SvgTypeFile(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeFile\n","import type * as React from 'react'\n\nfunction SvgTypeFormula(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeFormula\n","import type * as React from 'react'\n\nfunction SvgTypeMultiSelect(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeMultiSelect\n","import type * as React from 'react'\n\nfunction SvgTypeNumber(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeNumber\n","import type * as React from 'react'\n\nfunction SvgTypePerson(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z' />\n    </svg>\n  )\n}\n\nexport default SvgTypePerson\n","import type * as React from 'react'\n\nfunction SvgTypePerson2(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z' />\n    </svg>\n  )\n}\n\nexport default SvgTypePerson2\n","import type * as React from 'react'\n\nfunction SvgTypePhoneNumber(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z' />\n    </svg>\n  )\n}\n\nexport default SvgTypePhoneNumber\n","import type * as React from 'react'\n\nfunction SvgTypeRelation(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeRelation\n","import type * as React from 'react'\n\nfunction SvgTypeSelect(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeSelect\n","import type * as React from 'react'\n\nfunction SvgTypeStatus(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 16 16' {...props}>\n      <path d='M8.75488 1.02344C8.75488 0.613281 8.41309 0.264648 8.00293 0.264648C7.59277 0.264648 7.25098 0.613281 7.25098 1.02344V3.11523C7.25098 3.51855 7.59277 3.86719 8.00293 3.86719C8.41309 3.86719 8.75488 3.51855 8.75488 3.11523V1.02344ZM3.91504 5.0293C4.20215 5.31641 4.69434 5.32324 4.97461 5.03613C5.26855 4.74902 5.26855 4.25684 4.98145 3.96973L3.53906 2.52051C3.25195 2.2334 2.7666 2.21973 2.47949 2.50684C2.19238 2.79395 2.18555 3.28613 2.47266 3.57324L3.91504 5.0293ZM10.9629 4.01758C10.6826 4.30469 10.6826 4.79688 10.9697 5.08398C11.2568 5.37109 11.749 5.36426 12.0361 5.07715L13.4854 3.62793C13.7725 3.34082 13.7725 2.84863 13.4785 2.55469C13.1982 2.27441 12.7061 2.27441 12.4189 2.56152L10.9629 4.01758ZM15.0234 8.78906C15.4336 8.78906 15.7822 8.44727 15.7822 8.03711C15.7822 7.62695 15.4336 7.28516 15.0234 7.28516H12.9385C12.5283 7.28516 12.1797 7.62695 12.1797 8.03711C12.1797 8.44727 12.5283 8.78906 12.9385 8.78906H15.0234ZM0.975586 7.28516C0.56543 7.28516 0.223633 7.62695 0.223633 8.03711C0.223633 8.44727 0.56543 8.78906 0.975586 8.78906H3.07422C3.48438 8.78906 3.83301 8.44727 3.83301 8.03711C3.83301 7.62695 3.48438 7.28516 3.07422 7.28516H0.975586ZM12.0361 10.9902C11.749 10.71 11.2568 10.71 10.9629 10.9971C10.6826 11.2842 10.6826 11.7764 10.9697 12.0635L12.4258 13.5127C12.7129 13.7998 13.2051 13.793 13.4922 13.5059C13.7793 13.2256 13.7725 12.7266 13.4854 12.4395L12.0361 10.9902ZM2.52051 12.4395C2.22656 12.7266 2.22656 13.2188 2.50684 13.5059C2.79395 13.793 3.28613 13.7998 3.57324 13.5127L5.02246 12.0703C5.31641 11.7832 5.31641 11.291 5.03613 11.0039C4.74902 10.7168 4.25684 10.71 3.96973 10.9971L2.52051 12.4395ZM8.75488 12.9658C8.75488 12.5557 8.41309 12.207 8.00293 12.207C7.59277 12.207 7.25098 12.5557 7.25098 12.9658V15.0576C7.25098 15.4609 7.59277 15.8096 8.00293 15.8096C8.41309 15.8096 8.75488 15.4609 8.75488 15.0576V12.9658Z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeStatus\n","import type * as React from 'react'\n\nfunction SvgTypeText(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeText\n","import type * as React from 'react'\n\nfunction SvgTypeTimestamp(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeTimestamp\n","import type * as React from 'react'\n\nfunction SvgTypeTitle(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeTitle\n","import type * as React from 'react'\n\nfunction SvgTypeUrl(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeUrl\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","/* eslint-disable react/function-component-definition */\nimport type * as types from 'notion-types'\nimport { format } from 'date-fns/format'\nimport formatNumber from 'format-number'\nimport { type FormulaResult } from 'notion-types'\nimport * as React from 'react'\n\nimport { Checkbox } from '../components/checkbox'\nimport { GracefulImage } from '../components/graceful-image'\nimport { PageTitle } from '../components/page-title'\nimport { Text } from '../components/text'\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\nimport { evalFormula } from './eval-formula'\n\nexport interface IPropertyProps {\n  propertyId?: string\n  schema?: types.CollectionPropertySchema\n  data?: types.Decoration[]\n  block?: types.Block\n  collection?: types.Collection\n  inline?: boolean\n  linkToTitlePage?: boolean\n  pageHeader?: boolean\n}\n\n/**\n * Renders a single value of structured Notion data according to its schema.\n *\n * This corresponds to rendering the content of a single cell in a table.\n * Property rendering is re-used across all the different types of collection views.\n */\nexport function Property(props: IPropertyProps) {\n  const { components } = useNotionContext()\n\n  if (components.Property) {\n    return <components.Property {...props} />\n  } else {\n    return <PropertyImplMemo {...props} />\n  }\n}\n\nexport function PropertyImpl(props: IPropertyProps) {\n  const { components, mapImageUrl, mapPageUrl } = useNotionContext()\n  const {\n    schema,\n    data,\n    block,\n    collection,\n    inline = false,\n    linkToTitlePage = true\n  } = props\n\n  const renderTextValue = React.useMemo(\n    () =>\n      function TextProperty() {\n        return <Text value={data} block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderDateValue = React.useMemo(\n    () =>\n      function DateProperty() {\n        return <Text value={data} block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderRelationValue = React.useMemo(\n    () =>\n      function RelationProperty() {\n        return <Text value={data} block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderFormulaValue = React.useMemo(\n    () =>\n      function FormulaProperty() {\n        let content: FormulaResult | null\n        if (!schema) return null\n\n        try {\n          content = evalFormula(schema.formula!, {\n            schema: collection?.schema,\n            properties: block?.properties\n          })\n\n          if (Number.isNaN(content as number)) {\n            // console.log('NaN', schema.formula)\n          }\n\n          if (content instanceof Date) {\n            content = format(content, 'MMM d, YYY hh:mm aa')\n          }\n        } catch {\n          // console.log('error evaluating formula', schema.formula, err)\n          content = null\n        }\n\n        return content\n      },\n    [block?.properties, collection?.schema, schema]\n  )\n\n  const renderTitleValue = React.useMemo(\n    () =>\n      function FormulaTitle() {\n        if (block && linkToTitlePage) {\n          return (\n            <components.PageLink\n              className={cs('notion-page-link')}\n              href={mapPageUrl(block.id)}\n            >\n              <PageTitle block={block} />\n            </components.PageLink>\n          )\n        } else {\n          return <Text value={data} block={block!} />\n        }\n      },\n    [block, components, data, linkToTitlePage, mapPageUrl]\n  )\n\n  const renderPersonValue = React.useMemo(\n    () =>\n      function PersonProperty() {\n        // console.log('person', schema, data)\n        return <Text value={data} block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderFileValue = React.useMemo(\n    () =>\n      function FileProperty() {\n        if (!data) return null\n\n        // TODO: assets should be previewable via image-zoom\n        const files = data\n          .filter((v) => v.length === 2)\n          .map((f) => f.flat().flat())\n\n        return files.map((file, i) => (\n          <components.Link\n            key={i}\n            className='notion-property-file'\n            href={mapImageUrl(file[2] as string, block!)}\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            <GracefulImage\n              alt={file[0] as string}\n              src={mapImageUrl(file[2] as string, block!)!}\n              loading='lazy'\n            />\n          </components.Link>\n        ))\n      },\n    [block, components, data, mapImageUrl]\n  )\n\n  const renderCheckboxValue = React.useMemo(\n    () =>\n      function CheckboxProperty() {\n        if (!data || !schema?.name) return null\n        const isChecked = data && data[0]?.[0] === 'Yes'\n\n        return (\n          <div className='notion-property-checkbox-container'>\n            <Checkbox isChecked={isChecked} blockId={undefined} />\n            <span className='notion-property-checkbox-text'>{schema.name}</span>\n          </div>\n        )\n      },\n    [data, schema]\n  )\n\n  const renderUrlValue = React.useMemo(\n    () =>\n      function UrlProperty() {\n        if (!data) return null\n\n        // TODO: refactor to less hacky solution\n        const d = structuredClone(data)\n\n        if (inline) {\n          try {\n            const url = new URL(d[0]?.[0]!)\n            d[0]![0] = url.hostname.replace(/^www\\./, '')\n          } catch {\n            // ignore invalid urls\n          }\n        }\n\n        return (\n          <Text\n            value={d}\n            block={block!}\n            inline={inline}\n            linkProps={{\n              target: '_blank',\n              rel: 'noreferrer noopener'\n            }}\n          />\n        )\n      },\n    [block, data, inline]\n  )\n\n  const renderEmailValue = React.useMemo(\n    () =>\n      function EmailProperty() {\n        return <Text value={data} linkProtocol='mailto' block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderPhoneNumberValue = React.useMemo(\n    () =>\n      function PhoneNumberProperty() {\n        return <Text value={data} linkProtocol='tel' block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderNumberValue = React.useMemo(\n    () =>\n      function NumberProperty() {\n        if (!data || !schema) return null\n        const value = Number.parseFloat(data[0]?.[0] || '0')\n        let output = ''\n\n        if (Number.isNaN(value)) {\n          return <Text value={data} block={block!} />\n        } else {\n          switch (schema.number_format) {\n            case 'number_with_commas':\n              output = formatNumber()(value)\n              break\n            case 'percent':\n              output = formatNumber({ suffix: '%' })(value * 100)\n              break\n            case 'dollar':\n              output = formatNumber({ prefix: '$', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'euro':\n              output = formatNumber({ prefix: '€', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'pound':\n              output = formatNumber({ prefix: '£', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'yen':\n              output = formatNumber({ prefix: '¥', round: 0 })(value)\n              break\n            case 'rupee':\n              output = formatNumber({ prefix: '₹', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'won':\n              output = formatNumber({ prefix: '₩', round: 0 })(value)\n              break\n            case 'yuan':\n              output = formatNumber({ prefix: 'CN¥', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'argentine_peso':\n              output = formatNumber({ prefix: 'ARS ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'baht':\n              output = formatNumber({ prefix: 'THB ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'canadian_dollar':\n              output = formatNumber({ prefix: 'CA$', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'chilean_peso':\n              output = formatNumber({ prefix: 'CLP ', round: 0 })(value)\n              break\n            case 'colombian_peso':\n              output = formatNumber({ prefix: 'COP ', round: 0 })(value)\n              break\n            case 'danish_krone':\n              output = formatNumber({ prefix: 'DKK ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'dirham':\n              output = formatNumber({ prefix: 'AED ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'forint':\n              output = formatNumber({ prefix: 'HUF ', round: 0 })(value)\n              break\n            case 'franc':\n              output = formatNumber({ prefix: 'CHF ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'hong_kong_dollar':\n              output = formatNumber({ prefix: 'HK$', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'koruna':\n              output = formatNumber({ prefix: 'CZK ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'krona':\n              output = formatNumber({ prefix: 'SEK ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'leu':\n              output = formatNumber({ prefix: 'RON ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'lira':\n              output = formatNumber({ prefix: 'TRY ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'mexican_peso':\n              output = formatNumber({ prefix: 'MX$', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'new_taiwan_dollar':\n              output = formatNumber({ prefix: 'NT$', round: 0 })(value)\n              break\n            case 'new_zealand_dollar':\n              output = formatNumber({ prefix: 'NZ$', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'norwegian_krone':\n              output = formatNumber({ prefix: 'NOK ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'number':\n              output = formatNumber()(value)\n              break\n            case 'philippine_peso':\n              output = formatNumber({ prefix: '₱', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'peruvian_sol':\n              output = formatNumber({ prefix: 'PEN ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'rand':\n              output = formatNumber({ prefix: 'ZAR ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'real':\n              output = formatNumber({ prefix: 'R$', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'ringgit':\n              output = formatNumber({ prefix: 'MYR ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'riyal':\n              output = formatNumber({ prefix: 'SAR ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'ruble':\n              output = formatNumber({ prefix: 'RUB ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'rupiah':\n              output = formatNumber({ prefix: 'IDR ', round: 0 })(value)\n              break\n            case 'shekel':\n              output = formatNumber({ prefix: '₪', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'singapore_dollar':\n              output = formatNumber({ prefix: 'SGD ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'uruguayan_peso':\n              output = formatNumber({ prefix: 'UYU ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            case 'zloty':\n              output = formatNumber({ prefix: 'PLN ', round: 2, padRight: 2 })(\n                value\n              )\n              break\n            default:\n              return <Text value={data} block={block!} />\n          }\n\n          return <Text value={[[output]]} block={block!} />\n        }\n      },\n    [block, data, schema]\n  )\n\n  const renderAutoIncrementIdValue = React.useMemo(\n    () =>\n      function renderAutoIncrementIdValueProperty() {\n        return <Text value={data} block={block!} />\n      },\n    [block, data]\n  )\n\n  const renderCreatedTimeValue = React.useMemo(\n    () =>\n      function CreatedTimeProperty() {\n        return format(new Date(block!.created_time), 'MMM d, YYY hh:mm aa')\n      },\n    [block]\n  )\n\n  const renderLastEditedTimeValue = React.useMemo(\n    () =>\n      function LastEditedTimeProperty() {\n        return format(new Date(block!.last_edited_time), 'MMM d, YYY hh:mm aa')\n      },\n    [block]\n  )\n\n  if (!schema) {\n    return null\n  }\n\n  let content = null\n\n  if (\n    data ||\n    schema.type === 'checkbox' ||\n    schema.type === 'title' ||\n    schema.type === 'formula' ||\n    schema.type === 'created_by' ||\n    schema.type === 'last_edited_by' ||\n    schema.type === 'created_time' ||\n    schema.type === 'last_edited_time'\n  ) {\n    switch (schema.type) {\n      case 'relation':\n        content = components.propertyRelationValue(props, renderRelationValue)\n        break\n\n      case 'formula':\n        // TODO\n        // console.log('formula', schema.formula, {\n        //   schema: collection?.schema,\n        //   properties: block?.properties\n        // })\n\n        content = components.propertyFormulaValue(props, renderFormulaValue)\n        break\n\n      case 'title':\n        content = components.propertyTitleValue(props, renderTitleValue)\n        break\n\n      case 'status': {\n        const value = data?.[0]?.[0] || ''\n        const option = schema.options?.find((option) => value === option.value)\n        const color = option?.color || 'default-inferred'\n\n        content = components.propertySelectValue(\n          {\n            ...props,\n            value,\n            option,\n            color\n          },\n          () => (\n            <div\n              className={cs(\n                `notion-property-${schema.type}-item`,\n                color && `notion-item-${color}`\n              )}\n            >\n              <span\n                className={cs(`notion-item-bullet-${color}`)}\n                style={{\n                  marginRight: '5px',\n                  borderRadius: '100%',\n                  height: '8px',\n                  width: '8px',\n                  display: 'inline-flex',\n                  flexShrink: 0\n                }}\n              />\n              {value}\n            </div>\n          )\n        )\n        break\n      }\n\n      case 'select':\n      // intentional fallthrough\n      case 'multi_select': {\n        const values = (data?.[0]?.[0] || '').split(',')\n\n        content = values.map((value, index) => {\n          const option = schema.options?.find(\n            (option) => value === option.value\n          )\n          const color = option?.color\n\n          return components.propertySelectValue(\n            {\n              ...props,\n              key: index,\n              value,\n              option,\n              color\n            },\n            () => (\n              <div\n                key={index}\n                className={cs(\n                  `notion-property-${schema.type}-item`,\n                  color && `notion-item-${color}`\n                )}\n              >\n                {value}\n              </div>\n            )\n          )\n        })\n        break\n      }\n\n      case 'person':\n        content = components.propertyPersonValue(props, renderPersonValue)\n        break\n\n      case 'file':\n        content = components.propertyFileValue(props, renderFileValue)\n        break\n\n      case 'checkbox':\n        content = components.propertyCheckboxValue(props, renderCheckboxValue)\n        break\n\n      case 'url':\n        content = components.propertyUrlValue(props, renderUrlValue)\n        break\n\n      case 'email':\n        content = components.propertyEmailValue(props, renderEmailValue)\n        break\n\n      case 'phone_number':\n        content = components.propertyPhoneNumberValue(\n          props,\n          renderPhoneNumberValue\n        )\n        break\n\n      case 'number':\n        content = components.propertyNumberValue(props, renderNumberValue)\n        break\n\n      case 'created_time':\n        content = components.propertyCreatedTimeValue(\n          props,\n          renderCreatedTimeValue\n        )\n        break\n\n      case 'last_edited_time':\n        content = components.propertyLastEditedTimeValue(\n          props,\n          renderLastEditedTimeValue\n        )\n        break\n\n      case 'created_by':\n        // TODO\n        // console.log('created_by', schema, data)\n        break\n\n      case 'last_edited_by':\n        // TODO\n        // console.log('last_edited_by', schema, data)\n        break\n\n      case 'auto_increment_id':\n        content = components.propertyTextValue(\n          props,\n          renderAutoIncrementIdValue\n        )\n        break\n\n      case 'text':\n        content = components.propertyTextValue(props, renderTextValue)\n        break\n\n      case 'date':\n        content = components.propertyDateValue(props, renderDateValue)\n        break\n\n      default:\n        content = <Text value={data} block={block!} />\n        break\n    }\n  }\n\n  return (\n    <span className={`notion-property notion-property-${schema.type}`}>\n      {content}\n    </span>\n  )\n}\n\nexport const PropertyImplMemo = React.memo(PropertyImpl)\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { addDays } from \"./addDays.js\";\nimport { addMonths } from \"./addMonths.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link add} function options.\n */\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes, and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes, and seconds to the given date.\n *\n * @typeParam DateType - The `Date` type the function operates on. Gets inferred from passed arguments. Allows using extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes, and seconds to be added.\n * @param options - An object with options\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport function add(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Add years and months\n  const _date = toDate(date, options?.in);\n  const dateWithMonths =\n    months || years ? addMonths(_date, months + years * 12) : _date;\n\n  // Add weeks and days\n  const dateWithDays =\n    days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes, and seconds\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1000;\n\n  return constructFrom(options?.in || date, +dateWithDays + msToAdd);\n}\n\n// Fallback for modularized imports:\nexport default add;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDate} function options.\n */\n\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The day of month\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nexport function getDate(date, options) {\n  return toDate(date, options?.in).getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDate;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDay} function options.\n */\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date, options) {\n  return toDate(date, options?.in).getDay();\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getHours} function options.\n */\n\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport function getHours(date, options) {\n  return toDate(date, options?.in).getHours();\n}\n\n// Fallback for modularized imports:\nexport default getHours;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getMinutes} function options.\n */\n\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport function getMinutes(date, options) {\n  return toDate(date, options?.in).getMinutes();\n}\n\n// Fallback for modularized imports:\nexport default getMinutes;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getMonth} function options.\n */\n\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The month index (0-11)\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nexport function getMonth(date, options) {\n  return toDate(date, options?.in).getMonth();\n}\n\n// Fallback for modularized imports:\nexport default getMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getYear} function options.\n */\n\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The year\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport function getYear(date, options) {\n  return toDate(date, options?.in).getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default getYear;\n","import { normalizeDates } from \"./normalizeDates.js\";\n\nexport function normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\n\n/**\n * The {@link differenceInDays} function options.\n */\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareLocalAsc(laterDate_, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarDays(laterDate_, earlierDate_),\n  );\n\n  laterDate_.setDate(laterDate_.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(laterDate_, earlierDate_) === -sign,\n  );\n\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(laterDate, earlierDate) {\n  const diff =\n    laterDate.getFullYear() - earlierDate.getFullYear() ||\n    laterDate.getMonth() - earlierDate.getMonth() ||\n    laterDate.getDate() - earlierDate.getDate() ||\n    laterDate.getHours() - earlierDate.getHours() ||\n    laterDate.getMinutes() - earlierDate.getMinutes() ||\n    laterDate.getSeconds() - earlierDate.getSeconds() ||\n    laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n\n  if (diff < 0) return -1;\n  if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInHour } from \"./constants.js\";\n\n/**\n * The {@link differenceInHours} function options.\n */\n\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport function differenceInHours(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  const diff = (+laterDate_ - +earlierDate_) / millisecondsInHour;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInHours;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { millisecondsInMinute } from \"./constants.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarYears} function options.\n */\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * );\n * //=> 2\n */\nexport function differenceInCalendarYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() - earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.js\";\n\n/**\n * The {@link differenceInYears} function options.\n */\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  // -1 if the left date is earlier than the right date\n  // 2023-12-31 - 2024-01-01 = -1\n  const sign = compareAsc(laterDate_, earlierDate_);\n\n  // First calculate the difference in calendar years\n  // 2024-01-01 - 2023-12-31 = 1 year\n  const diff = Math.abs(differenceInCalendarYears(laterDate_, earlierDate_));\n\n  // Now we need to calculate if the difference is full. To do that we set\n  // both dates to the same year and check if the both date's month and day\n  // form a full year.\n  laterDate_.setFullYear(1584);\n  earlierDate_.setFullYear(1584);\n\n  // For it to be true, when the later date is indeed later than the earlier date\n  // (2026-02-01 - 2023-12-10 = 3 years), the difference is full if\n  // the normalized later date is also later than the normalized earlier date.\n  // In our example, 1584-02-01 is earlier than 1584-12-10, so the difference\n  // is partial, hence we need to subtract 1 from the difference 3 - 1 = 2.\n  const partial = compareAsc(laterDate_, earlierDate_) === -sign;\n\n  const result = sign * (diff - +partial);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","import { normalizeInterval } from \"./_lib/normalizeInterval.js\";\nimport { add } from \"./add.js\";\nimport { differenceInDays } from \"./differenceInDays.js\";\nimport { differenceInHours } from \"./differenceInHours.js\";\nimport { differenceInMinutes } from \"./differenceInMinutes.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\nimport { differenceInYears } from \"./differenceInYears.js\";\n\n/**\n * The {@link intervalToDuration} function options.\n */\n\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert an interval object to a duration object.\n *\n * @param interval - The interval to convert to duration\n * @param options - The context options\n *\n * @returns The duration object\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * });\n * //=> { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\nexport function intervalToDuration(interval, options) {\n  const { start, end } = normalizeInterval(options?.in, interval);\n  const duration = {};\n\n  const years = differenceInYears(end, start);\n  if (years) duration.years = years;\n\n  const remainingMonths = add(start, { years: duration.years });\n  const months = differenceInMonths(end, remainingMonths);\n  if (months) duration.months = months;\n\n  const remainingDays = add(remainingMonths, { months: duration.months });\n  const days = differenceInDays(end, remainingDays);\n  if (days) duration.days = days;\n\n  const remainingHours = add(remainingDays, { days: duration.days });\n  const hours = differenceInHours(end, remainingHours);\n  if (hours) duration.hours = hours;\n\n  const remainingMinutes = add(remainingHours, { hours: duration.hours });\n  const minutes = differenceInMinutes(end, remainingMinutes);\n  if (minutes) duration.minutes = minutes;\n\n  const remainingSeconds = add(remainingMinutes, { minutes: duration.minutes });\n  const seconds = differenceInSeconds(end, remainingSeconds);\n  if (seconds) duration.seconds = seconds;\n\n  return duration;\n}\n\n// Fallback for modularized imports:\nexport default intervalToDuration;\n","import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link subDays} function options.\n */\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n * @param options - An object with options\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount, options) {\n  return addDays(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { addMonths } from \"./addMonths.js\";\n\n/**\n * The subMonths function options.\n */\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n * @param options - An object with options\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount, options) {\n  return addMonths(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { subDays } from \"./subDays.js\";\nimport { subMonths } from \"./subMonths.js\";\n\n/**\n * The {@link sub} function options.\n */\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n * @param options - An object with options\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  const withoutMonths = subMonths(date, months + years * 12, options);\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\n\n  const minutesToSub = minutes + hours * 60;\n  const secondsToSub = seconds + minutesToSub * 60;\n  const msToSub = secondsToSub * 1000;\n\n  return constructFrom(options?.in || date, +withoutDays - msToSub);\n}\n\n// Fallback for modularized imports:\nexport default sub;\n","/* eslint-disable security/detect-non-literal-regexp */\nimport type * as types from 'notion-types'\nimport { add } from 'date-fns/add'\nimport { format } from 'date-fns/format'\nimport { getDate } from 'date-fns/getDate'\nimport { getDay } from 'date-fns/getDay'\nimport { getHours } from 'date-fns/getHours'\nimport { getMinutes } from 'date-fns/getMinutes'\nimport { getMonth } from 'date-fns/getMonth'\nimport { getYear } from 'date-fns/getYear'\nimport { intervalToDuration } from 'date-fns/intervalToDuration'\nimport { sub } from 'date-fns/sub'\nimport { getDateValue, getTextContent } from 'notion-utils'\n\nexport interface EvalFormulaContext {\n  properties: types.PropertyMap\n  schema?: types.CollectionPropertySchemaMap\n  endDate?: boolean\n}\n\n/**\n * Evaluates a Notion formula expression to a result value.\n *\n * All built-in functions and operators are supported.\n *\n * NOTE: this needs a lot more testing, especially around covering all the different\n * function types and coercing different property values correctly.\n *\n * It does work for many of our test cases, however.\n *\n * @param formula - Formula to evaluate.\n * @param context - Collection context containing property schema and values.\n */\nexport function evalFormula(\n  formula: types.Formula,\n  context: EvalFormulaContext\n): types.FormulaResult {\n  const { endDate, ...ctx } = context\n\n  // TODO: coerce return type using `formula.return_type`\n  switch (formula?.type) {\n    case 'symbol':\n      // TODO: this isn't documented anywhere but seen in the wild\n      return formula.name === 'true'\n\n    case 'constant': {\n      const value = formula.value\n      switch (formula.result_type) {\n        case 'text':\n          return value\n        case 'number':\n          return Number.parseFloat(value)\n        default:\n          return value\n      }\n    }\n\n    case 'property': {\n      const value = ctx.properties[formula.id]\n      const text = getTextContent(value)\n\n      switch (formula.result_type) {\n        case 'text':\n          return text\n\n        case 'number':\n          return Number.parseFloat(text)\n\n        case 'boolean':\n          // TODO: handle chceckbox properties\n          if (typeof text === 'string') {\n            return text === 'true'\n          } else {\n            return !!text\n          }\n\n        case 'date': {\n          // console.log('date', text, value)\n\n          const v = getDateValue(value!)\n          if (v) {\n            if (endDate && v.end_date) {\n              const date = new Date(v.end_date)\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              )\n            } else {\n              const date = new Date(v.start_date)\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              )\n            }\n          } else {\n            return new Date(text)\n          }\n        }\n\n        default:\n          return text\n      }\n    }\n\n    case 'operator':\n    // All operators are exposed as functions, so we handle them the same\n\n    // eslint-disable-next-line no-fallthrough\n    case 'function':\n      return evalFunctionFormula(formula, ctx)\n\n    default:\n      // console.log(formula)\n      throw new Error(\n        `invalid or unsupported formula \"${(formula as any)?.type}`\n      )\n  }\n}\n\n/**\n * Evaluates a Notion formula function or operator expression.\n *\n * Note that all operators are also exposed as functions, so we handle them the same.\n *\n * @private\n */\nfunction evalFunctionFormula(\n  formula: types.FunctionFormula | types.OperatorFormula,\n  ctx: EvalFormulaContext\n): types.FormulaResult {\n  const args = formula?.args\n\n  switch (formula.name) {\n    // logic\n    // ------------------------------------------------------------------------\n\n    case 'and':\n      return evalFormula(args[0]!, ctx) && evalFormula(args[1]!, ctx)\n\n    case 'empty':\n      return !evalFormula(args[0]!, ctx)\n\n    case 'equal':\n      // eslint-disable-next-line eqeqeq\n      return evalFormula(args[0]!, ctx) == evalFormula(args[1]!, ctx)\n\n    case 'if':\n      return evalFormula(args[0]!, ctx)\n        ? evalFormula(args[1]!, ctx)\n        : evalFormula(args[2]!, ctx)\n\n    case 'larger':\n      return evalFormula(args[0]!, ctx) > evalFormula(args[1]!, ctx)\n\n    case 'largerEq':\n      return evalFormula(args[0]!, ctx) >= evalFormula(args[1]!, ctx)\n\n    case 'not':\n      return !evalFormula(args[0]!, ctx)\n\n    case 'or':\n      return evalFormula(args[0]!, ctx) || evalFormula(args[1]!, ctx)\n\n    case 'smaller':\n      return evalFormula(args[0]!, ctx) < evalFormula(args[1]!, ctx)\n\n    case 'smallerEq':\n      return evalFormula(args[0]!, ctx) <= evalFormula(args[1]!, ctx)\n\n    case 'unequal':\n      // eslint-disable-next-line eqeqeq\n      return evalFormula(args[0]!, ctx) != evalFormula(args[1]!, ctx)\n\n    // numeric\n    // ------------------------------------------------------------------------\n\n    case 'abs':\n      return Math.abs(evalFormula(args[0]!, ctx) as number)\n\n    case 'add': {\n      const v0 = evalFormula(args[0]!, ctx)\n      const v1 = evalFormula(args[1]!, ctx)\n\n      if (typeof v0 === 'number') {\n        return v0 + +v1\n      } else if (typeof v0 === 'string') {\n        return v0 + `${v1}`\n      } else {\n        // TODO\n        return v0\n      }\n    }\n\n    case 'cbrt':\n      return Math.cbrt(evalFormula(args[0]!, ctx) as number)\n\n    case 'ceil':\n      return Math.ceil(evalFormula(args[0]!, ctx) as number)\n\n    case 'divide':\n      return (\n        (evalFormula(args[0]!, ctx) as number) /\n        (evalFormula(args[1]!, ctx) as number)\n      )\n\n    case 'exp':\n      return Math.exp(evalFormula(args[0]!, ctx) as number)\n\n    case 'floor':\n      return Math.floor(evalFormula(args[0]!, ctx) as number)\n\n    case 'ln':\n      return Math.log(evalFormula(args[0]!, ctx) as number)\n\n    case 'log10':\n      return Math.log10(evalFormula(args[0]!, ctx) as number)\n\n    case 'log2':\n      return Math.log2(evalFormula(args[0]!, ctx) as number)\n\n    case 'max': {\n      const values = args.map((arg) => evalFormula(arg, ctx) as number)\n      return values.reduce(\n        (acc, value) => Math.max(acc, value),\n        Number.NEGATIVE_INFINITY\n      )\n    }\n\n    case 'min': {\n      const values = args.map((arg) => evalFormula(arg, ctx) as number)\n      return values.reduce(\n        (acc, value) => Math.min(acc, value),\n        Number.POSITIVE_INFINITY\n      )\n    }\n\n    case 'mod':\n      return (\n        (evalFormula(args[0]!, ctx) as number) %\n        (evalFormula(args[1]!, ctx) as number)\n      )\n\n    case 'multiply':\n      return (\n        (evalFormula(args[0]!, ctx) as number) *\n        (evalFormula(args[1]!, ctx) as number)\n      )\n\n    case 'pow':\n      return Math.pow(\n        evalFormula(args[0]!, ctx) as number,\n        evalFormula(args[1]!, ctx) as number\n      )\n\n    case 'round':\n      return Math.round(evalFormula(args[0]!, ctx) as number)\n\n    case 'sign':\n      return Math.sign(evalFormula(args[0]!, ctx) as number)\n\n    case 'sqrt':\n      return Math.sqrt(evalFormula(args[0]!, ctx) as number)\n\n    case 'subtract':\n      return (\n        (evalFormula(args[0]!, ctx) as number) -\n        (evalFormula(args[1]!, ctx) as number)\n      )\n\n    case 'toNumber':\n      return Number.parseFloat(evalFormula(args[0]!, ctx) as string)\n\n    case 'unaryMinus':\n      return (evalFormula(args[0]!, ctx) as number) * -1\n\n    case 'unaryPlus':\n      return Number.parseFloat(evalFormula(args[0]!, ctx) as string)\n\n    // text\n    // ------------------------------------------------------------------------\n\n    case 'concat': {\n      const values = args.map((arg) => evalFormula(arg, ctx) as number)\n      return values.join('')\n    }\n\n    case 'contains':\n      return (evalFormula(args[0]!, ctx) as string).includes(\n        evalFormula(args[1]!, ctx) as string\n      )\n\n    case 'format': {\n      const value = evalFormula(args[0]!, ctx)\n\n      switch (typeof value) {\n        case 'string':\n          return value\n\n        case 'object':\n          if (value instanceof Date) {\n            return format(value as Date, 'MMM d, YYY')\n          } else {\n            // shouldn't ever get here\n            return `${value}`\n          }\n\n        // case 'number':\n        // fallthrough\n        default:\n          return `${value}`\n      }\n    }\n\n    case 'join': {\n      const [delimiterArg, ...restArgs] = args\n      const delimiter = evalFormula(delimiterArg!, ctx) as string\n      const values = restArgs.map((arg) => evalFormula(arg, ctx) as number)\n      return values.join(delimiter)\n    }\n\n    case 'length':\n      return (evalFormula(args[0]!, ctx) as string).length\n\n    case 'replace': {\n      const value = evalFormula(args[0]!, ctx) as string\n      const regex = evalFormula(args[1]!, ctx) as string\n      const replacement = evalFormula(args[2]!, ctx) as string\n      return value.replace(new RegExp(regex), replacement)\n    }\n\n    case 'replaceAll': {\n      const value = evalFormula(args[0]!, ctx) as string\n      const regex = evalFormula(args[1]!, ctx) as string\n      const replacement = evalFormula(args[2]!, ctx) as string\n      return value.replaceAll(new RegExp(regex, 'g'), replacement)\n    }\n\n    case 'slice': {\n      const value = evalFormula(args[0]!, ctx) as string\n      const beginIndex = evalFormula(args[1]!, ctx) as number\n      const endIndex = args[2]\n        ? (evalFormula(args[2], ctx) as number)\n        : value.length\n      return value.slice(beginIndex, endIndex)\n    }\n\n    case 'test': {\n      const value = evalFormula(args[0]!, ctx) as string\n      const regex = evalFormula(args[1]!, ctx) as string\n      return new RegExp(regex).test(value)\n    }\n\n    // date & time\n    // ------------------------------------------------------------------------\n\n    case 'date':\n      return getDate(evalFormula(args[0]!, ctx) as Date)\n\n    case 'dateAdd': {\n      const date = evalFormula(args[0]!, ctx) as Date\n      const number = evalFormula(args[1]!, ctx) as number\n      const unit = evalFormula(args[1]!, ctx) as string\n      return add(date, { [unit]: number })\n    }\n\n    case 'dateBetween': {\n      const date1 = evalFormula(args[0]!, ctx) as Date\n      const date2 = evalFormula(args[1]!, ctx) as Date\n      const unit = evalFormula(args[1]!, ctx) as string\n      return (\n        intervalToDuration({\n          start: date2,\n          end: date1\n        }) as any\n      )[unit] as number\n    }\n\n    case 'dateSubtract': {\n      const date = evalFormula(args[0]!, ctx) as Date\n      const number = evalFormula(args[1]!, ctx) as number\n      const unit = evalFormula(args[1]!, ctx) as string\n      return sub(date, { [unit]: number })\n    }\n\n    case 'day':\n      return getDay(evalFormula(args[0]!, ctx) as Date)\n\n    case 'end':\n      return evalFormula(args[0]!, { ...ctx, endDate: true }) as Date\n\n    case 'formatDate': {\n      const date = evalFormula(args[0]!, ctx) as Date\n      const formatValue = (evalFormula(args[1]!, ctx) as string).replace(\n        'dddd',\n        'eeee'\n      )\n      return format(date, formatValue)\n    }\n\n    case 'fromTimestamp':\n      return new Date(evalFormula(args[0]!, ctx) as number)\n\n    case 'hour':\n      return getHours(evalFormula(args[0]!, ctx) as Date)\n\n    case 'minute':\n      return getMinutes(evalFormula(args[0]!, ctx) as Date)\n\n    case 'month':\n      return getMonth(evalFormula(args[0]!, ctx) as Date)\n\n    case 'now':\n      return new Date()\n\n    case 'start':\n      return evalFormula(args[0]!, { ...ctx, endDate: false }) as Date\n\n    case 'timestamp':\n      return (evalFormula(args[0]!, ctx) as Date).getTime()\n\n    case 'year':\n      return getYear(evalFormula(args[0]!, ctx) as Date)\n\n    default:\n      // console.log(formula)\n      throw new Error(\n        `invalid or unsupported function formula \"${(formula as any)?.type}`\n      )\n  }\n}\n","import * as React from 'react'\n\nimport { type CollectionViewProps } from '../types'\nimport { CollectionViewBoard } from './collection-view-board'\nimport { CollectionViewGallery } from './collection-view-gallery'\nimport { CollectionViewList } from './collection-view-list'\nimport { CollectionViewTable } from './collection-view-table'\n\nexport function CollectionViewImpl(props: CollectionViewProps) {\n  const { collectionView } = props\n\n  switch (collectionView.type) {\n    case 'table':\n      return <CollectionViewTable {...props} />\n\n    case 'gallery':\n      return <CollectionViewGallery {...props} />\n\n    case 'list':\n      return <CollectionViewList {...props} />\n\n    case 'board':\n      return <CollectionViewBoard {...props} />\n\n    default:\n      console.warn('unsupported collection view', collectionView)\n      return null\n  }\n}\n\nexport const CollectionView = React.memo(CollectionViewImpl)\n","import type * as types from 'notion-types'\nimport { type PageBlock } from 'notion-types'\nimport * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { EmptyIcon } from '../icons/empty-icon'\nimport { type CollectionViewProps } from '../types'\nimport { cs } from '../utils'\nimport { CollectionCard } from './collection-card'\nimport { CollectionGroup } from './collection-group'\nimport { getCollectionGroups } from './collection-utils'\nimport { Property } from './property'\n\nexport function CollectionViewBoard({\n  collection,\n  collectionView,\n  collectionData,\n  padding\n}: CollectionViewProps) {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding\n    )\n\n    return collectionGroups.map((group, index) => (\n      <CollectionGroup\n        key={index}\n        {...group}\n        summaryProps={{\n          style: {\n            paddingLeft: padding\n          }\n        }}\n        collectionViewComponent={(props) => (\n          <Board padding={padding} {...props} />\n        )}\n      />\n    ))\n  }\n\n  return (\n    <Board\n      padding={padding}\n      collectionView={collectionView}\n      collection={collection}\n      collectionData={collectionData}\n    />\n  )\n}\n\nfunction Board({\n  collectionView,\n  collectionData,\n  collection,\n  padding\n}: {\n  collection: types.Collection\n  collectionView: types.CollectionView\n  collectionData: types.CollectionQueryResult\n  padding?: number\n}) {\n  const { recordMap } = useNotionContext()\n  const {\n    board_cover = { type: 'none' },\n    board_cover_size = 'medium',\n    board_cover_aspect = 'cover'\n  } = collectionView?.format || {}\n\n  const boardGroups =\n    collectionView?.format?.board_columns ||\n    collectionView?.format?.board_groups2 ||\n    []\n\n  const boardGroupBy = collectionView?.format?.board_columns_by?.groupBy\n\n  const boardStyle = React.useMemo(\n    () => ({\n      paddingLeft: padding\n    }),\n    [padding]\n  )\n\n  return (\n    <div className='notion-board'>\n      <div\n        className={cs(\n          'notion-board-view',\n          `notion-board-view-size-${board_cover_size}`\n        )}\n        style={boardStyle}\n      >\n        <div className='notion-board-header'>\n          <div className='notion-board-header-inner'>\n            {boardGroups.map((p: any, index: number) => {\n              if (!(collectionData as any).board_columns?.results) {\n                // no groupResults in the data when collection is in a toggle\n                return null\n              }\n              const group = (collectionData as any).board_columns.results![\n                index\n              ]\n              const schema = collection.schema[p.property]\n\n              if (!group || !schema || p.hidden) {\n                return null\n              }\n\n              return (\n                <div className='notion-board-th' key={index}>\n                  <div className='notion-board-th-body'>\n                    {group.value?.value ? (\n                      <Property\n                        schema={schema}\n                        data={[\n                          [\n                            group.value?.value[boardGroupBy] ||\n                              group.value?.value\n                          ]\n                        ]}\n                        collection={collection}\n                      />\n                    ) : (\n                      <span>\n                        <EmptyIcon className='notion-board-th-empty' />\n                        {schema?.name ? `No ${schema.name}` : 'No Select'}\n                      </span>\n                    )}\n\n                    <span className='notion-board-th-count'>{group.total}</span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        <div className='notion-board-header-placeholder' />\n\n        <div className='notion-board-body'>\n          {boardGroups.map((p: any, index: number) => {\n            const boardResults = (collectionData as any).board_columns?.results\n            if (!boardResults) return null\n            if (!p?.value?.type) return null\n\n            const schema = collection.schema[p.property]\n            const group = (collectionData as any)[\n              `results:${p?.value?.type}:${p?.value?.value || 'uncategorized'}`\n            ]\n\n            if (!group || !schema || p.hidden) {\n              return null\n            }\n\n            return (\n              <div className='notion-board-group' key={index}>\n                {group.blockIds?.map((blockId: string) => {\n                  const block = recordMap.block[blockId]?.value as PageBlock\n                  if (!block) return null\n\n                  return (\n                    <CollectionCard\n                      className='notion-board-group-card'\n                      collection={collection}\n                      block={block}\n                      cover={board_cover}\n                      coverSize={board_cover_size}\n                      coverAspect={board_cover_aspect}\n                      properties={collectionView.format?.board_properties}\n                      key={blockId}\n                    />\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nexport function EmptyIcon(props: any) {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 14 14' width='14'>\n      <path d='M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z'></path>\n    </svg>\n  )\n}\n","import type * as React from 'react'\nimport { type ImageBlock } from 'notion-types'\nimport { getTextContent } from 'notion-utils'\n\nimport { LazyImage } from '../components/lazy-image'\nimport { dummyLink, NotionContextProvider, useNotionContext } from '../context'\nimport { type CollectionCardProps } from '../types'\nimport { cs } from '../utils'\nimport { Property } from './property'\n\nexport function CollectionCard({\n  collection,\n  block,\n  cover,\n  coverSize,\n  coverAspect,\n  properties,\n  className,\n  ...rest\n}: CollectionCardProps) {\n  const ctx = useNotionContext()\n  const {\n    components,\n    recordMap,\n    mapPageUrl,\n    mapImageUrl,\n    isLinkCollectionToUrlProperty\n  } = ctx\n  let coverContent = null\n\n  const { page_cover_position = 0.5, card_cover_position = 0.5 } =\n    block.format || ({} as any)\n  const coverPosition = (1 - page_cover_position) * 100\n  const cardCoverPosition = (1 - card_cover_position) * 100\n\n  if (cover?.type === 'page_content') {\n    const contentBlockId = block.content?.find((blockId) => {\n      const block = recordMap.block[blockId]?.value\n\n      return block?.type === 'image'\n    })\n\n    if (contentBlockId) {\n      const contentBlock = recordMap.block[contentBlockId]?.value as ImageBlock\n\n      const source =\n        contentBlock.properties?.source?.[0]?.[0] ??\n        contentBlock.format?.display_source\n\n      if (source) {\n        const src = mapImageUrl(source, contentBlock)\n        const caption = contentBlock.properties?.caption?.[0]?.[0]\n\n        coverContent = (\n          <LazyImage\n            src={src}\n            alt={caption || 'notion image'}\n            style={{\n              objectFit: coverAspect,\n              objectPosition: `center ${cardCoverPosition}%`\n            }}\n          />\n        )\n      }\n    }\n\n    if (!coverContent) {\n      coverContent = <div className='notion-collection-card-cover-empty' />\n    }\n  } else if (cover?.type === 'page_cover') {\n    const { page_cover } = block.format || {}\n\n    if (page_cover) {\n      const coverPosition = (1 - page_cover_position) * 100\n\n      coverContent = (\n        <LazyImage\n          src={mapImageUrl(page_cover, block)}\n          alt={getTextContent(block.properties?.title)}\n          style={{\n            objectFit: coverAspect,\n            objectPosition: `center ${coverPosition}%`\n          }}\n        />\n      )\n    }\n  } else if (cover?.type === 'property') {\n    const { property } = cover\n    if (!property) return null\n\n    const schema = collection.schema[property]\n    const data = block.properties?.[property as keyof typeof block.properties]\n\n    if (schema && data) {\n      if (schema.type === 'file') {\n        const files = data\n          .filter((v) => v.length === 2)\n          .map((f) => f.flat().flat())\n        const file = files[0]\n\n        if (file) {\n          coverContent = (\n            <span className={`notion-property-${schema.type}`}>\n              <LazyImage\n                alt={file[0] as string}\n                src={mapImageUrl(file[2] as string, block)}\n                style={{\n                  objectFit: coverAspect,\n                  objectPosition: `center ${coverPosition}%`\n                }}\n              />\n            </span>\n          )\n        }\n      } else {\n        coverContent = (\n          <Property propertyId={property} schema={schema} data={data} />\n        )\n      }\n    }\n  }\n\n  let linkProperties: any[] = []\n  // check if a visible property has a url and we settings are for linking to it for the card\n  if (isLinkCollectionToUrlProperty && properties) {\n    linkProperties = properties\n      .filter(\n        (p) =>\n          p.visible && p.property !== 'title' && collection.schema[p.property]\n      )\n      .filter((p) => {\n        if (!block.properties) return false\n        const schema = collection.schema[p.property]\n\n        return schema?.type === 'url'\n      })\n      .map((p) => {\n        return block.properties?.[p.property as keyof typeof block.properties]\n      })\n      .filter((p) => p?.[0])\n  }\n\n  let url = null\n  if (\n    linkProperties &&\n    linkProperties.length > 0 &&\n    linkProperties[0].length > 0 &&\n    linkProperties[0][0].length > 0\n  ) {\n    url = linkProperties[0][0][0]\n  }\n\n  const innerCard = (\n    <>\n      {(coverContent || cover?.type !== 'none') && (\n        <div className='notion-collection-card-cover'>{coverContent}</div>\n      )}\n\n      <div className='notion-collection-card-body'>\n        <div className='notion-collection-card-property'>\n          <Property\n            schema={collection.schema.title}\n            data={block?.properties?.title}\n            block={block}\n            collection={collection}\n          />\n        </div>\n\n        {properties\n          ?.filter(\n            (p) =>\n              p.visible &&\n              p.property !== 'title' &&\n              collection.schema[p.property]\n          )\n          .map((p) => {\n            if (!block.properties || !p.property) return null\n            const schema = collection.schema[p.property]\n            const data =\n              block.properties[p.property as keyof typeof block.properties]\n\n            return (\n              <div className='notion-collection-card-property' key={p.property}>\n                <Property\n                  schema={schema}\n                  data={data}\n                  block={block}\n                  collection={collection}\n                  inline\n                />\n              </div>\n            )\n          })}\n      </div>\n    </>\n  )\n\n  return (\n    <NotionContextProvider\n      {...ctx}\n      components={{\n        ...ctx.components,\n        // Disable <a> tabs in all child components so we don't create invalid DOM\n        // trees with stacked <a> tags.\n        Link: (props: any) => {\n          return (\n            <form action={props.href} target='_blank'>\n              <input\n                type='submit'\n                value={props?.children?.props?.children ?? props.href}\n                className='nested-form-link notion-link'\n              />\n            </form>\n          )\n        },\n        PageLink: dummyLink\n      }}\n    >\n      {isLinkCollectionToUrlProperty && url ? (\n        <components.Link\n          className={cs(\n            'notion-collection-card',\n            `notion-collection-card-size-${coverSize}`,\n            className\n          )}\n          href={url}\n          {...rest}\n        >\n          {innerCard}\n        </components.Link>\n      ) : (\n        <components.PageLink\n          className={cs(\n            'notion-collection-card',\n            `notion-collection-card-size-${coverSize}`,\n            className\n          )}\n          href={mapPageUrl(block.id)}\n          {...rest}\n        >\n          {innerCard}\n        </components.PageLink>\n      )}\n    </NotionContextProvider>\n  )\n}\n","import type * as React from 'react'\n\nimport { type CollectionGroupProps } from '../types'\nimport { Property } from './property'\n\nexport function CollectionGroup({\n  collectionViewComponent: CollectionViewComponent,\n  collection,\n  collectionGroup,\n  schema,\n  value,\n  hidden,\n  summaryProps,\n  detailsProps,\n  ...rest\n}: CollectionGroupProps) {\n  if (hidden) return null\n\n  return (\n    <details open className='notion-collection-group' {...detailsProps}>\n      <summary className='notion-collection-group-title' {...summaryProps}>\n        <div>\n          <Property schema={schema} data={[[value]]} collection={collection} />\n\n          <span className='notion-board-th-count'>\n            {collectionGroup?.total}\n          </span>\n        </div>\n      </summary>\n\n      <CollectionViewComponent\n        collection={collection}\n        collectionGroup={collectionGroup}\n        {...rest}\n      />\n    </details>\n  )\n}\n","import { format } from 'date-fns/format'\n\nexport function getCollectionGroups(\n  collection: any,\n  collectionView: any,\n  collectionData: any,\n  ...rest: any[]\n): any[] {\n  const elems = collectionView?.format?.collection_groups || []\n  return elems.map(({ property, hidden, value: { value, type } }: any) => {\n    const isUncategorizedValue = value === undefined\n    const isDateValue = value?.range\n    // TODO: review dates reducers\n    const queryLabel = isUncategorizedValue\n      ? 'uncategorized'\n      : isDateValue\n        ? value.range?.start_date || value.range?.end_date\n        : value?.value || value\n\n    const collectionGroup = collectionData[`results:${type}:${queryLabel}`]\n    let queryValue =\n      !isUncategorizedValue && (isDateValue || value?.value || value)\n    let schema = collection.schema[property]\n\n    // Checkbox boolen value must be Yes||No\n    if (type === 'checkbox' && value) {\n      queryValue = 'Yes'\n    }\n\n    if (isDateValue) {\n      schema = {\n        type: 'text',\n        name: 'text'\n      }\n\n      // TODO: review dates format based on value.type ('week'|'month'|'year')\n      queryValue = format(new Date(queryLabel), 'MMM d, YYY hh:mm aa')\n    }\n\n    return {\n      collectionGroup,\n      schema,\n      value: queryValue || 'No description',\n      hidden,\n      collection,\n      collectionView,\n      collectionData,\n      blockIds: collectionGroup?.blockIds,\n      ...rest\n    }\n  })\n}\n","import type * as types from 'notion-types'\nimport type * as React from 'react'\nimport { type PageBlock } from 'notion-types'\n\nimport { useNotionContext } from '../context'\nimport { type CollectionViewProps } from '../types'\nimport { cs } from '../utils'\nimport { CollectionCard } from './collection-card'\nimport { CollectionGroup } from './collection-group'\nimport { getCollectionGroups } from './collection-utils'\n\nconst defaultBlockIds: string[] = []\n\nexport function CollectionViewGallery({\n  collection,\n  collectionView,\n  collectionData\n}: CollectionViewProps) {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    )\n\n    return collectionGroups.map((group, index) => (\n      <CollectionGroup\n        key={index}\n        {...group}\n        collectionViewComponent={Gallery}\n      />\n    ))\n  }\n\n  const blockIds: string[] =\n    (collectionData.collection_group_results?.blockIds ??\n      (\n        collectionData[\n          'results:relation:uncategorized' as keyof typeof collectionData\n        ] as any\n      )?.blockIds ??\n      collectionData.blockIds) ||\n    defaultBlockIds\n\n  return (\n    <Gallery\n      collectionView={collectionView}\n      collection={collection}\n      blockIds={blockIds}\n    />\n  )\n}\n\nfunction Gallery({\n  blockIds,\n  collectionView,\n  collection\n}: {\n  blockIds?: string[]\n  collection: types.Collection\n  collectionView: types.CollectionView\n}) {\n  const { recordMap } = useNotionContext()\n  const {\n    gallery_cover = { type: 'none' },\n    gallery_cover_size = 'medium',\n    gallery_cover_aspect = 'cover'\n  } = collectionView.format || {}\n\n  return (\n    <div className='notion-gallery'>\n      <div className='notion-gallery-view'>\n        <div\n          className={cs(\n            'notion-gallery-grid',\n            `notion-gallery-grid-size-${gallery_cover_size}`\n          )}\n        >\n          {blockIds?.map((blockId) => {\n            const block = recordMap.block[blockId]?.value as PageBlock\n            if (!block) return null\n\n            return (\n              <CollectionCard\n                collection={collection}\n                block={block}\n                cover={gallery_cover}\n                coverSize={gallery_cover_size}\n                coverAspect={gallery_cover_aspect}\n                properties={collectionView.format?.gallery_properties}\n                key={blockId}\n              />\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import type * as types from 'notion-types'\nimport type * as React from 'react'\nimport { type PageBlock } from 'notion-types'\n\nimport { useNotionContext } from '../context'\nimport { type CollectionViewProps } from '../types'\nimport { CollectionGroup } from './collection-group'\nimport { getCollectionGroups } from './collection-utils'\nimport { Property } from './property'\n\nconst defaultBlockIds: string[] = []\n\nexport function CollectionViewList({\n  collection,\n  collectionView,\n  collectionData\n}: CollectionViewProps) {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    )\n\n    return collectionGroups.map((group, key) => (\n      <CollectionGroup key={key} {...group} collectionViewComponent={List} />\n    ))\n  }\n\n  const blockIds =\n    (collectionData.collection_group_results?.blockIds ??\n      collectionData.blockIds) ||\n    defaultBlockIds\n\n  return (\n    <List\n      blockIds={blockIds}\n      collection={collection}\n      collectionView={collectionView}\n    />\n  )\n}\n\nfunction List({\n  blockIds = [],\n  collection,\n  collectionView\n}: {\n  blockIds?: string[]\n  collection: types.Collection\n  collectionView: types.CollectionView\n}) {\n  const { components, recordMap, mapPageUrl } = useNotionContext()\n\n  return (\n    <div className='notion-list-collection'>\n      <div className='notion-list-view'>\n        <div className='notion-list-body'>\n          {blockIds?.map((blockId) => {\n            const block = recordMap.block[blockId]?.value as PageBlock\n            if (!block) return null\n\n            const titleSchema = collection.schema.title\n            const titleData = block?.properties?.title\n\n            return (\n              <components.PageLink\n                className='notion-list-item notion-page-link'\n                href={mapPageUrl(block.id)}\n                key={blockId}\n              >\n                <div className='notion-list-item-title'>\n                  <Property\n                    schema={titleSchema}\n                    data={titleData}\n                    block={block}\n                    collection={collection}\n                    linkToTitlePage={false}\n                  />\n                </div>\n\n                <div className='notion-list-item-body'>\n                  {collectionView.format?.list_properties\n                    ?.filter((p: any) => p.visible)\n                    .map((p: any) => {\n                      const schema = collection.schema[p.property]\n                      const data =\n                        block &&\n                        block.properties?.[\n                          p.property as keyof typeof block.properties\n                        ]\n\n                      if (!schema) {\n                        return null\n                      }\n\n                      return (\n                        <div\n                          className='notion-list-item-property'\n                          key={p.property}\n                        >\n                          <Property\n                            schema={schema}\n                            data={data}\n                            block={block}\n                            collection={collection}\n                          />\n                        </div>\n                      )\n                    })}\n                </div>\n              </components.PageLink>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","// Imported from https://github.com/streamich/react-use\nimport {\n  type Dispatch,\n  type EffectCallback,\n  type SetStateAction,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react'\n\nconst noop = () => {}\n\nfunction on<T extends Window | Document | HTMLElement | EventTarget>(\n  obj: T | null,\n  ...args:\n    | Parameters<T['addEventListener']>\n    | [string, ((...args: any[]) => any) | null, ...any]\n): void {\n  if (obj && obj.addEventListener) {\n    obj.addEventListener(\n      ...(args as Parameters<HTMLElement['addEventListener']>)\n    )\n  }\n}\n\nfunction off<T extends Window | Document | HTMLElement | EventTarget>(\n  obj: T | null,\n  ...args:\n    | Parameters<T['removeEventListener']>\n    | [string, ((...args: any[]) => any) | null, ...any]\n): void {\n  if (obj && obj.removeEventListener) {\n    obj.removeEventListener(\n      ...(args as Parameters<HTMLElement['removeEventListener']>)\n    )\n  }\n}\n\nconst isBrowser = typeof window !== 'undefined'\n\nexport const useWindowSize = (\n  initialWidth = Infinity,\n  initialHeight = Infinity\n) => {\n  const [state, setState] = useRafState<{ width: number; height: number }>({\n    width: isBrowser ? window.innerWidth : initialWidth,\n    height: isBrowser ? window.innerHeight : initialHeight\n  })\n\n  useEffect((): (() => void) | void => {\n    if (isBrowser) {\n      const handler = () => {\n        setState({\n          width: window.innerWidth,\n          height: window.innerHeight\n        })\n      }\n\n      on(window, 'resize', handler)\n\n      return () => {\n        off(window, 'resize', handler)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return state\n}\n\nexport const useEffectOnce = (effect: EffectCallback) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, [])\n}\n\nexport const useUnmount = (fn: () => any): void => {\n  const fnRef = useRef(fn)\n\n  // update the ref each render so if it change the newest callback will be invoked\n  fnRef.current = fn\n\n  // eslint-disable-next-line unicorn/consistent-function-scoping\n  useEffectOnce(() => () => fnRef.current())\n}\n\nexport const useRafState = <S>(\n  initialState: S | (() => S)\n): [S, Dispatch<SetStateAction<S>>] => {\n  const frame = useRef(0)\n  const [state, setState] = useState(initialState)\n\n  const setRafState = useCallback((value: S | ((prevState: S) => S)) => {\n    cancelAnimationFrame(frame.current)\n\n    frame.current = requestAnimationFrame(() => {\n      setState(value)\n    })\n  }, [])\n\n  useUnmount(() => {\n    cancelAnimationFrame(frame.current)\n  })\n\n  return [state, setRafState]\n}\n\ntype parserOptions<T> =\n  | {\n      raw: true\n    }\n  | {\n      raw: false\n      serializer: (value: T) => string\n      deserializer: (value: string) => T\n    }\n\nexport const useLocalStorage = <T>(\n  key: string,\n  initialValue?: T,\n  options?: parserOptions<T>\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] => {\n  if (!isBrowser) {\n    return [initialValue as T, noop, noop]\n  }\n  if (!key) {\n    throw new Error('useLocalStorage key may not be falsy')\n  }\n\n  const deserializer = options\n    ? options.raw\n      ? (value: any) => value\n      : options.deserializer\n    : JSON.parse\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const initializer = useRef((key: string) => {\n    try {\n      const serializer = options\n        ? options.raw\n          ? String\n          : options.serializer\n        : JSON.stringify\n\n      const localStorageValue = localStorage.getItem(key)\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue)\n      } else {\n        if (initialValue) {\n          localStorage.setItem(key, serializer(initialValue))\n        }\n        return initialValue\n      }\n    } catch {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue\n    }\n  })\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [state, setState] = useState<T | undefined>(() =>\n    initializer.current(key)\n  )\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useLayoutEffect(() => setState(initializer.current(key)), [key])\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const set: Dispatch<SetStateAction<T | undefined>> = useCallback(\n    (valOrFunc) => {\n      try {\n        const newState =\n          typeof valOrFunc === 'function'\n            ? (valOrFunc as any)(state)\n            : valOrFunc\n        if (newState === undefined) return\n        let value: string\n\n        if (options)\n          if (options.raw)\n            if (typeof newState === 'string') value = newState\n            else value = JSON.stringify(newState)\n          else if (options.serializer) value = options.serializer(newState)\n          else value = JSON.stringify(newState)\n        else value = JSON.stringify(newState)\n\n        localStorage.setItem(key, value)\n        setState(deserializer(value))\n      } catch {\n        // If user is in private mode or has storage restriction\n        // localStorage can throw. Also JSON.stringify can throw.\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key, setState]\n  )\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const remove = useCallback(() => {\n    try {\n      localStorage.removeItem(key)\n      setState(undefined)\n    } catch {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw.\n    }\n  }, [key, setState])\n\n  return [state, set, remove]\n}\n\n// Style mismatches between server rendering and client hydration can act\n// unpredictably. Styles that depend on client state should use this hook to prevent\n// a hydration mismatch by preserving the server style until the component is mounted.\n// More details here:\n// https://github.com/vercel/next.js/issues/17463\nexport const useClientStyle = (\n  clientStyle: React.CSSProperties,\n  serverStyle: React.CSSProperties = {}\n) => {\n  const [isMounted, setIsMounted] = useState(false)\n  useEffect(() => {\n    setIsMounted(true)\n  }, [])\n\n  return isMounted ? clientStyle : serverStyle\n}\n","import type * as React from 'react'\n\nimport { useNotionContext } from '../context'\nimport { type CollectionViewProps } from '../types'\nimport { cs } from '../utils'\nimport { CollectionColumnTitle } from './collection-column-title'\nimport { CollectionGroup } from './collection-group'\nimport { getCollectionGroups } from './collection-utils'\nimport { Property } from './property'\nimport { useClientStyle } from './react-use'\n\nconst defaultBlockIds: string[] = []\n\nexport function CollectionViewTable({\n  collection,\n  collectionView,\n  collectionData,\n  padding,\n  width\n}: CollectionViewProps) {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding,\n      width\n    )\n\n    return collectionGroups.map((group, index) => (\n      <CollectionGroup\n        key={index}\n        {...group}\n        collectionViewComponent={(props) => (\n          <Table {...props} padding={padding} width={width} />\n        )}\n        summaryProps={{\n          style: {\n            paddingLeft: padding,\n            paddingRight: padding\n          }\n        }}\n      />\n    ))\n  }\n\n  const blockIds =\n    (collectionData.collection_group_results?.blockIds ??\n      collectionData.blockIds) ||\n    defaultBlockIds\n\n  return (\n    <Table\n      blockIds={blockIds}\n      collection={collection}\n      collectionView={collectionView}\n      padding={padding}\n      width={width}\n    />\n  )\n}\n\nfunction Table({\n  blockIds = [],\n  collection,\n  collectionView,\n  width,\n  padding\n}: {\n  blockIds?: string[]\n} & Omit<CollectionViewProps, 'collectionData'>) {\n  const { recordMap, linkTableTitleProperties } = useNotionContext()\n\n  const tableStyle = useClientStyle(\n    {\n      width,\n      maxWidth: width\n    },\n    { visibility: 'hidden' }\n  )\n\n  const tableViewStyle = useClientStyle({\n    paddingLeft: padding,\n    paddingRight: padding\n  })\n\n  let properties = []\n\n  if (collectionView.format?.table_properties) {\n    properties = collectionView.format.table_properties.filter(\n      (p: any) => p.visible && collection.schema[p.property]\n    )\n  } else {\n    properties = [{ property: 'title' }].concat(\n      Object.keys(collection.schema)\n        .filter((p) => p !== 'title')\n        .map((property) => ({ property }))\n    )\n  }\n\n  return (\n    <div className='notion-table' style={tableStyle}>\n      <div className='notion-table-view' style={tableViewStyle}>\n        {!!properties.length && (\n          <>\n            <div className='notion-table-header'>\n              <div className='notion-table-header-inner'>\n                {properties.map((p: any) => {\n                  const schema = collection.schema?.[p.property]\n                  const isTitle = p.property === 'title'\n                  const style: React.CSSProperties = {}\n\n                  if (p.width) {\n                    style.width = p.width\n                  } else if (isTitle) {\n                    style.width = 280\n                  } else {\n                    style.width = 200\n                    // style.width = `${100.0 / properties.length}%`\n                  }\n\n                  return (\n                    <div className='notion-table-th' key={p.property}>\n                      <div\n                        className='notion-table-view-header-cell'\n                        style={style}\n                      >\n                        <div className='notion-table-view-header-cell-inner'>\n                          {schema && <CollectionColumnTitle schema={schema} />}\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n\n            <div className='notion-table-header-placeholder'></div>\n\n            <div className='notion-table-body'>\n              {blockIds?.map((blockId) => (\n                <div className='notion-table-row' key={blockId}>\n                  {properties.map((p: any) => {\n                    const schema = collection.schema?.[p.property]\n                    const block = recordMap.block[blockId]?.value\n                    const data = block?.properties?.[p.property]\n                    const isTitle = p.property === 'title'\n                    const style: React.CSSProperties = {}\n\n                    if (p.width) {\n                      style.width = p.width\n                    } else if (isTitle) {\n                      style.width = 280\n                    } else {\n                      style.width = 200\n                      // style.width = `${100.0 / properties.length}%`\n                    }\n\n                    return (\n                      <div\n                        key={p.property}\n                        className={cs(\n                          'notion-table-cell',\n                          `notion-table-cell-${schema?.type}`\n                        )}\n                        style={style}\n                      >\n                        <Property\n                          schema={schema}\n                          data={data}\n                          block={block}\n                          collection={collection}\n                          linkToTitlePage={linkTableTitleProperties}\n                        />\n                      </div>\n                    )\n                  })}\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","names":["result","throttle","format","getBlockParentPage","getTextContent","React","getBlockTitle","React","React","parsePageId","React","match","getBlockTitle","React","jsx","jsx","React","React","jsx","jsx","jsxs","jsx","jsxs","jsx","jsx","jsxs","Fragment","jsx","jsx","jsxs","Fragment","jsx","jsxs","result","getBlockTitle","throttle","ctx","Fragment","jsx","jsxs","React","jsx","jsxs","React","Fragment","jsx","jsxs","Fragment","jsx","jsxs","jsx","parsePageId","jsx","jsx","React","jsx","jsx","jsx","jsx","getBlockTitle","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","jsx","iconMap","jsx","jsxs","format","defaultOptions","defaultOptions","defaultOptions","localize","formatLong","format","defaultOptions","React","getTextContent","ctx","jsx","jsxs","content","_a","formatNumber","option","jsx","jsxs","_a","_b","_c","React","React","jsx","getTextContent","Fragment","jsx","jsxs","ctx","_a","block","coverPosition","getTextContent","_b","_c","jsx","jsxs","_a","jsx","jsxs","_a","_b","_c","_d","jsx","jsx","jsxs","defaultBlockIds","_a","useCallback","useEffect","useRef","useState","isBrowser","key","Fragment","jsx","jsxs","defaultBlockIds","_a","jsx","Fragment","jsx","jsxs","isServer","ctx","collectionViewId","getBlockParentPage","_a","width","padding","getTextContent"]}